[{"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js":"1","/Users/pasanmadushan/Desktop/Front-end-react/src/App.js":"2","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AwaitingShipment.js":"3","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AwaitingDelivery.js":"4","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js":"5","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js":"6","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/NewItem.js":"7","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/TrackOrder.js":"8","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/OrderView.js":"9","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CartPage.js":"10","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AllOrders.js":"11","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SellerDashboard.js":"12","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CardDetails.js":"13","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/SignUp.js":"14","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/FeedbackPage.js":"15","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Seller/SellerHome.js":"16","/Users/pasanmadushan/Desktop/Front-end-react/src/ProtectedRoute.js":"17","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js":"18","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js":"19","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js":"20","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/Home.js":"21","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js":"22","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/SignIn.js":"23","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js":"24","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipmentCard.js":"25","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Deliverycard.js":"26","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePasswordForm.js":"27","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js":"28","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js":"29","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js":"30","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePersonalDetForm.js":"31","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBarHome.js":"32","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCards.js":"33","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddBankCard.js":"34","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTiles.js":"35","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Seller/Card.js":"36","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Seller/Middle.js":"37","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomFooter.js":"38","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/Footer.js":"39","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomItems.js":"40","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js":"41","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js":"42","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Slider/SliderData.js":"43","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/Register.js":"44","/Users/pasanmadushan/Desktop/Front-end-react/src/API_Service/checkLogin.js":"45","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/LogIn.js":"46","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Slider/ImageSlider.js":"47","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Pricing/Pricing.js":"48","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShopNow.js":"49","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js":"50","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCard.js":"51","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTile.js":"52","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js":"53","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js":"54","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/Footer.elements.js":"55","/Users/pasanmadushan/Desktop/Front-end-react/src/globalStyles.js":"56","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomFooter.elements.js":"57","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/FormSuccess.js":"58","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/FormSignup.js":"59","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/FormSuccess.js":"60","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/FormLogIn.js":"61","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Pricing/Pricing.elements.js":"62","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/validateInfo.js":"63","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/useForm.js":"64","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/useForm.js":"65","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/validateInfo.js":"66"},{"size":319,"mtime":1613760115809,"results":"67","hashOfConfig":"68"},{"size":3436,"mtime":1613814071322,"results":"69","hashOfConfig":"68"},{"size":3731,"mtime":1613760115809,"results":"70","hashOfConfig":"68"},{"size":3964,"mtime":1613760115809,"results":"71","hashOfConfig":"68"},{"size":2736,"mtime":1613813095609,"results":"72","hashOfConfig":"68"},{"size":7646,"mtime":1614477026094,"results":"73","hashOfConfig":"68"},{"size":4441,"mtime":1613760115811,"results":"74","hashOfConfig":"68"},{"size":1674,"mtime":1612895989640,"results":"75","hashOfConfig":"68"},{"size":5485,"mtime":1613760115812,"results":"76","hashOfConfig":"68"},{"size":11480,"mtime":1613760115810,"results":"77","hashOfConfig":"68"},{"size":7973,"mtime":1614477026093,"results":"78","hashOfConfig":"68"},{"size":2684,"mtime":1612896007885,"results":"79","hashOfConfig":"68"},{"size":6194,"mtime":1613813095608,"results":"80","hashOfConfig":"68"},{"size":521,"mtime":1613760115810,"results":"81","hashOfConfig":"68"},{"size":4603,"mtime":1613760115811,"results":"82","hashOfConfig":"68"},{"size":1735,"mtime":1613760115812,"results":"83","hashOfConfig":"68"},{"size":425,"mtime":1613813115263,"results":"84","hashOfConfig":"68"},{"size":8486,"mtime":1613813115268,"results":"85","hashOfConfig":"68"},{"size":7774,"mtime":1614477026095,"results":"86","hashOfConfig":"68"},{"size":4470,"mtime":1613813115267,"results":"87","hashOfConfig":"68"},{"size":830,"mtime":1613813115267,"results":"88","hashOfConfig":"68"},{"size":3613,"mtime":1613813115264,"results":"89","hashOfConfig":"68"},{"size":1091,"mtime":1613813115268,"results":"90","hashOfConfig":"68"},{"size":599,"mtime":1612503070407,"results":"91","hashOfConfig":"68"},{"size":2319,"mtime":1613760115803,"results":"92","hashOfConfig":"68"},{"size":2470,"mtime":1613760115799,"results":"93","hashOfConfig":"68"},{"size":4231,"mtime":1613813095601,"results":"94","hashOfConfig":"68"},{"size":1812,"mtime":1612895989630,"results":"95","hashOfConfig":"68"},{"size":433,"mtime":1613813095603,"results":"96","hashOfConfig":"68"},{"size":2433,"mtime":1613813095598,"results":"97","hashOfConfig":"68"},{"size":4671,"mtime":1613813095601,"results":"98","hashOfConfig":"68"},{"size":1059,"mtime":1613760115801,"results":"99","hashOfConfig":"68"},{"size":343,"mtime":1613813095599,"results":"100","hashOfConfig":"68"},{"size":2717,"mtime":1613813095598,"results":"101","hashOfConfig":"68"},{"size":392,"mtime":1614477026092,"results":"102","hashOfConfig":"68"},{"size":2147,"mtime":1613760115802,"results":"103","hashOfConfig":"68"},{"size":5337,"mtime":1613760115802,"results":"104","hashOfConfig":"68"},{"size":1654,"mtime":1613760115799,"results":"105","hashOfConfig":"68"},{"size":2510,"mtime":1613760115800,"results":"106","hashOfConfig":"68"},{"size":2749,"mtime":1613760115799,"results":"107","hashOfConfig":"68"},{"size":2268,"mtime":1613813115265,"results":"108","hashOfConfig":"68"},{"size":1790,"mtime":1613813115264,"results":"109","hashOfConfig":"68"},{"size":245,"mtime":1613760115805,"results":"110","hashOfConfig":"68"},{"size":991,"mtime":1613813115267,"results":"111","hashOfConfig":"68"},{"size":1292,"mtime":1613813115263,"results":"112","hashOfConfig":"68"},{"size":1181,"mtime":1613813115266,"results":"113","hashOfConfig":"68"},{"size":1146,"mtime":1613760115805,"results":"114","hashOfConfig":"68"},{"size":4550,"mtime":1613760115800,"results":"115","hashOfConfig":"68"},{"size":1248,"mtime":1613760115803,"results":"116","hashOfConfig":"68"},{"size":8498,"mtime":1613813095603,"results":"117","hashOfConfig":"68"},{"size":4278,"mtime":1613813095599,"results":"118","hashOfConfig":"68"},{"size":5406,"mtime":1614477026091,"results":"119","hashOfConfig":"68"},{"size":2215,"mtime":1613813115264,"results":"120","hashOfConfig":"68"},{"size":880,"mtime":1612896007884,"results":"121","hashOfConfig":"68"},{"size":2320,"mtime":1613760115800,"results":"122","hashOfConfig":"68"},{"size":1078,"mtime":1613760115808,"results":"123","hashOfConfig":"68"},{"size":1236,"mtime":1613760115799,"results":"124","hashOfConfig":"68"},{"size":703,"mtime":1613760115804,"results":"125","hashOfConfig":"68"},{"size":3558,"mtime":1613813115266,"results":"126","hashOfConfig":"68"},{"size":700,"mtime":1613813115265,"results":"127","hashOfConfig":"68"},{"size":1912,"mtime":1613813115265,"results":"128","hashOfConfig":"68"},{"size":2087,"mtime":1613760115800,"results":"129","hashOfConfig":"68"},{"size":1219,"mtime":1613760115805,"results":"130","hashOfConfig":"68"},{"size":1451,"mtime":1613813115267,"results":"131","hashOfConfig":"68"},{"size":2101,"mtime":1613813115266,"results":"132","hashOfConfig":"68"},{"size":436,"mtime":1613813115266,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"13dxzxw",{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"136"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"182","usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"136"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"136"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"136"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"136"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"136"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"136"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"136"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"136"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"136"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"136"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"136"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"136"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"136"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"136"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"136"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"136"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"136"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"136"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"136"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"136"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"136"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"136"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js",[],["317","318"],"/Users/pasanmadushan/Desktop/Front-end-react/src/App.js",["319","320","321","322"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SpecificProductPage from \"./pages/SpecficProductPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n// import checkLogin from \"./API_Service/checkLogin\"\n\nimport CustomerDashboard from \"./pages/CustomerDashboard\";\nimport CustomerAddress from \"./pages/CustomerAdress\";\nimport ChangePersonalDet from \"./pages/ChangePersonalDet\";\nimport CategoryPage from \"./pages/CategoryPage\";\nimport Navbar from \"./components/Navbar\";\nimport AwaitingDelivery from \"./pages/AwaitingDelivery\";\nimport AwaitingShipment from \"./pages/AwaitingShipment\";\nimport NewItem from \"./pages/NewItem\";\nimport OrderView from \"./pages/OrderView\";\n\nimport Home from \"./pages/Customer/Home\";\nimport SignUp from \"./pages/Customer/SignUp\";\nimport SignIn from \"./pages/Customer/SignIn\";\nimport SellerHome from \"./pages/Seller/SellerHome\";\n\nimport CardDetails from \"./pages/CardDetails\";\nimport TrackOrder from \"./pages/TrackOrder\";\nimport AllOrders from \"./pages/AllOrders\";\n\nimport CartPage from \"./pages/CartPage\";\nimport FeedbackPage from \"./pages/FeedbackPage\";\nimport SellerDashboard from \"./pages/SellerDashboard\";\nimport Axios from \"axios\";\n\n\n\n\nfunction App() {\n  const[isAuth, setIsAuth] = useState(false);\n  const[isLoggedIn, setIsLoggedIn] = useState(false);\n  const userAuthenticated = () => {\n    Axios.get(\"http://localhost:5000/customer/isUserAuth\", {\n    headers: {\n      \"x-access-token\": localStorage.getItem(\"token\")},\n    }).then(response => {\n      console.log(response.status);\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/customer/login\")\n    .then((response) => {\n      if(response.data.LoggedIn == true) {\n        setIsLoggedIn(true);\n      }else{\n        setIsLoggedIn(false)\n      }\n      });\n  })\n\n  return (\n    <ChakraProvider>\n      <Router>\n      <Navbar isLoggedIn={isLoggedIn}/>\n        <Switch >\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/productpage/:id\" component={SpecificProductPage} />\n          <ProtectedRoute path=\"/customerdashboard\" component={CustomerDashboard} isAuth={isLoggedIn}/>\n          <Route path=\"/shippingaddress\"  component={CustomerAddress} />\n          <Route path=\"/changepersonaldet\" component={ChangePersonalDet} />\n          <Route path=\"/categorypage\" component={CategoryPage} />\n          <Route path=\"/awaitingdelivery\" component={AwaitingDelivery} />\n          <Route path=\"/awaitingshipment\" component={AwaitingShipment} />\n          <Route path=\"/newitem\" component={NewItem} />\n          <Route path=\"/orderview\" component={OrderView} />\n\n          <Route path=\"/carddetails\" component={CardDetails} />\n          <Route path=\"/trackorder/:id\" component={TrackOrder} />\n          <Route path=\"/allorders\" component={AllOrders} />\n\n\n          <ProtectedRoute path=\"/cart/:customer_id\" component={CartPage} />\n          <Route path=\"/feedbackpage/:id\" component={FeedbackPage} />\n          <ProtectedRoute path=\"/SellerDashboard/:id\" component={SellerDashboard} />\n          {}\n          <Route path=\"/signUp\" component={SignUp} />\n          <Route path=\"/signin\" component={SignIn} />\n          <ProtectedRoute path=\"/sellerHome\" component={SellerHome} />\n\n        </Switch>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AwaitingShipment.js",["323","324","325"],"import {\n    Box,\n    Button,\n    Center,\n    Grid,\n    GridItem,\n    Heading,\n    VStack,\n  } from \"@chakra-ui/react\";\n  import React, { useState } from \"react\";\n  \n  import SearchBar from \"../components/SearchBar\";\n  import ShipmentCard from \"../components/ShipmentCard\";\n  \n  function AwaitingShipment() {\n    \n    const [orderlist, setActiveCategoryProducts] = useState([ \n      {\n        Order_ID: \"233-5145-789a\",\n        Varient_ID: \"1111\",\n        item_name: \"Electric tooth brush\",\n        payment: 200.0,\n        Date_paid: \"2021/2/8\",\n        Quantity :\"2\",\n        F_name: \"Rahal\",\n        L_name: \"Athukorala\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789b\",\n        Varient_ID: \"2222\",\n        item_name: \"Electric Toilet brush\",\n        payment: 100.0,\n        Date_paid: \"2021/2/6\",\n        Quantity :\"1\",\n        F_name: \"Ganesh\",\n        L_name: \"Sirisena\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789c\",\n        Varient_ID: \"3333\",\n        item_name: \"Electric pen\",\n        payment: 1500.0,\n        Date_paid: \"2021/2/7\",\n        Quantity :\"3\",\n        F_name: \"Sirimali\",\n        L_name: \"Godahewa\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789d\",\n        Varient_ID: \"4444\",\n        item_name: \"Electric grass cutter\",\n        payment: 200.0,\n        Date_paid: \"2021/1/28\",\n        Quantity :\"2\",\n        F_name: \"James\",\n        L_name: \"Vince\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789e\",\n        Varient_ID: \"5555\",\n        item_name: \"Electric machine gun\",\n        payment: 20000.0,\n        Date_paid: \"2021/2/8\",\n        Quantity :\"1\",\n        F_name: \"Xavier\",\n        L_name: \"Dhorty\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      }\n    ]);\n  \n    const searchBarText = `Search in Awaiting Shipments`;\n  \n\n  \n    return (\n      <Box\n        pt=\"150px\"\n        pl={{ base: \"10px\", sm: \"100px\" }}\n        pr={{ base: \"10px\", sm: \"100px\" }}\n      >\n        <Center mb='10px'>\n          <SearchBar text={searchBarText} />\n        </Center>\n        <Grid\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\n        >\n          <GridItem  bg=\"gray.300\" p=\"10px\">\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\n              Awaiting Shipment\n            </Heading>\n          </GridItem>\n\n          <GridItem \n          \n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\n            \n            \n              {Array(orderlist.length)\n                .fill(\"\")\n                .map((_, i) => (\n                  <ShipmentCard \n                    Order_ID={orderlist[i].Order_ID}\n                    Varient_ID= {orderlist[i].Varient_ID}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].payment}\n                    Date_paid={orderlist[i].Date_paid}\n                    Quantity={orderlist[i].Quantity}\n                    F_name= {orderlist[i].F_name}\n                    L_name= {orderlist[i].L_name}\n                    \n                  />\n                ))}\n           \n          </GridItem>\n          \n        </Grid>\n      </Box>\n    );\n  }\n  \n  export default AwaitingShipment;","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AwaitingDelivery.js",["326","327","328"],"import {\n    Box,\n    Button,\n    Center,\n    Grid,\n    GridItem,\n    Heading,\n    VStack,\n  } from \"@chakra-ui/react\";\n  import React, { useState } from \"react\";\n  import Deliverycard from \"../components/Deliverycard\";\n  import SearchBar from \"../components/SearchBar\";\n\n  \n  function AwaitingDelivery() {\n    \n    const [orderlist, setActiveCategoryProducts] = useState([ \n      {\n        Order_ID: \"233-5145-789a\",\n        Varient_ID: \"1111\",\n        item_name: \"Electric tooth brush\",\n        payment: 200.0,\n        Date_paid: \"2021/2/8\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"2\",\n        F_name: \"Rahal\",\n        L_name: \"Athukorala\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789b\",\n        Varient_ID: \"2222\",\n        item_name: \"Electric Toilet brush\",\n        payment: 100.0,\n        Date_paid: \"2021/2/6\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"1\",\n        F_name: \"Ganesh\",\n        L_name: \"Sirisena\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789c\",\n        Varient_ID: \"3333\",\n        item_name: \"Electric pen\",\n        payment: 1500.0,\n        Date_paid: \"2021/2/7\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"3\",\n        F_name: \"Sirimali\",\n        L_name: \"Godahewa\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789d\",\n        Varient_ID: \"4444\",\n        item_name: \"Electric grass cutter\",\n        payment: 200.0,\n        Date_paid: \"2021/1/28\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"2\",\n        F_name: \"James\",\n        L_name: \"Vince\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789e\",\n        Varient_ID: \"5555\",\n        item_name: \"Electric machine gun\",\n        payment: 20000.0,\n        Date_paid: \"2021/2/8\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"1\",\n        F_name: \"Xavier\",\n        L_name: \"Dhorty\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      }\n    ]);\n  \n    const searchBarText = `Search in Awaiting Deliveries`;\n  \n\n  \n    return (\n      <Box\n        pt=\"150px\"\n        pl={{ base: \"10px\", sm: \"100px\" }}\n        pr={{ base: \"10px\", sm: \"100px\" }}\n      >\n        <Center mb='10px'>\n          <SearchBar text={searchBarText} />\n        </Center>\n        <Grid\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\n        >\n          <GridItem  bg=\"gray.300\" p=\"10px\">\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\n              Awaiting Delivery\n            </Heading>\n          </GridItem>\n\n          <GridItem \n          \n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\n            \n            \n              {Array(orderlist.length)\n                .fill(\"\")\n                .map((_, i) => (\n                  <Deliverycard \n                    Order_ID={orderlist[i].Order_ID}\n                    Varient_ID= {orderlist[i].Varient_ID}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].payment}\n                    Date_paid={orderlist[i].Date_paid}\n                    Date_shipped={orderlist[i].Date_shipped}\n                    Quantity={orderlist[i].Quantity}\n                    F_name= {orderlist[i].F_name}\n                    L_name= {orderlist[i].L_name}\n                    \n                  />\n                ))}\n           \n          </GridItem>\n          \n        </Grid>\n      </Box>\n    );\n  }\n  \n  export default AwaitingDelivery;\n  ","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js",["329","330","331","332","333"],"import {\n    Box,\n    Grid,\n    GridItem,\n    useColorMode,\n    Flex,\n    Heading,\n    useDisclosure,\n    useToast,\n  } from \"@chakra-ui/react\";\n\nimport React, { useState, useEffect } from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\nimport ChangePersonalDetails from \"../components/ChangePersonalDetForm\";\n\nconst ChangePersonalDet = () => { \n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const toast = useToast();\n\n        return (\n            <Box\n            \n            pt=\"100px\"\n            // pl={{ base: \"10px\", sm: \"100px\" }}\n            // pr={{ base: \"10px\", sm: \"100px\" }} \n            >\n                \n                <Grid\n            \n            templateColumns=\"repeat(5, 1fr)\"\n            templateRows=\"repeat(1, 1fr)\"\n            \n        >        \n            <GridItem  colSpan={1} rowSpan={2} >\n                <CustomerDashSideBar page=\"customeraddress\" />\n            </GridItem>\n        \n            <GridItem colSpan={4} >\n                <Box \n                    width=\"auto\"\n                    h=\"auto\"                   \n                    overflow=\"hidden\"                    \n                    pb=\"5px\"                      \n                    >\n                    \n                  </Box>\n\n                    <Grid templateColumns=\"repeat(3)\">\n\n                        <GridItem bg='cyan.900' p='10px' colSpan={3}>\n                            <Flex> \n                                <Box  p=\"3\">\n                                <Heading as='h3' size='md' color='white'> Change Account Details </Heading> \n                                </Box>\n                                                   \n                             </Flex>\n                        </GridItem>\n\n                        <GridItem colSpan={2}>\n                              <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'>         \n                            <ChangePersonalDetails />  \n                            {/* data={ personaldet } updateDetails={updateDetails}  */}\n                            </Box>\n                       </GridItem>\n\n                       <GridItem >\n                       <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'> \n                       <ChangePasswordForm />\n                       \n                       </Box>\n                       </GridItem>\n\n                    </Grid>\n            </GridItem>\n\n         \n        </Grid>\n\n    \n            </Box>\n        )\n\n\n}\n\nexport default ChangePersonalDet","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js",["334","335","336"],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/NewItem.js",["337","338","339","340","341"],"import { AddIcon } from '@chakra-ui/icons';\nimport { Box, Button,Input,Stack, VStack,Heading,Form,\n    Select, HStack,NumberInputField ,NumberInputStepper,\n    NumberDecrementStepper,NumberIncrementStepper,\n    Flex,Slider,SliderTrack,SliderFilledTrack,SliderThumb,NumberInput} from '@chakra-ui/react';\nimport axios from 'axios';\nimport React, { Component } from 'react';\n\n\nfunction NewItem(){\n   const  [value, setValue] = React.useState(0);\n   const  handleChange = (value) => setValue(value);\n   const state={\n      selectedFile: null\n  }\n    \n  const fileSelectedHandler =event=>{\n      this.setState({\n          selectedFile: event.target.files[0]\n    })\n       // console.log(event.target.files[0]);\n  }\n\n  const fileUploadHandler=()=>{\n      const fd= new FormData();\n      fd.append('image',this.state.selectedFile,this.state.selectedFile.name);\n      axios.post(\"gs://front-end-react100.appspot.com\",fd)\n      .then(res=>{console.log(res)});\n\n  }\n  const Varientmaker=()=>{\n\n  }\n    \n\n \n    return(\n        \n<Box\n        pt=\"150px\"\n        pl={{ base: \"10px\", sm: \"100px\" }}\n        pr={{ base: \"10px\", sm: \"100px\" }}\n        \n      >\n<form method=\"POST\" >\n <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\" bg=\"gray.300\" p=\"10px\">\n              List a New Item\n</Heading>\n   <Stack spacing={1} >\n    <b><>Title :</></b><Input name=\"title\"  backgroundColor=\"yellow.100\" placeholder=\"Enter title here\" size=\"md\" />\n\n    <b><>Category:</></b>\n            <Select name=\"category\" borderColor=\"yellow.300\" placeholder=\"Select Category\" w=\"40%\" bg=\"yellow.100\">\n  <option w=\"40%\"value=\"Portable Audio & Headphones\">Portable Audio & Headphones</option>\n  <option w=\"40%\"value=\"Vintage Electronics\">Vintage Electronics</option>\n  <option w=\"40%\"value=\"Vehicle Electronics & GPS\">Vehicle Electronics & GPS</option>\n  <option w=\"40%\"value=\"Radio Communication\">Radio Communication</option>\n  <option w=\"40%\"value=\"Circuit Items\">Circuit Items </option>\n  <option w=\"40%\"value=\"Surveillance & Smart Home Electronics & GPS\">Surveillance & Smart Home Electronics & GPS</option>\n  <option w=\"40%\"value=\"Multipurpose Batteries & Power\">Multipurpose Batteries & Power</option>\n  <option w=\"40%\"value=\"Cameras & Photos\">Cameras & Photos</option>\n  <option w=\"40%\"value=\"Other Consumer Electronics\">Other Consumer Electronics</option>\n            </Select>\n<b><>Varient :</></b>\n\n<Box bg=\"yellow.100\" w=\"33%\" borderRadius=\"2xl\" borderColor=\"yellow.300\" borderWidth=\"5px\">\n    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\"> \n    <b><>Varient Name :</></b>\n  <Input name=\"varientname\" backgroundColor=\"yellow.100\" placeholder=\"Enter Varient Here\" placeholderColor=\"red\" size=\"md\" />\n           \n    </Box>\n\n    <Box ml=\"2%\" mr=\"2%\">\n    <b><>Quantity :</></b>\n    <Flex>\n      <NumberInput name=\"quantity\"  maxW=\"100px\" mr=\"2rem\" value={value} onChange={handleChange} borderColor=\"yellow.300\">\n        <NumberInputField  borderColor=\"yellow.300\"/>\n        <NumberInputStepper borderColor=\"yellow.300\">\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n      <Slider  flex=\"1\" focusThumbOnChange={false} value={value} onChange={handleChange}>\n        <SliderTrack bg=\"blue.200\">\n          <SliderFilledTrack bg=\"yellow.400\" />\n        </SliderTrack>\n        <SliderThumb borderColor=\"black\" fontSize=\"sm\" boxSize=\"32px\" children={value} />\n      </Slider>\n    </Flex>\n      \n    </Box>\n    <HStack>\n    <Box w=\"50%\" ml=\"2%\" mb=\"2%\" >\n    <b><>Image:</></b>\n    <input name=\"image\" type=\"file\" onChange={fileSelectedHandler}/>\n\n    </Box> \n    <Box w=\"100%\" borderColor=\"yellow.300\" mr=\"2%\" mb=\"2%\">\n    <b><>Price:(LKR)</></b><Input name=\"price\" backgroundColor=\"yellow.100\" placeholder=\"Enter Price here\" size=\"md\" />\n    </Box>\n    </HStack>\n</Box>\n\n\n<Button w=\"33%\" ml=\"40%\" horizontalAlign=\"true\" textColor=\"Black\" bg=\"yellow.100\"  _hover={{ bg: \"yellow.300\" ,transform: \"scale(1.01)\" }} onClick={Varientmaker}><><b>+</b></>Add Varient</Button>\n\n\n\n    <b><>Discription:</></b><Input backgroundColor=\"yellow.100\" placeholder=\"Enter Discription here\" size=\"md\" />\n\n  </Stack>\n\n\n            \n<br/>\n\n    <Button Align=\"middle\" ml=\"40%\" horizontalAlign=\"true\" textColor=\"Black\" bg=\"blue.100\"  _hover={{ bg: \"blue.300\" ,transform: \"scale(1.01)\" }} onClick={fileUploadHandler}>Submit & Create Listing</Button>\n\n</form>\n</Box>\n    );    \n    \n}\nexport default NewItem;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/TrackOrder.js",["342","343"],"import React from 'react'\nimport { \n    Box,\n    Grid,\n    GridItem,\n    Heading,\n    Center,\n    useColorMode,\n    Badge,\n    Text\n        } from \"@chakra-ui/react\";\n\nconst TrackOrder = () => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n\n    return (\n        <Box \n            pt=\"110px\"\n            pl={{ base: \"10px\", sm: \"100px\" }}\n            pr={{ base: \"10px\", sm: \"100px\" }}\n        >\n            <Box mt='20px' mb='20px' p='3' bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\n                <Center><Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h3' size='md'>Track Your Order</Heading></Center>        \n            </Box>\n            <Grid\n                h=\"600px\"\n                templateRows=\"repeat(3, 1fr)\"\n                templateColumns=\"repeat(3, 1fr)\"\n                gap={4}\n            >\n                <GridItem colSpan={2}  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\n\n                <Box p='5'>\n                    <Badge mr='3' variant=\"outline\" fontSize='md' colorScheme=\"teal\">\n                    Estimated Delivery \n                    </Badge>\n                   dsdsd\n     \n                </Box>\n\n                </GridItem>\n\n                <GridItem bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\n\n                    <Box p='8'>\n                        xdsd\n                    </Box>\n\n                </GridItem>\n                <GridItem  rowSpan={2} colSpan={2} bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} />\n                <GridItem  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}/>\n            </Grid>\n\n        </Box>\n    )\n}\n\nexport default TrackOrder\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/OrderView.js",["344","345","346","347","348","349","350"],"import {\n    Box,\n    Text,\n    Img,\n    Button,\n    Center,\n    Grid,\n    GridItem,\n    Heading,\n    VStack,\n    HStack,\n  } from \"@chakra-ui/react\";\n  import React, { useState } from \"react\";\n  import Deliverycard from \"../components/Deliverycard\";\n \n\n  \n  function OrderView() {\n\n\n    const order_number=\"233-5145-789e\";\n    const Shipping_method=\"Economy International Shipping\"\n    const Tracking =\"Add tracking\"\n    const Ship_to=\"Rahal Athukorala\"\n    const Street=\"562/B Walgama/Malwana\"\n    const City= \"Biyagama\"\n    const State_province=\"Western\"\n    const Zip_code=\"11670\"\n    const Country_region=\"Sri Lanka\"\n    const Phone=\"+94 716565834\"\n    const Buyer=\"Rahal Athukorala\"\n    const E_mail=\"rahalathukorala@gmail.com\"\n    const Date_sold=\"Feb 17, 2021\"\n    const Date_paid=\"Feb 17, 2021\"\n    const image=\"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\"\n    const title=\"Electric Tooth Brush\"\n    const feedback=\"Positive\"\n    const Sold_for=5000\n    const Quantity=5\n\n    \n    return (\n  <Box\n        pt=\"120px\"\n        pl={{ base: \"5px\", sm: \"100px\" }}\n        pr={{ base: \"5px\", sm: \"100px\" }}>\n <Heading as=\"h3\" size=\"base\" color=\"gray.600\" mb=\"5px\" bg=\"gray.300\" p=\"5px\">\n    <HStack><Box>Order Details :</Box><Box size=\"xs\" color=\"red.600\">{order_number}</Box></HStack>\n  </Heading>     \n      <Box height=\"80px\">\n          <HStack><b size=\"base\">Ship by {Date_sold} Sri Lanka Time</b>\n              <Box><Button  ml=\"60px\"  _hover={{ bg: \"blue.300\" ,transform: \"scale(1.01)\" }}>Print Shipping Lable</Button>\n              </Box>\n          </HStack>\n\n\n              <p>Make sure you ship your order within the handling time you specified in the listing.\nEstimated delivery date shown to buyer: {Date_sold} - {Date_sold}</p>\n      </Box>\n               \n            \n<Box width=\"100%\">\n    <HStack>\n        \n    <Box width=\"100%\">\n    <Heading as=\"h3\" size=\"base\" color=\"gray.600\" mb=\"5px\" bg=\"gray.300\" p=\"5px\">\n              Purchase Details\n            </Heading>\n            <Box height=\"250px\">\n          <Grid  templateColumns=\"repeat(2, 1fr)\" gap={6}>\n        <GridItem fontWeight=\"bold\">Buyer</GridItem>\n        <GridItem fontWeight=\"semibold\">{Buyer}</GridItem>\n        <GridItem fontWeight=\"bold\">E-mail</GridItem>\n        <GridItem fontWeight=\"semibold\">{E_mail}</GridItem>\n        <GridItem fontWeight=\"bold\">Phone</GridItem>\n        <GridItem fontWeight=\"semibold\">{Phone}</GridItem>\n        <GridItem fontWeight=\"bold\">Date sold</GridItem>\n        <GridItem fontWeight=\"semibold\">{Date_sold}</GridItem>\n        <GridItem fontWeight=\"bold\">Date paid</GridItem>\n        <GridItem fontWeight=\"semibold\">{Date_paid}</GridItem>\n        \n          </Grid>  \n                \n            </Box>\n\n\n    </Box>\n\n\n    <Box width=\"100%\"><Heading as=\"h3\" size=\"base\" color=\"gray.600\" mb=\"5px\" bg=\"gray.300\" p=\"5px\">\n              Shipping Details\n            </Heading>\n            \n            <Box height=\"250px\">\n\n            <Grid  templateColumns=\"repeat(2, 1fr)\" gap={2}>\n        <GridItem fontWeight=\"bold\">Tracking</GridItem>\n        <GridItem fontWeight=\"semibold\">{Tracking}</GridItem>\n        <GridItem fontWeight=\"bold\">Ship_to</GridItem>\n        <GridItem fontWeight=\"semibold\">{Buyer}</GridItem>\n        <GridItem fontWeight=\"bold\">Street</GridItem>\n        <GridItem fontWeight=\"semibold\">{Street}</GridItem>\n        <GridItem fontWeight=\"bold\">City</GridItem>\n        <GridItem fontWeight=\"semibold\">{City}</GridItem>\n        <GridItem fontWeight=\"bold\">State</GridItem>\n        <GridItem fontWeight=\"semibold\">{State_province}</GridItem>\n        <GridItem fontWeight=\"bold\">Zip Code</GridItem>\n        <GridItem fontWeight=\"semibold\">{Zip_code}</GridItem>\n        <GridItem fontWeight=\"bold\">Country</GridItem>\n        <GridItem fontWeight=\"semibold\">{Country_region}</GridItem>\n        <GridItem fontWeight=\"bold\">Phone</GridItem>\n        <GridItem fontWeight=\"semibold\">{Phone}</GridItem>\n          </Grid>\n\n            </Box>\n            </Box>\n        \n    </HStack>\n\n    <Box width=\"100%\">\n    <Heading as=\"h3\" size=\"base\" color=\"gray.600\" mb=\"5px\" bg=\"gray.300\" p=\"5px\">\n              Items\n    </Heading>\n    <Box height=\"100px\">\n\n\n      \n\n      <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\n        < HStack>  \n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \n        \n        <Box><Img src={image} alt={\"picture\"} w='100px' h='100px' /></Box>\n        </Box>\n\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box fontWeight=\"bold\"><Text color=\"red.600\"   fontSize=\"lg\">\n            {title}\n          </Text></Box>\n        </Box>\n        \n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\n        Quantity: <b>{Quantity}</b>\n          </Text></Box>\n        \n        </Box>\n       \n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \n        <Text color=\"blue.700\" fontSize=\"2lg\">\n            Rs. {Sold_for}\n          </Text>\n        </Box>\n\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \n        <Text color=\"gray.600\" fontSize=\"lg\">\n            Total: {Sold_for*Quantity}\n          </Text>\n        </Box>\n        </HStack>\n    </Box>\n      \n    </Box>\n    </Box>\n    </Box>\n\n    </Box>\n  \n    );\n  }\n  \n  export default OrderView;\n  ","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CartPage.js",["351","352","353","354","355","356","357"],"import { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Heading,\n  HStack,\n  Icon,\n  Img,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  SimpleGrid,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Tfoot,\n  Th,\n  Thead,\n  Tr,\n  useColorMode,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport { FaMoneyBillAlt, FaRegCreditCard } from \"react-icons/fa\";\nimport { SiPaypal } from \"react-icons/si\";\nimport { RiVisaLine } from \"react-icons/ri\";\n\nimport visa from \"payment-icons/min/flat/visa.svg\";\nimport mastercard from \"payment-icons/min/flat/mastercard-old.svg\";\n\nimport { useParams } from \"react-router-dom\";\n\nfunction CartPage() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const [cartItems, setCartItems] = useState([\n    {\n      item_ID: \"213d\",\n      item_name: \"Electric tooth brush\",\n      price: 2000.0,\n      quantity: 2,\n      varient: \"pink\",\n      image: \"../images/pink.jpg\",\n    },\n    {\n      item_ID: \"213d\",\n      item_name: \"Electric tooth brush\",\n      price: 2000.0,\n      quantity: 2,\n      varient: \"pink\",\n      image: \"../images/pink.jpg\",\n    },\n    {\n      item_ID: \"235\",\n      item_name: \"IPhone 8\",\n      price: 50000.0,\n      quantity: 1,\n      varient: \"64GB\",\n      image: \"../images/iphone.jpg\",\n    },\n   \n    {\n      item_ID: \"233d\",\n      item_name: \"Electric tooth brush\",\n      price: 300.0,\n      quantity: 5,\n      varient: \"blue\",\n      image: \"../images/blue.jpg\",\n    },\n  ]);\n\n  const [shippingAddress, setShippingAddress] = useState([\n    {\n      customer_name: \"Chandima Amarasena\",\n      street: \"No.231, Dutugamunu mv\",\n      city: \"Peliyagoda\",\n      state: \"western\",\n      zip: \"11830\",\n    },\n    {\n      customer_name: \"Rahal Athukorala\",\n      street: \"No.345, Parakrma Mv\",\n      city: \"Kelaniya\",\n      state: \"western\",\n      zip: \"11810\",\n    },\n    {\n      customer_name: \"Rahal Athukorala\",\n      street: \"No.345, Parakrma Mv\",\n      city: \"Kelaniya\",\n      state: \"western\",\n      zip: \"11810\",\n    },\n  ]);\n\n  const [card, setCard] = useState([\n    {\n      name: \"P A C P Amarasena\",\n      card_no: \"1234234123452341\",\n      card_type: \"mastercard\",\n    },\n    {\n      name: \"R M Athukorala\",\n      card_no: \"2334234123457894\",\n      card_type: \"mastercard\",\n    },\n  ]);\n\n  const [currentCard, setCurrentCard] = useState(\"none\");\n\n  const [currentShippingAddress, setCurrentShippingAddress] = useState(0);\n\n  const [paymentMethod, setPaymentMethod] = useState(0);\n\n  var TotalPrice = 0;\n\n  var cardIcon = (type) => {\n    if (type === \"visa\") {\n      return <Img src={visa} w={12} h={12} />;\n    } else if (type === \"mastercard\") {\n      return <Img src={mastercard} w={12} h={12} />;\n    }\n  };\n\n  cartItems.forEach((element) => {\n    TotalPrice = TotalPrice + element.quantity * element.price;\n  });\n\n  let { customer_id } = useParams();\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Box borderWidth=\"1px\" borderColor=\"gray.300\" p=\"50px\" mb=\"200px\">\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\n          <Icon as={FiShoppingCart} w={12} h={12} /> Cart\n        </Heading>\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th>Product</Th>\n              <Th>Product name</Th>\n              <Th>Varient</Th>\n              <Th isNumeric>Quantity</Th>\n              <Th isNumeric>Price(each)</Th>\n              <Th isNumeric>Price</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {Array(cartItems.length)\n              .fill(\"\")\n              .map((_, i) => (\n                <Tr>\n                  <Td>\n                    <Img src={cartItems[i].image} w=\"50px\" h=\"50px\" />\n                  </Td>\n                  <Td>{cartItems[i].item_name}</Td>\n                  <Td>{cartItems[i].varient}</Td>\n                  <Td isNumeric>{cartItems[i].quantity}</Td>\n                  <Td isNumeric>{cartItems[i].price}</Td>\n                  <Td isNumeric>\n                    {cartItems[i].price * cartItems[i].quantity}\n                  </Td>\n                </Tr>\n              ))}\n          </Tbody>\n          <Tfoot>\n            <Tr>\n              <Th fontSize=\"3xl\">Total</Th>\n              <Th>-</Th>\n              <Th>-</Th>\n              <Th isNumeric>-</Th>\n              <Th isNumeric>-</Th>\n              <Th isNumeric fontSize=\"3xl\">\n                Rs. {TotalPrice}\n              </Th>\n            </Tr>\n          </Tfoot>\n        </Table>\n        <Divider />\n        <SimpleGrid columns={2} spacing={5} mb=\"20px\" mt=\"50px\">\n          <Box>\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\">\n              Shipping address\n            </Heading>\n\n            <Box\n              p=\"10px\"\n              borderWidth=\"1px\"\n              bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\n            >\n              <Heading as=\"h5\" size=\"sm\">\n                {shippingAddress[currentShippingAddress].customer_name}\n              </Heading>\n\n              <Text>{shippingAddress[currentShippingAddress].street}</Text>\n              <Text>{shippingAddress[currentShippingAddress].city}</Text>\n              <Text>{shippingAddress[currentShippingAddress].zip}</Text>\n            </Box>\n            <Box ml=\"10px\" pt=\"10px\">\n              <Menu>\n                <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n                  Address No. {currentShippingAddress + 1}\n                </MenuButton>\n                <MenuList>\n                  {Array(shippingAddress.length)\n                    .fill(\"\")\n                    .map((_, i) => (\n                      <MenuItem onClick={() => setCurrentShippingAddress(i)}>\n                        {\"Address No. \" +\n                          (i + 1) +\n                          \" - \" +\n                          shippingAddress[i].customer_name +\n                          \", \" +\n                          shippingAddress[i].street +\n                          \", \" +\n                          shippingAddress[i].state +\n                          \", \" +\n                          shippingAddress[i].zip}\n                      </MenuItem>\n                    ))}\n                </MenuList>\n              </Menu>\n            </Box>\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\" mt=\"50px\">\n              Payment method\n            </Heading>\n\n            {currentCard !== \"none\" && paymentMethod === 2 ? (\n              <Box\n                p=\"10px\"\n                borderWidth=\"1px\"\n                bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\n              >\n                <HStack>\n                  {cardIcon(card[currentCard].card_type)}\n                  <Box>\n                    <Text>{card[currentCard].name}</Text>\n                    <Text>\n                      XXXX XXXX XXXX {card[currentCard].card_no.substr(12, 15)}\n                    </Text>\n                  </Box>\n                </HStack>\n              </Box>\n            ) : null}\n\n            <HStack pt='10px'>\n              <Box pl=\"10px\">\n                <Menu>\n                  <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n                    {paymentMethod === 0 ? <Text>Select method</Text> : null}\n                    {paymentMethod === 1 ? <Text>Cash on delivery</Text> : null}\n                    {paymentMethod === 2 ? <Text>Card</Text> : null}\n                    {paymentMethod === 3 ? <Text>Paypal</Text> : null}\n                  </MenuButton>\n                  <MenuList>\n                    <MenuItem\n                      icon={\n                        <Icon\n                          as={FaMoneyBillAlt}\n                          w={6}\n                          h={6}\n                          color=\"green.500\"\n                        />\n                      }\n                      onClick={() => setPaymentMethod(1)}\n                    >\n                      Cash on delivery\n                    </MenuItem>\n                    <MenuItem\n                      icon={\n                        <Icon\n                          as={FaRegCreditCard}\n                          w={6}\n                          h={6}\n                          color=\"cyan.500\"\n                        />\n                      }\n                      onClick={() => setPaymentMethod(2)}\n                    >\n                      Card\n                    </MenuItem>\n                    <MenuItem\n                      icon={<Icon as={SiPaypal} w={6} h={6} color=\"blue.500\" />}\n                      onClick={() => setPaymentMethod(3)}\n                    >\n                      paypal\n                    </MenuItem>\n                  </MenuList>\n                </Menu>\n              </Box>\n              <Box pl=\"10px\">\n                {paymentMethod === 1 ? (\n                  <Icon as={FaMoneyBillAlt} w={8} h={8} color=\"green.500\" />\n                ) : null}\n                {paymentMethod === 2 ? (\n                  <Icon as={FaRegCreditCard} w={8} h={8} color=\"cyan.500\" />\n                ) : null}\n                {paymentMethod === 3 ? (\n                  <Icon as={SiPaypal} w={8} h={8} color=\"blue.500\" />\n                ) : null}\n              </Box>\n            </HStack>\n\n            {paymentMethod === 2 ? (\n              <Box pl=\"10px\" pt=\"10px\">\n                {card.length !== 0 ? (\n                  <Box>\n                    <Menu>\n                      <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n                        Select a card\n                      </MenuButton>\n                      <MenuList>\n                        {Array(card.length)\n                          .fill(\"\")\n                          .map((_, i) => (\n                            <MenuItem\n                              icon={cardIcon(card[i].card_type)}\n                              onClick={() => setCurrentCard(i)}\n                            >\n                              <Text>{card[i].name}</Text>\n                              <Text>\n                                XXXX XXXX XXXX {card[i].card_no.substr(12, 15)}\n                              </Text>\n                            </MenuItem>\n                          ))}\n                      </MenuList>\n                    </Menu>\n                  </Box>\n                ) : (\n                  <Text>Please Add a card</Text>\n                )}\n              </Box>\n            ) : null}\n          </Box>\n          <Box mr=\"0px\" ml=\"auto\">\n            <Box w=\"400px\" borderWidth=\"1px\" p=\"10px\">\n              <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\n                Order Total\n              </Heading>\n              <Table>\n                <Tbody variant=\"simple\" size=\"md\">\n                  <Tr>\n                    <Td>Subtotal</Td>\n                    <Td isNumeric>{TotalPrice}</Td>\n                  </Tr>\n                  <Tr>\n                    <Td>Shipping</Td>\n                    <Td isNumeric>Free</Td>\n                  </Tr>\n                  <Tr>\n                    <Td fontSize=\"2xl\">Total</Td>\n                    <Td isNumeric fontSize=\"2xl\">\n                      Rs. {TotalPrice}\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n              <Button mt=\"20px\" colorScheme=\"cyan\" w=\"100%\">\n                Checkout\n              </Button>\n            </Box>\n          </Box>\n        </SimpleGrid>\n      </Box>\n    </Box>\n  );\n}\n\nexport default CartPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AllOrders.js",["358","359","360","361"],"\nimport {\n    Box,\n    Grid,\n    GridItem, \n    useColorMode,\n    Flex,\n    Heading,\n    Divider,\n    HStack,Spacer\n  } from \"@chakra-ui/react\";\n\nimport React, {useState} from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport OrderTiles from \"..//components/OrderTiles\";\n\n  \n\nconst AllOrders = () => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const [orders,setOrders] = useState([\n        {\n            orderID:1,\n            orderStatus:'preparing',\n            orderedDate:'21/01',\n            orderItemTitle:'Purple Rose Jewelry Water Transfer Tattoo',\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\n            quantity:5,\n            orderAmount:35.47,\n            trackingNumber:'23232323232323'\n                  \n        },\n        {\n            orderID:2,\n            orderStatus:'shipped',\n            orderedDate:'13/01',\n            \n            orderItemTitle:'Marvel batman',\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\n            quantity:2,\n            orderAmount:37.24,\n            trackingNumber:'23232323232323'\n                  \n        },\n        {\n            orderID:3,\n            \n            orderStatus:'preparing',\n            orderedDate:'15/01',\n            \n            orderItemTitle:'sonic toy',\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\n            quantity:3,\n            orderAmount:24.56,\n            trackingNumber:'23232323232323'\n                  \n        },\n        {\n            orderID:4,\n            \n            orderStatus:'preparing',\n            orderedDate:'15/01',\n            \n            orderItemTitle:'sonic toy',\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\n            quantity:3,\n            orderAmount:24.56,\n            trackingNumber:'23232323232323'\n                  \n        },\n        {\n            orderID:5,\n            \n            orderStatus:'preparing',\n            orderedDate:'15/01',\n            \n            orderItemTitle:'sonic toy',\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\n            quantity:3,\n            orderAmount:24.56,\n            trackingNumber:'23232323232323'\n                  \n        },\n    ])\n\n\n    const countOrders = ()=>{\n        var prep = 0\n        var ship = 0\n        var canc = 0\n        var await_can = 0\n        var received = 0\n        for (var i=0;i<orders.length;i++){\n            if(orders[i].orderStatus==='preparing'){\n                prep+=1\n            }\n            else if (orders[i].orderStatus==='shipped'){\n                ship+=1\n            }\n            else if (orders[i].orderStatus==='cancelled'){\n                canc+=1\n            }\n            else if (orders[i].orderStatus==='await_cancel'){\n                await_can+=1\n            }\n            else if (orders[i].orderStatus==='received'){\n                received+=1\n            }\n        }\n        return {prep,ship,canc,await_can,received}\n    }\n\n    const getacount = countOrders()\n\n    const cancelOrder = (order_id)=>{\n            // console.log(order_id)\n            setOrders(orders.map(\n              (order)=>order.orderID===order_id?{...order,orderStatus:'await_cancel'}:order\n            ))\n            \n    }\n\n    const confirmOrder = (order_id)=>{\n        setOrders(orders.map(\n            (order)=>order.orderID===order_id?{...order,orderStatus:'received'}:order\n          ))\n    }\n\n\n    return (\n        <Box\n        \n        pt=\"100px\"\n        // pl={{ base: \"10px\", sm: \"100px\" }}\n        // pr={{ base: \"10px\", sm: \"100px\" }} \n        >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(1, 1fr)\"\n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"customeraddress\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid>\n\n                            <GridItem bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> All Orders </Heading> \n                                    </Box>\n                            \n                                 </Flex>\n                            </GridItem>\n\n                            <GridItem p='5'>\n                              <Grid templateColumns=\"repeat(5, 1fr)\">\n                                <GridItem colSpan={4}>\n\n                                    <OrderTiles orders={orders} cancelOrder={cancelOrder} confirmOrder={confirmOrder}/>\n\n                                </GridItem>\n                                <GridItem >\n                                    <Box bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} p='10px' mt='20px' color={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>\n                                        <Heading size='sm' textAlign='center'>Summary</Heading>\n                                        <Divider mt='2' mb='2'/>\n                                        <HStack>\n                                            <Box ml='3'>Preparing </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{getacount.prep}</Box>\n                                        </HStack>\n                                        <HStack>\n                                            <Box ml='3'>Shipped </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{getacount.ship}</Box>\n                                        </HStack>\n                                        <HStack>\n                                            <Box ml='3'>Await Cancel </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{getacount.await_can}</Box>\n                                        </HStack>\n                                        <HStack>\n                                            <Box ml='3'>Cancelled </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{getacount.canc}</Box>\n                                        </HStack>\n                                        <HStack>\n                                            <Box ml='3'>Received </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{getacount.received}</Box>\n                                        </HStack>\n                                    </Box>\n\n                                </GridItem>\n                              </Grid>\n                            </GridItem>\n                       \n                             \n                        </Grid>\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default AllOrders\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SellerDashboard.js",["362","363","364","365","366","367","368","369","370","371","372"],"import {\n    Box,\n    Center,\n    Grid,\n    GridItem,\n    Heading,\n    VStack,\n    Input,\n    Stack,\n} from \"@chakra-ui/react\";\nimport { AddIcon, MinusIcon, ArrowForwardIcon, StarIcon } from \"@chakra-ui/icons\";\n\nimport { Button, ButtonGroup } from \"@chakra-ui/react\"\nimport {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n} from \"@chakra-ui/react\"\nimport React, { useState } from \"react\";\nimport { Avatar, AvatarBadge, AvatarGroup } from \"@chakra-ui/react\"\nimport SearchBar from \"../components/SearchBar\";\n\nfunction SellerDashboard() {\n\n    return (\n        <Box\n            pt=\"150px\"\n            align='center'\n            pl={{ base: \"10px\", sm: \"100px\" }}\n            pr={{ base: \"10px\", sm: \"100px\" }}\n        >\n\n            <Grid\n                templateColumns=\"repeat(5, 1fr)\"\n                gap={0}\n                textAlign='center'\n                pb='200px'\n                w='800px'\n            >\n                <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\n                    <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\" w='300px'>\n                        <Avatar size=\"3xl\" name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" marginTop='40px' />\n                    </Heading>\n                    <VStack>\n\n                    </VStack>\n                </GridItem>\n                <GridItem\n                    rowSpan={1}\n                    colSpan={4}\n                    borderWidth=\"1px\"\n                    borderColor=\"gray.300\"\n                    p=\"20px\"\n                >\n                    <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\n                        Account Settings\n            </Heading>\n                    <FormControl id=\"email\" mt='30px'>\n                        <FormLabel>Email address</FormLabel>\n                        <Input type=\"email\" />\n                        <FormLabel mt='10px'>User Name</FormLabel>\n                        <Input type=\"string\" />\n                        <FormLabel mt='10px'>Password</FormLabel>\n                        <Input type=\"password\" />\n                        <FormLabel mt='10px'>Re-Enter Password</FormLabel>\n                        <Input type=\"password\" />\n                        <Stack direction=\"row\" spacing={4} mt=\"20px\">\n                            <Button\n                                loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\n                                Update\n  </Button>\n                        </Stack>\n                    </FormControl>\n                </GridItem>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default SellerDashboard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CardDetails.js",["373","374"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,  \n    Flex,\n    Spacer ,\n    Button,\n    useDisclosure,\n    Modal,\n    ModalBody,\n    ModalContent,\n    ModalOverlay,\n    ModalCloseButton,\n    ModalHeader,\n    useToast,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\nimport React, { useState, useEffect } from \"react\";\nimport AddBankCard from \"../components/AddBankCard\";\nimport BankCards from \"../components/BankCards\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport Axios from \"axios\";\n\nconst CardDetails = () => {\n\n    const [bankCards,setBankCards] = useState([])\n\n    // {\n    //     Card_Number:323446453434,\n    //     Owner:'pasan madushan',\n    //     cvv:'123',\n    //     Exp_Date:'10/12',\n              \n    // },\n    // {\n    //     Card_Number:323446453435,\n    //     Owner:'vimukthi madushan',\n    //     cvv:'123',\n    //     Exp_Date:'10/12',\n              \n    // },\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const toast = useToast()\n\n    useEffect(() => {\n        Axios.get(\"http://localhost:5000/customer/bankCards\")\n        .then((Response)=>{\n            // console.log(Response.data.addresses);\n            setBankCards(Response.data.bankCards);\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error loading data\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }, [])\n\n\n    //delete a card\n    const deleteBankCard  = (cardNumber)=>{\n\n        Axios.delete(\"http://localhost:5000/customer/bankCards\",{data:{cardNumber:cardNumber}})\n        .then((Response)=>{\n            // console.log(Response);\n            setBankCards(bankCards.filter(\n                (bankCard)=>bankCard.Card_Number!==cardNumber\n            ))\n            toast({\n                position: \"bottom-right\",    \n                description: \"Bank Card deleted successfully\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }\n\n    //add new card\n    const addBankCard = (CardDetails)=>{\n\n        Axios.post(\"http://localhost:5000/customer/bankCards\",{CardDetails:CardDetails})\n        .then((Response)=>{\n            // console.log(Response.json());\n            // console.log(newAddress);\n            setBankCards([...bankCards,CardDetails]);\n           \n            toast({\n                position: \"bottom-right\",    \n                description: \"New payment method added successfully\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          });       \n\n    }\n\n   \n    const { colorMode, toggleColorMode } = useColorMode();\n\n    \n\n    return (\n        <Box   pt=\"100px\">\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(1, 1fr)\"\n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"customeraddress\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\n\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> Card & Bank Details </Heading> \n                                    </Box>\n                                    <Spacer />\n                                    <Box p=\"1\">\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\n                                            Add New Payment Method\n                                        </Button>\n                    \n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                                            <ModalOverlay />\n                                                <ModalContent>\n                                                    <ModalHeader>Add New Payment Method</ModalHeader>\n                                                    <ModalCloseButton />\n                                                    <ModalBody pb='5'>\n                                                    <AddBankCard addBankCard={addBankCard} trigger={onClose}/>\n                                                     </ModalBody>\n                                                    \n                                                </ModalContent>\n                                            </Modal>\n\n                                    </Box>\n                                 \n                                 </Flex>\n                            </GridItem>\n\n                                <BankCards bankcards={bankCards} deleteBankCard={deleteBankCard} />\n                                \n                        </Grid>\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CardDetails\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/SignUp.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/FeedbackPage.js",["375","376","377","378","379","380","381","382","383","384"],"import {\n  Box,\n  Center,\n  Heading,\n  Image,\n  SimpleGrid,\n  Textarea,\n  Text,\n  useColorMode,\n  Badge,\n} from \"@chakra-ui/react\";\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  AddIcon,\n  MinusIcon,\n  ArrowForwardIcon,\n  StarIcon,\n} from \"@chakra-ui/icons\";\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\nimport SearchBar from \"../components/SearchBar\";\n\nfunction FeedbackPage(props) {\n  let { id } = useParams();\n\n  const [rating, setRating] = useState(2);\n\n  const [data, setData] = useState({\n    item_ID: \"233d\",\n    item_name: \"Electric tooth brush\",\n    category: \"electronic\",\n    price: 200.0,\n    orders: 345,\n    description:\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n    status: \"Available\",\n    feedbacks: [\n      {\n        customer_name: \"jof hagi\",\n        customer_dp: \"jof hagi\",\n        comment: \"asdasds asdasd sad\",\n        rating: 4,\n        reply: [\"sfsdfsd\", \"Thank you\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"gendi gahnadi\",\n        customer_dp: \"jof hagi\",\n        comment: \"hgfhf dghhdgf dfgshssdd\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n    ],\n    variants: [\n      {\n        varient_name: \"white 2 brushes\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n        color: \"green\",\n        details: \"\",\n        Quantity: 450,\n      },\n      {\n        varient_name: \"pink 2 brushes with bateries\",\n        image:\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\n        color: \"pink\",\n        details: \"\",\n        Quantity: 230,\n      },\n      {\n        varient_name: \"two heads only\",\n        image:\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\n        color: \"blue\",\n        details: \"\",\n        Quantity: 500,\n      },\n    ],\n  });\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Center mb=\"20px\">\n        <SearchBar text=\"I'm shopping for\" />\n      </Center>\n      <SimpleGrid\n        columns={2}\n        spacing={5}\n        minChildWidth=\"400px\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"gray.300\"\n      >\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\n          <Image\n            src={data.variants[0].image}\n            w=\"auto\"\n            h=\"auto\"\n            alt=\"image\"\n            fit\n          />\n        </Box>\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          overflow=\"hidden\"\n          p={{ base: \"5px\", sm: \"20px\" }}\n        >\n          <Heading as=\"h2\" size=\"2xl\">\n            Submit your feedback...\n          </Heading>\n\n          <Text fontSize=\"6xl\">{data.item_name}</Text>\n\n          <Badge variant=\"outline\" colorScheme=\"yellow\" fontSize='lg'>\n            {data.category}\n          </Badge>\n\n          <Box d=\"flex\" mt=\"10\" alignItems=\"center\">\n            {Array(5)\n              .fill(\"\")\n              .map((_, i) => (\n                <StarIcon\n                  key={i}\n                  color={i < rating ? \"cyan.500\" : \"cyan.100\"}\n                  onClick={() => setRating(i + 1)}\n                  boxSize=\"50px\"\n                  cursor=\"pointer\"\n                />\n              ))}\n          </Box>\n          <form>\n            <Textarea mt=\"30px\" placeholder=\"Type your comment here...\" />\n            <Stack direction=\"row\" spacing={4} mt=\"20px\">\n              <Button\n                loadingText=\"Submitting\"\n                type=\"submit\"\n                rightIcon={<ArrowForwardIcon />}\n                colorScheme=\"teal\"\n                variant=\"outline\"\n              >\n                Leave Feedback\n              </Button>\n            </Stack>\n          </form>\n        </Box>\n      </SimpleGrid>\n    </Box>\n  );\n}\n\nexport default FeedbackPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Seller/SellerHome.js",["385","386","387"],"import React from \"react\";\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\nimport BottomItems from \"../../components/Footer/BottomItems\";\nimport Footer from \"../../components/Footer/Footer\";\nimport SearchBarHome from \"../../components/SearchBarHome\";\nimport Middle from \"../../components/Seller/Middle\";\nimport Card from \"../../components/Seller/Card\";\nimport { Box, Flex, Skeleton, Stack } from \"@chakra-ui/react\";\nimport { AiFillExperiment } from \"react-icons/ai\";\n\nfunction SellerHome() {\n  return (\n    <>\n    <SearchBarHome />\n      <Middle />\n      <Stack mb='25px' p='10px'>\n                <Skeleton height=\"40px\" />\n                <Skeleton height=\"20px\" />\n                <Skeleton height=\"10px\" />\n              </Stack>\n      <div className=\"buttons\" p=\"10px\">\n        <Card\n          imageUrl=\"./img/svg-1.svg\"\n          imageAlt=\"User\"\n          type=\"Awaiting Shipment Orders\"\n          count=\"34 new orders received today\"\n        />\n        <Card\n          imageUrl=\"./img/svg-5.svg\"\n          imageAlt=\"User\"\n          type=\"Awaiting Delivery Orders \"\n          count=\"20 orders waiting for delivery\"\n        />\n        <Card\n          imageUrl=\"./img/svg-2.svg\"\n          imageAlt=\"User\"\n          type=\"All Orders\"\n          count=\"5100 total orders\"\n        />\n        <Card\n          imageUrl=\"./img/svg-8.svg\"\n          imageAlt=\"User\"\n          type=\"My Items\"\n          count=\"You have listed 20 items\"\n        />\n        <Card\n          imageUrl=\"./img/svg-6.svg\"\n          imageAlt=\"User\"\n          type=\"List New Item\"\n          count=\"\"\n        />\n      </div>\n      <BottomItems />\n      <Footer />\n      <BottomFooter shopName=\"Electrica\" />\n    </>\n  );\n}\n\nexport default SellerHome;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/ProtectedRoute.js",["388"],"import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n\nfunction ProtectedRoute({isAuth: isAuth, component: Component, ...rest}) {\n    return (\n\n     <Route {...rest} render={props => {\n        if(isAuth) {\n            return <Component/>;\n        } else {\n            return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n        }\n        }} />\n    );\n}\n\nexport default ProtectedRoute\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js",["389","390","391"],"import {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  IconButton,\n  Image,\n  SimpleGrid,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { AddIcon, MinusIcon, StarIcon } from \"@chakra-ui/icons\";\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\nimport SearchBar from \"../components/SearchBar\";\nimport axios from \"axios\";\nimport { arrayBufferToBinaryString } from \"blob-util\";\n\nfunction SpecificProductPage() {\n  let { id } = useParams();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\n\n  const quantity_inc = () => {\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\n  };\n  const quantity_dec = () => {\n    if (currentOrder.quantity > 0)\n      setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\n  };\n  const [data, setData] = useState({\n    item_ID: \"233d\",\n    item_name: \"Electric tooth brush\",\n    category: \"electronic\",\n    price: 200.0,\n    orders: 345,\n    description:\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n    status: \"Available\",\n    feedbacks: [\n      {\n        customer_name: \"jof hagi\",\n        customer_dp: \"jof hagi\",\n        comment: \"asdasds asdasd sad\",\n        rating: 4,\n        reply: [\"sfsdfsd\", \"Thank you\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"gendi gahnadi\",\n        customer_dp: \"jof hagi\",\n        comment: \"hgfhf dghhdgf dfgshssdd\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n    ],\n    variants: [\n      {\n        varient_name: \"white 2 brushes\",\n        image:\n          \"../images/White.jpg\",\n        color: \"green\",\n        details: \"\",\n        Quantity: 450,\n      },\n      {\n        varient_name: \"pink 2 brushes with bateries\",\n        image:\n          \"../images/Pink.jpg\",\n        color: \"pink\",\n        details: \"\",\n        Quantity: 230,\n      },\n      {\n        varient_name: \"two heads only\",\n        image:\n          \"../images/blue.jpg\",\n        color: \"blue\",\n        details: \"\",\n        Quantity: 500,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/items/specificitem/${id}`).then((response) => {\n      let data = response.data.items;\n      console.log(data)\n      setData(data);\n    });\n  }, []);\n\n \n\n  var imageStack = new Array(data.variants.length)\n    .fill(0)\n    .map((zero, index) => (\n      <Box\n        cursor=\"pointer\"\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\n        borderColor=\"gray.500\"\n        onClick={() => setCurrentOrder({ ...currentOrder, varient: index })}\n      >\n        <Image\n          src={data.variants[index].Image}\n          w=\"100px\"\n          h=\"100px\"\n          alt=\"image\"\n        />\n      </Box>\n    ));\n\n    var img = (data.variants.length === 0) ? data.Image.data : data.variants[currentOrder.varient].image.data;\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Center mb=\"20px\">\n        <SearchBar text=\"I'm shopping for\" />\n      </Center>\n\n      <SimpleGrid\n        columns={2}\n        spacing={5}\n        minChildWidth=\"400px\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"gray.300\"\n      >\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\n          <Image\n            src={`data:image/png;base64,${arrayBufferToBinaryString(img)}`}\n            w=\"auto\"\n            h=\"auto\"\n            alt=\"image\"\n            fit\n          />\n        </Box>\n        \n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          overflow=\"hidden\"\n          p={{ base: \"5px\", sm: \"20px\" }}\n        >\n          <Heading as=\"h2\" size=\"2xl\">\n            {data.Item_name}\n          </Heading>\n\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\n            {data.Category}\n          </Text>\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n            {Array(5)\n              .fill(\"\")\n              .map((_, i) => (\n                <StarIcon\n                  key={i}\n                  color={i < data.rating ? \"cyan.500\" : \"cyan.300\"}\n                />\n              ))}\n            <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\n              {data.feedbacks.length} reviews &bull; {data.Num_of_orders} orders\n            </Box>\n          </Box>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Varient\n          </Heading>\n          <HStack mt=\"20px\">{imageStack}</HStack>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Quantity\n          </Heading>\n          <HStack mt=\"10px\">\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<AddIcon />}\n              onClick={quantity_inc}\n            />\n            <Text>{currentOrder.quantity}</Text>\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<MinusIcon />}\n              onClick={quantity_dec}\n            />\n            <Text pl='20px' color='red.500' >{data.variants.length === 0 ? null : data.variants[currentOrder.varient].Quantity} items are available</Text>\n          </HStack>\n\n          <HStack mt=\"20px\">\n            <Button colorScheme=\"cyan\" color=\"white\" size=\"lg\">\n              Buy now\n            </Button>\n            <Button colorScheme=\"orange\" size=\"lg\" variant=\"outline\">\n              Add to cart\n            </Button>\n          </HStack>\n        </Box>\n      </SimpleGrid>\n      <Box\n        width=\"auto\"\n        h=\"auto\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"gray.300\"\n        overflow=\"hidden\"\n        p={{ base: \"5px\", sm: \"20px\" }}\n        mt=\"20px\"\n        mb=\"10px\"\n      >\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\n          Description\n        </Heading>\n        <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\n          {data.Description}\n        </Text>\n      </Box>\n      <Box\n        width=\"auto\"\n        h=\"auto\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"gray.300\"\n        overflow=\"hidden\"\n        p={{ base: \"5px\", sm: \"20px\" }}\n        mt=\"20px\"\n        mb=\"100px\"\n      >\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\n          Reviews\n        </Heading>\n\n        <ReviewCountPreview feedbacks={data.feedbacks} />\n        <Tabs>\n          <TabList>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> All\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 5\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 4\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 3\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 2\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 1\n            </Tab>\n          </TabList>\n\n          <TabPanels>\n            <TabPanel>\n              <CategorizedReviewPreview\n                feedbacks={data.feedbacks}\n                rating=\"all\"\n              />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={5} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={4} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={3} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={2} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={1} />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Box>\n  );\n}\n\nexport default SpecificProductPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js",["392","393","394","395","396"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Avatar,\n    Divider,\n    Heading,\n    SimpleGrid,\n    Text,\n    useColorMode,\n    useToast\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport Axios from 'axios'\n\n\nconst CustomerDashboard = () => {\n\n    const toast = useToast()\n\n    const [userdata, setUserdata] = useState([])\n    const [orderNum, setOrderNum] = useState([])\n        \n    useEffect(() => {\n        Axios.get(\"http://localhost:5000/customer/user\")\n        .then((Response)=>{\n            console.log(Response.data.user[0]);\n            // console.log(Response.data.det);\n            setUserdata(Response.data.user[0]);\n            const det = arrangeData(Response.data.det)\n            setOrderNum(det);\n            \n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Loading Error\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }, [])\n\n\n\n    const arrangeData = (data)=>{\n        var newdata = {\n            \"Shipped\":0,\n            \"Preparing\":0,\n            \"Awaiting_Cancel\":0,\n            \"Cancelled\":0,\n            \"Delivered\":0\n        }\n        for(var i=0;i<data.length;i++){\n          if(data[i].Order_status ===\"Shipped\"){\n              newdata.Shipped+=1;\n          }\n          else if (data[i].Order_status ===\"Preparing\"){\n              newdata.Preparing+=1;\n          }\n          else if (data[i].Order_status ===\"Awaiting_Cancel\"){\n            newdata.Awaiting_Cancel+=1;\n            }\n          else if (data[i].Order_status ===\"Cancelled\"){\n            newdata.Cancelled+=1;\n            }\n            else if (data[i].Order_status ===\"Delivered\"){\n                newdata.Delivered+=1;\n                }\n\n          \n        }\n        // console.log(newdata);\n        return newdata\n    }\n\n    // console.log(orderNum);\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n\n    return (\n        <Box\n        \n        pt=\"100px\"\n        // pl={{ base: \"10px\", sm: \"100px\" }}\n        // pr={{ base: \"10px\", sm: \"100px\" }} \n        >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(2, 1fr)\"\n                \n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"dashboard\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} m={5} mt={8}>\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"\n                        \n                        overflow=\"hidden\"\n                        p=\"10px\"\n                        pb=\"5px\"\n                        bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n                        borderRadius='10px'\n                        >\n                        \n                        <Grid \n                            templateRows=\"repeat(2, 1fr)\"\n                            gap={4}\n                            \n                        >\n                            <GridItem p=\"10px\"  >\n                                  <SimpleGrid columns={2} spacing={5}>\n                                        <Box >\n                                            <Avatar\n                                                size=\"xl\"\n                                                // name={userdata[0].First_Name + \" \" + userdata[0].Last_Name}\n                                                src=\"https://images.unsplash.com/photo-1553267751-1c148a7280a1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80\"\n                                            />\n                                        </Box>\n                                        <Box >\n                                        <Heading size='lg'> Hello, {userdata.First_name + \" \" + userdata.Last_name} </Heading>\n                                        </Box>\n                                    </SimpleGrid>\n    \n                            </GridItem >\n                            \n                            <GridItem >\n                                       <Box \n                                        bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                                        borderRadius='md'\n                                       \n                                        color='white'\n                                       >\n                                           <SimpleGrid columns={5} spacing={5} pt='10px' pb='10px'>\n                                            \n                                                <Box textAlign='center'>\n                                                    <Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h4' size='lg'> {orderNum.Preparing} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>  Awaiting Shipment</Text>\n                                                </Box>\n                                      \n                                                <Box textAlign='center' >\n                                                    \n                                                    <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {orderNum.Shipped} </Heading>\n                                                    \n                                                    <Text  textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Shipped</Text>\n                                                </Box> \n                                              \n                                      \n                                                <Box textAlign='center'>\n                                                    <Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h4' size='lg'> {orderNum.Awaiting_Cancel} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Cancel</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                    <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {orderNum.Cancelled} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Cancelled</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                   <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {orderNum.Delivered} </Heading>\n                                                    \n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Delivered</Text>\n                                                </Box>\n                                                \n                                            </SimpleGrid> \n\n                                       </Box>\n                            </GridItem>\n                            \n                        </Grid>\n\n                    </Box>\n\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default withRouter(CustomerDashboard)\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js",["397","398"],"import {\n  Box,\n  Button,\n  Center,\n  Grid,\n  GridItem,\n  Heading,\n  useColorMode,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\n\nimport SearchBar from \"../components/SearchBar\";\nimport ProductCard from \"../components/ProductCard\";\nimport axios from \"axios\";\n\nfunction CategoryPage() {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/items/categories\").then((response) => {\n      let data = response.data.items;\n      data.push(\"All Categories\");\n      setCategories(data);\n    });\n\n    axios\n    .get(`http://localhost:5000/items`)\n    .then((response) => {\n      let data = response.data.items;\n      setActiveCategoryProducts(data);\n\n    });\n  }, []);\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  const [activeCategory, setActiveCategory] = useState();\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([]);\n\n\n  var searchBarText = `Search in ${activeCategory}`;\n\n  const HandleClick = (category) => {\n    setActiveCategory(category);\n    if(category!==\"All Categories\"){\n      var url = `http://localhost:5000/items/search/${category}`;\n    }else{\n      var url = `http://localhost:5000/items`;\n    }\n\n    axios\n    .get(url)\n    .then((response) => {\n      let data = response.data.items;\n      setActiveCategoryProducts(data);\n\n    });\n  \n  };\n  const HandleChange = (event) => {\n    var value = event.target.value;\n    axios\n    .post(\"http://localhost:5000/items\",{\n      \"category\":`${activeCategory}`,\n      \"item_name\":`${value}`\n    })\n    .then((response) => {\n      let data = response.data.items;\n      setActiveCategoryProducts(data);\n    });\n  \n  };\n\n\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", md: \"100px\" }}\n      pr={{ base: \"10px\", md: \"100px\" }}\n    >\n      <Center mb=\"10px\">\n        <SearchBar text={searchBarText} onChange={HandleChange}/>\n      </Center>\n      <Grid\n        templateRows=\"repeat(1, 1fr)\"\n        templateColumns=\"repeat(5, 1fr)\"\n        gap={0}\n        pb=\"200px\"\n      >\n        <GridItem\n          rowSpan={1}\n          colSpan={1}\n          bg={colorMode === \"light\" ? \"gray.200\" : \"gray.600\"}\n          p=\"10px\"\n        >\n          <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\n            Categories\n          </Heading>\n          <VStack>\n            {Array(categories.length)\n              .fill(\"\")\n              .map((_, i) =>\n                categories[i] === activeCategory ? (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"cyan\"\n                    isActive\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                ) : (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"cyan\"\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                )\n              )}\n          </VStack>\n        </GridItem>\n        <GridItem\n          rowSpan={1}\n          colSpan={4}\n          borderWidth=\"1px\"\n          borderColor=\"gray.300\"\n          p=\"20px\"\n        >\n          <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\n            {activeCategory}\n          </Heading>\n          <Grid\n            h=\"auto\"\n            templateColumns={{\n              md: \"repeat(1, 1fr)\",\n              lg: \"repeat(3, 1fr)\",\n              xl: \"repeat(4, 1fr)\",\n            }}\n            gap={2}\n          >\n            {Array(activeCategoryProducts.length)\n              .fill(\"\")\n              .map((_, i) => (\n                <ProductCard\n                  title={activeCategoryProducts[i].Item_name}\n                  imageUrl={activeCategoryProducts[i].Image}\n                  itemName={activeCategoryProducts[i].Item_name}\n                  category={activeCategoryProducts[i].Category}\n                  price={activeCategoryProducts[i].Price}\n                  orders={activeCategoryProducts[i].Num_of_orders}\n                  status={activeCategoryProducts[i].Status}\n                  rating={activeCategoryProducts[i].Rating}\n                  reviews={activeCategoryProducts[i].Reviews}\n                />\n              ))}\n          </Grid>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default CategoryPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/Home.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js",["399","400","401","402"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  Button,\n  useColorMode,\n  IconButton,\n  ReactRouterLink,\n  Img,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport Axios from \"axios\";\n\nfunction Navbar(props) {\n  const MenuItems = ({ children }) => (\n    <Button\n      mt={{ base: 4, md: 0 }}\n      mr={6}\n      display=\"block\"\n      colorScheme=\"teal.500\"\n      variant=\"link\"\n      color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.100\"}\n    >\n      {children}\n    </Button>\n  );\n\n  const [show, setShow] = React.useState(false);\n  const handleToggle = () => setShow(!show);\n  \n  \n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      pt=\"1.0rem\"\n      bg={colorMode === \"light\" ? \"white\" : \"#101522\"}\n      color=\"white\"\n      position=\"fixed\"\n      top=\"0\"\n      width=\"100%\"\n      zIndex=\"10000\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <Img ml=\"1.5rem\" src=\"../logo.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\n      </Flex>\n\n      <IconButton\n      display={{base:'block', md:'none'}}\n        variant=\"outline\"\n        colorScheme=\"cyan\"\n        icon={<HamburgerIcon />}\n        onClick={handleToggle}\n        mr='20px'\n      />\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ base: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n        pl=\"20px\"\n      >\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/\">\n            Home\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/\">\n            Dashboard\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/\">\n            About us\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/\">\n            Help\n          </Link>\n        </MenuItems>\n      </Box>\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <IconButton\n          aria-label=\"Call Segun\"\n          size=\"lg\"\n          icon={<Icon as={FiShoppingCart} w={8} h={8}  />}\n          mr={{ base: \"5px\", md: \"20px\" }}\n          variant=\"ghost\"\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n        />\n        <IconButton\n          aria-label=\"Call Segun\"\n          size=\"md\"\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n          mr={{ base: \"5px\", md: \"20px\" }}\n          variant=\"ghost\"\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          onClick={toggleColorMode}\n        />\n        <a href=\"/signin\">\n          {props.isLoggedIn ? <Button\n            type=\"button\"\n            border=\"1px\"\n            variant=\"ghost\"\n            mr=\"1.5rem\"\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          >\n            Log Out\n          </Button>: <Button\n            type=\"button\"\n            border=\"1px\"\n            variant=\"ghost\"\n            mr=\"1.5rem\"\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          >\n            Log In\n          </Button> }\n          \n        </a>\n      </Box>\n\n      <Box\n        w=\"100%\"\n        h=\"5px\"\n        b=\"0px\"\n        mt=\"10px\"\n        bg={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n      />\n    </Flex>\n  );\n}\n\nexport default Navbar;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/SignIn.js",["403","404","405"],"import React, { useEffect } from \"react\";\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\nimport BottomItems from \"../../components/Footer/BottomItems\";\nimport Footer from \"../../components/Footer/Footer\";\nimport SearchBarHome from \"../../components/SearchBarHome\";\nimport LogIn from \"../../components/SignIn/LogIn\";\nimport service from \"../../API_Service/checkLogin\";\nimport Axios from \"axios\";\n\nfunction SignIn() {\n\n  // const [isAuthorized, setIsAuthorized] = useState(false);\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // const [LoggedIn, setLoggedIn] = useState(false);\n  // checkAuthorization(response => {\n  //   setIsAuthorized(response);\n  // })\n  // checkAuthentication(response => {\n  //   setIsAuthenticated(response);\n  // })\n\n  // if (isAuthorized === isAuthenticated) {\n  //   setLoggedIn(true);\n  // } else {\n  //   setLoggedIn(false);\n  // }\n  \n  \n  return (\n    <>\n      <SearchBarHome />\n\n      <LogIn />\n      <BottomItems />\n      <Footer />\n      <BottomFooter shopName=\"Electrica\" />\n    </>\n  );\n}\n\nexport default SignIn;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipmentCard.js",["406","407","408","409","410","411","412","413","414"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\n/*                  Order_ID={orderlist[i].Order_ID}\n                    Varient_ID= {orderlist[i].Varient_ID}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].payment}\n                    Date_paid={orderlist[i].Date_paid}\n                    Quantity={orderlist[i].Quantity}\n                    F_name= {orderlist[i].F_name}\n                    L_name= {orderlist[i].L_name}*/\n\nfunction ShipmentCard(props) {\n  return (\n \n    <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\n        < HStack>  \n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \n        \n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\n        </Box>\n\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box fontWeight=\"bold\"><Text color=\"red.600\"   fontSize=\"lg\">\n            {props.Order_ID}\n          </Text></Box>\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\n            {props.F_name} {props.L_name}\n          </Text></Box>\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\n            {props.item_name} \n          </Text></Box>\n        </Box>\n        \n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\n        Quantity: <b>{props.Quantity}</b>\n          </Text></Box>\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\n        Varient: <b>{props.Varient_ID} </b>\n          </Text></Box>\n        </Box>\n       \n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \n        <Text color=\"blue.700\" fontSize=\"2lg\">\n            Rs. {props.payment}\n          </Text>\n        </Box>\n\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \n        <Text color=\"gray.600\" fontSize=\"lg\">\n            Paid On: {props.Date_paid}\n          </Text>\n        </Box>\n        </HStack>\n    </Box>\n  );\n}\n\nexport default ShipmentCard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Deliverycard.js",["415","416","417","418","419","420","421","422","423"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\n/*                  Order_ID={orderlist[i].Order_ID}\n                    Varient_ID= {orderlist[i].Varient_ID}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].payment}\n                    Date_paid={orderlist[i].Date_paid}\n                    Quantity={orderlist[i].Quantity}\n                    F_name= {orderlist[i].F_name}\n                    L_name= {orderlist[i].L_name}*/\n\nfunction Deliverycard(props) {\n  return (\n \n    <Box maxW=\"parent\"  _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }}  borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\n        < HStack>  \n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \n        \n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\n        </Box>\n\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box fontWeight=\"bold\"><Text color=\"red.600\"   fontSize=\"lg\">\n            {props.Order_ID}\n          </Text></Box>\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\n            {props.F_name} {props.L_name}\n          </Text></Box>\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\n            {props.item_name} \n          </Text></Box>\n        </Box>\n        \n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\n        Quantity: <b>{props.Quantity}</b>\n          </Text></Box>\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\n        Varient: <b>{props.Varient_ID} </b>\n          </Text></Box>\n        </Box>\n       \n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \n        <Text color=\"blue.700\" fontSize=\"2lg\">\n            Rs. {props.payment}\n          </Text>\n        </Box>\n\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   >\n            <Box>\n        <Text color=\"gray.600\" fontSize=\"lg\">\n           Paid On: {props.Date_paid}\n          </Text></Box> \n          <Box> <Text color=\"gray.600\" fontSize=\"lg\">\n           Shipped On: {props.Date_shipped}\n          </Text></Box> \n        </Box>\n        </HStack>\n    </Box>\n  );\n}\n\nexport default Deliverycard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePasswordForm.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js",["424","425","426","427","428","429"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,\n    Text,\n    Divider,\n    Link,\n    Button,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\n\n\nconst CustomerDashSideBar = ({page}) => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const sidebarButton = {\n        width:'80%',   \n        marginTop:'7px',\n        marginBottom:'7px',\n        marginLeft:'10%',\n        marginRight:'10%'\n    }\n\n    return (\n        <Box\n            width=\"auto\"\n            height={window.innerHeight-100}\n            // height=\"100%\"\n            overflow=\"hidden\"\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            pt='5'  \n           \n                    \n        >                   \n                <Link href='/customerdashboard'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Dashboard </Button> </Link>     \n          \n                <Link href='/allorders'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> My Orders  </Button> </Link>     \n         \n                <Link href='/carddetails'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Card & Bank Details  </Button></Link>     \n            \n                <Link href='/shippingaddress'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Shipping Address </Button></Link>     \n         \n                <Link href='/changepersonaldet'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Change Account Details </Button></Link>     \n           \n        </Box>\n    )\n}\n\nexport default CustomerDashSideBar\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js",["430"],"import { useState } from 'react';\nimport{\n    FormControl,\n    FormLabel,\n    Input,\n    useToast\n\n} from \"@chakra-ui/react\";\n\nconst AddAddress = ({addAddress,trigger}) => {\n    const [First_Name,setFirstName] = useState('')\n    const [Last_Name,setLastName] = useState('')\n    const [Street,setStreet] = useState('')\n    const [City,setCity] = useState('')\n    const [State,setState] = useState('')\n    const [ZIP,setZip] = useState('')\n\n    const toast = useToast()\n\n\n    const onSubmit = (e)=>{\n        e.preventDefault()\n\n        if(!First_Name || !Last_Name || !Street || !City || !State || !ZIP){\n            alert('Empty Field')\n            return\n        }\n        \n        addAddress({First_Name,Last_Name,Street,City,State,ZIP})\n\n        setFirstName('')\n        setLastName('')\n        setStreet('')\n        setCity('')\n        setState('')\n        setZip('')\n\n        \n    }\n\n    return (\n        <form  onSubmit={onSubmit} >\n            <FormControl>\n                <FormLabel>First Name</FormLabel>\n                <Input type=\"text\" placeholder='Name' value={First_Name} onChange={(e)=>setFirstName(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Last Name</FormLabel>\n                <Input type=\"text\" placeholder='Telephone' value={Last_Name} onChange={(e)=>setLastName(e.target.value)}  />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Street</FormLabel>\n                <Input type=\"text\" placeholder='Street' value={Street} onChange={(e)=>setStreet(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>City</FormLabel>\n                <Input type=\"text\" placeholder='City' value={City} onChange={(e)=>setCity(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>State</FormLabel>\n                <Input type=\"text\" placeholder='State' value={State} onChange={(e)=>setState(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Zip</FormLabel>\n                <Input type=\"text\" placeholder='Zip' value={ZIP} onChange={(e)=>setZip(e.target.value)} />\n            </FormControl>\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Address' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\n            \n        </form>\n    )\n}\n\nexport default AddAddress\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePersonalDetForm.js",["431"],"import {\n    Box,\n    FormControl,\n    FormLabel,\n    Heading,\n    Input,\n    useToast\n  } from \"@chakra-ui/react\";\n\nimport { useState,useEffect } from 'react';\nimport Axios from \"axios\";\n\nconst ChangePersonalDetForm = () => {\n    const [UserID,setUserID] = useState('')\n    const [firstname,setFirstName] = useState('')\n    const [lastname,setLastName] = useState('')\n    const [telephone,setTelephone] = useState('')\n    const [Email,setEmail] = useState('')\n   \n    useEffect(() => {\n        Axios.get(\"http://localhost:5000/customer/user\")\n        .then((Response)=>{\n            console.log(Response.data);\n            setFirstName(Response.data.user[0].First_name);\n            setLastName(Response.data.user[0].Last_name);\n            setTelephone(Response.data.user[0].Phone_No);\n            setEmail(Response.data.user[0].Email);\n            setUserID(Response.data.user[0].UserID);\n            \n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error loading data\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }, [])\n\n    \n    const toast = useToast()\n\n    const onSubmit = (e)=>{\n        e.preventDefault()\n\n        if(telephone.length!==10){\n            alert(\"Invalid Mobile Number\")\n            return\n        }\n\n\n        Axios.put('http://localhost:5000/customer/user',{UserID,firstname,lastname,telephone,Email})\n        .then((Response)=>{\n            toast({\n                position: \"bottom-right\",    \n                description: \"Successfully Updated the Personal Data\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          });  \n    }\n\n    console.log(firstname,lastname,telephone,Email)\n\n\n    return (\n        <Box>\n            <Heading size='lg' mb='5'>Change Personal Details</Heading>\n            <form onSubmit={onSubmit} >\n                <FormControl id=\"firstname\" mb='8'>\n                    <FormLabel>First Name</FormLabel>\n                                \n                        <Input   \n                            type='text'  \n                            placeholder='First Name'       \n                            defaultValue={firstname}\n                            name='firstname'\n                            onChange={(e)=>setFirstName(e.target.value)}\n                            required\n                        />\n                </FormControl>\n\n                <FormControl id=\"lastname\" mb='8'>\n                    <FormLabel>Last Name</FormLabel>\n                                \n                        <Input \n                            type='text'  \n                            placeholder='Last Name'  \n                            defaultValue={lastname} \n                            name='lastname'\n                            onChange={(e)=>setLastName(e.target.value)}\n                            required\n                        />\n                </FormControl>\n\n                <FormControl id=\"email\" mb='8'>\n                    <FormLabel>Email</FormLabel>\n                                \n                        <Input   \n                            type='email'\n                            placeholder='Email'  \n                            defaultValue={Email} \n                            name='Email'\n                            onChange={(e)=>setEmail(e.target.value)}\n                            required\n                        />\n                </FormControl>\n\n                <FormControl id=\"tel\" mb='8'>\n                    <FormLabel>Telephone Number</FormLabel>\n                                \n                        <Input   \n                            type='number'\n                            placeholder='Telephone Number'       \n                            defaultValue={telephone}\n                            name='telephone'\n                            onChange={(e)=>setTelephone(e.target.value)}\n                            required\n                        />\n                </FormControl>\n\n                <Input mt='2' mb='2'  type=\"submit\" value='Update Details' className='btn btn-block' bg=\"teal.600\" color='white'  />\n                            \n\n\n\n\n\n            </form>\n        </Box>\n    )\n}\n\nexport default ChangePersonalDetForm\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBarHome.js",["432","433"],"import { SearchIcon } from \"@chakra-ui/icons\";\nimport React from \"react\";\nimport {\n  Input,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n  Box,\n  Flex,\n  Center,\n  useColorMode,\n} from \"@chakra-ui/react\";\n\nfunction SearchBarHome(props) {\n  const {colorMode, toggleColorMode} = useColorMode();\n\n  return (\n    <Flex\n      marginTop=\"110px\"\n\n      borderBottom='5px solid #E8E8E8'\n      bg={colorMode === 'light' ? '#E8E8E8' : '#101522'}\n    >\n      <Box w=\"500px\" padding=\"15px\" marginLeft=\"30%\" >\n        <InputGroup bg='white' rounded='50px' border='blue'>\n          <InputRightElement >\n            <IconButton\n              colorScheme={colorMode === 'light' ? 'blue' : 'red'}\n              aria-label=\"Search database\"\n              icon={<SearchIcon  />}\n            />\n          </InputRightElement>\n\n          <Input\n            placeholder={props.text}\n            name=\"search\"\n            value={props.value}\n            onChange={props.onChange}\n          />\n        </InputGroup>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default SearchBarHome;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCards.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddBankCard.js",["434","435"],"import { useState } from 'react';\nimport{\n    FormControl,\n    FormLabel,\n    Input,\n    useToast\n\n} from \"@chakra-ui/react\";\n\nconst AddBankCard = ({addBankCard,trigger}) => {\n    const [Card_Number,setCardNumber] = useState('')\n    const [Owner,setOwner] = useState('')\n    const [CVV,setCvv] = useState('')\n    const [Exp_Date,setExpDate] = useState('')\n    const [Bank_Name,setBankName] = useState('')\n    const onSubmit = (e)=>{\n        e.preventDefault()\n\n        if(!Card_Number || !Owner || !CVV || !Exp_Date || !Bank_Name){\n            alert('Empty Field')\n            return\n        }\n\n        if(Card_Number.toString().length!==12){\n            alert('Invalid Card Number')\n            return\n        }\n    \n        var givenDate = new Date(Exp_Date);\n        var today = new Date();\n        if (givenDate.getFullYear() < today.getFullYear()) {\n            alert('card is expired')\n            return\n        }\n        else if (givenDate.getFullYear() == today.getFullYear()){\n            if(givenDate.getMonth() < today.getMonth()){\n                alert('card is expired')\n                return\n            }\n        }\n    \n        \n        addBankCard({Card_Number,Owner,CVV,Exp_Date,Bank_Name})\n\n        setCardNumber('')\n        setOwner('')\n        setCvv('')\n        setExpDate('')\n        setBankName('')\n        \n        \n    }\n\n    return (\n        <form  onSubmit={onSubmit} >\n            <FormControl>\n                <FormLabel>Bank Number</FormLabel>\n                <Input type=\"text\" placeholder='Bank Name' value={Bank_Name} onChange={(e)=>setBankName(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Card Number</FormLabel>\n                <Input type=\"number\" placeholder='Card Number' value={Card_Number} onChange={(e)=>setCardNumber(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Owner</FormLabel>\n                <Input type=\"text\" placeholder='Owner' value={Owner} onChange={(e)=>setOwner(e.target.value)}  />\n            </FormControl>\n            <FormControl>\n                <FormLabel>CVV</FormLabel>\n                <Input type=\"number\" placeholder='CVV' value={CVV} onChange={(e)=>setCvv(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Exp Date</FormLabel>\n                <Input type=\"month\" placeholder='Exp Date' value={Exp_Date} onChange={(e)=>setExpDate(e.target.value)} />\n            </FormControl>\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Card Details' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\n            \n        </form>\n    )\n}\n\nexport default AddBankCard\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTiles.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/Seller/Card.js",["436","437"],"import React from 'react';\nimport {\n  Box,\n  Image,\n  Badge,\n  Grid,\n  GridItem,\n  Center,\n  Button,\n  Heading,\n} from '@chakra-ui/react';\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\nimport {  MdSend, MdZoomIn } from 'react-icons/md';\n\nfunction Card(props) {\n  return (\n    <Box\n      width=\"auto\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      p=\"10px\"\n      mb=\"10px\"\n      ml=\"20px\"\n      mr=\"20px\"\n    >\n      <Grid\n        h=\"auto\"\n        templateColumns=\"repeat(8, 1fr)\"\n        templateRows=\"repeat(3, 1fr)\"\n        gap={4}\n      >\n        <GridItem\n          colSpan={{ base: 8, md: 2 }}\n          rowSpan={{ base: 1, md: 3 }}\n          pt=\"12px\"\n        >\n          <Center>\n            <Image\n              src={props.imageUrl}\n              alt={props.imageAlt}\n              borderRadius=\"full\"\n              boxSize=\"190px\"\n            />\n          </Center>\n        </GridItem>\n\n        <GridItem colSpan={{ base: 8, md: 5 }} rowSpan={{ base: 1, md: 3 }}>\n          <Box p=\"6\">\n            <Box d=\"flex\" alignItems=\"baseline\">\n              <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                Secured\n              </Badge>\n            </Box>\n\n            <Box\n              mt=\"1\"\n              fontWeight=\"semibold\"\n              as=\"h4\"\n              lineHeight=\"tight\"\n            >\n              <Heading as=\"h5\" size=\"2xl\">\n                {props.type}\n              </Heading>\n            </Box>\n\n            <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n              <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n                {props.count}\n              </Box>\n            </Box>\n          </Box>\n        </GridItem>\n        <GridItem\n          colSpan={{ base: 8, md: 1 }}\n          rowSpan={{ base: 1, md: 3 }}\n          pt=\"50px\"\n        >\n          <Button\n            rightIcon={<ArrowForwardIcon />}\n            colorScheme=\"teal\"\n            variant=\"outline\"\n            size=\"lg\"\n            rightIcon={<MdSend/>}\n          >\n            Check\n          </Button>\n          \n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Card;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Seller/Middle.js",["438","439","440"],"import React from \"react\";\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  IconButton,\n  Tooltip,\n  Avatar,\n  Center,\n  Badge,\n  Progress\n} from \"@chakra-ui/react\";\n\nimport { AvatarBadge } from \"@chakra-ui/react\";\nimport \"./Middle.css\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport { Money, MoneyOff } from \"@material-ui/icons\";\nimport { GiCartwheel, GiShoppingBag, GiShoppingCart } from \"react-icons/gi\";\nimport { FiUserPlus } from \"react-icons/fi\";\n\nfunction Middle() {\n  return (\n    <>\n      <div className=\"dashboard\">\n        <Box\n          borderStyle=\"solid\"\n          borderColor=\"gray.800\"\n          boarderRadius=\"200px\"\n          mt=\"0px\"\n          pl=\"20px\"\n          pr=\"20px\"\n          pt=\"150px\"\n          h=\"700px\"\n          mb=\"20px\"\n          bg=\"linear-gradient( blue -80%, white 100%);\"\n        >\n          <Box\n            borderStyle=\"solid\"\n            borderColor=\"gray.200\"\n            borderWidth=\"2px\"\n            p=\"10px\"\n            pt=\"30px\"\n            mt=\"-120px\"\n            borderRadius=\"20px\"\n          >\n            <Center mb=\"5px\" mt=\"10px\">\n              <Avatar bg=\"red.500\">\n                <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n              </Avatar>\n            </Center>\n\n            <Box h=\"50px\" mb=\"70px\">\n              <Center>\n                <Text color=\"black\">C.P.Amarasena</Text>\n              </Center>\n              <Progress\n                colorScheme=\"green\"\n                size=\"xs\"\n                mr=\"45%\"\n                ml=\"45%\"\n                mb=\"5px\"\n                isIndeterminate\n              />\n              <Center mb=\"10px\">\n                <Badge variant=\"solid\" colorScheme=\"green\">\n                  Online\n                </Badge>\n              </Center>\n              \n            </Box>\n\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              mt=\"100px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Total Revenue\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.900\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    variant=\"outline\"\n                    colorScheme=\"blue\"\n                    aria-label=\"\"\n                    icon={<FaDollarSign />}\n                  />\n                  Total Revenue : 15000$\n                </Text>\n              </Tooltip>\n            </Box>\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Today Revenue\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.900\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    colorScheme=\"green\"\n                    aria-label=\"\"\n                    variant=\"outline\"\n                    icon={<Money />}\n                  />\n                  Today Revenue : 440$\n                </Text>\n              </Tooltip>\n            </Box>\n\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Today Orders\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    colorScheme=\"red\"\n                    aria-label=\"\"\n                    variant=\"outline\"\n                    icon={<GiShoppingCart size=\"20px\" />}\n                  />\n                  Today Orders : 1500\n                </Text>\n              </Tooltip>\n            </Box>\n\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Awaiting for shipment orders\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    colorScheme=\"black\"\n                    aria-label=\"\"\n                    variant=\"outline\"\n                    icon={<GiShoppingBag size=\"20px\" />}\n                  />\n                  Awaiting for shipment : 120\n                </Text>\n              </Tooltip>\n            </Box>\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Today New Users\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    colorScheme=\"cyan\"\n                    aria-label=\"\"\n                    variant=\"outline\"\n                    icon={<FiUserPlus size=\"20px\" />}\n                  />\n                  Today New Users : 60\n                </Text>\n              </Tooltip>\n            </Box>\n          </Box>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nexport default Middle;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomFooter.js",["441"],"import React from \"react\";\nimport { Button } from \"../../globalStyles\";\nimport {\n  FaFacebook,\n  FaInstagram,\n  FaYoutube,\n  FaTwitter,\n  FaLinkedin,\n} from \"react-icons/fa\";\nimport {\n  FooterContainer,\n  SocialMedia,\n  SocialMediaWrap,\n  SocialLogo,\n  SocialIcon,\n  WebsiteRights,\n  SocialIcons,\n  SocialIconLink,\n} from \"./BottomFooter.elements\";\n\nfunction BottomFooter(props) {\n  return (\n    <FooterContainer>\n      <SocialMedia>\n        <SocialMediaWrap>\n          <SocialLogo to=\"/\">\n            <SocialIcon />\n            {props.shopName}\n          </SocialLogo>\n          <WebsiteRights>Designed By University of Moratuwa | All Rights Resserved, © 2021</WebsiteRights>\n          <SocialIcons>\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Facebook\">\n              <FaFacebook />\n            </SocialIconLink>\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Instagram\">\n              <FaInstagram />\n            </SocialIconLink>\n            <SocialIconLink\n              href={\n                \"//www.youtube.com/\"\n              }\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              aria-label=\"Youtube\"\n            >\n              <FaYoutube />\n            </SocialIconLink>\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Twitter\">\n              <FaTwitter />\n            </SocialIconLink>\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"LinkedIn\">\n              <FaLinkedin />\n            </SocialIconLink>\n          </SocialIcons>\n        </SocialMediaWrap>\n      </SocialMedia>\n    </FooterContainer>\n  );\n}\n\nexport default BottomFooter;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/Footer.js",["442","443","444","445","446","447","448","449","450"],"import React from \"react\";\nimport { Button } from \"../../globalStyles\";\nimport {\n  FaFacebook,\n  FaInstagram,\n  FaYoutube,\n  FaTwitter,\n  FaLinkedin,\n} from \"react-icons/fa\";\nimport {\n  FooterContainer,\n  FooterSubscription,\n  FooterSubText,\n  FooterSubHeading,\n  Form,\n  FormInput,\n  FooterLinksContainer,\n  FooterLinksWrapper,\n  FooterLinkItems,\n  FooterLinkTitle,\n  FooterLink,\n} from \"./Footer.elements\";\nimport BottomFooter from \"./BottomFooter\";\nfunction Footer() {\n  return (\n    <div>\n      <FooterContainer>\n        <FooterSubscription>\n          <FooterSubHeading>\n            Join us and have the best items at best prices!\n          </FooterSubHeading>\n          <FooterSubText>Start shopping today and experience the premium shopping</FooterSubText>\n          \n        </FooterSubscription>\n        <FooterLinksContainer>\n          <FooterLinksWrapper>\n            <FooterLinkItems>\n              <FooterLinkTitle>About Us</FooterLinkTitle>\n              <FooterLink to=\"/sign-up\">How it works</FooterLink>\n              <FooterLink to=\"/\">Testimonials</FooterLink>\n              <FooterLink to=\"/\">Careers</FooterLink>\n              <FooterLink to=\"/\">Investors</FooterLink>\n              <FooterLink to=\"/\">Terms of Service</FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems>\n              <FooterLinkTitle>Contact Us</FooterLinkTitle>\n              <FooterLink to=\"/\">Contact</FooterLink>\n              <FooterLink to=\"/\">Support</FooterLink>\n              <FooterLink to=\"/\">Destinations</FooterLink>\n              <FooterLink to=\"/\">Sponsorships</FooterLink>\n            </FooterLinkItems>\n          </FooterLinksWrapper>\n          <FooterLinksWrapper>\n            <FooterLinkItems>\n              <FooterLinkTitle>Videos</FooterLinkTitle>\n              <FooterLink to=\"/\">Submit Video</FooterLink>\n              <FooterLink to=\"/\">Ambassadors</FooterLink>\n              <FooterLink to=\"/\">Agency</FooterLink>\n              <FooterLink to=\"/\">Influencer</FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems>\n              <FooterLinkTitle>Social Media</FooterLinkTitle>\n              <FooterLink to=\"/\">Instagram</FooterLink>\n              <FooterLink to=\"/\">Facebook</FooterLink>\n              <FooterLink to=\"/\">Youtube</FooterLink>\n              <FooterLink to=\"/\">Twitter</FooterLink>\n            </FooterLinkItems>\n          </FooterLinksWrapper>\n        </FooterLinksContainer>\n      </FooterContainer>\n    </div>\n  );\n}\n\nexport default Footer;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomItems.js",["451","452","453","454"],"import { Box, Center, Icon, SimpleGrid, useColorMode } from \"@chakra-ui/react\";\nimport { CardGiftcard, CreditCardRounded } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { GiTruck } from \"react-icons/gi\";\nimport {\n  MdAttachMoney,\n  MdCreditCard,\n  MdSecurity,\n  MdSettings,\n} from \"react-icons/md\";\nexport default function BottomItems() {\n\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    // Passing `columns={[2, null, 3]}` and `columns={{sm: 2, md: 3}}`\n    // will have the same effect.\n\n    <SimpleGrid columns={[2, null, 4]} spacing=\"0px\">\n      <Box\n        bg={colorMode === 'light' ? 'white' : '#101522' }\n        height=\"250px\"\n        borderStyle=\"solid\"\n        borderColor=\"#E8E8E8\"\n        borderWidth=\"1px\"\n      >\n        <Center>\n          <Icon as={MdAttachMoney} w={20} h={20} />{\" \"}\n        </Center>\n        <Box>\n          <Center fontWeight=\"BOLD\">\n            Great Value\n          </Center>\n        </Box>\n        <Box padding=\"5%\" textAlign=\"center\">\n          We offer competitive prices on our 1000 plus product range.\n        </Box>\n      </Box>\n      <Box\n        bg={colorMode === 'light' ? 'white' : '#101522' }\n        height=\"250px\"\n        borderStyle=\"solid\"\n        borderColor=\"#E8E8E8\"\n        borderWidth=\"1px\"\n      >\n        <Center>\n          <Icon as={MdCreditCard} w={20} h={20} />{\" \"}\n        </Center>\n        <Box>\n          <Center fontWeight=\"BOLD\">\n            Safe Payment\n          </Center>\n        </Box>\n        <Box padding=\"5%\" textAlign=\"center\">\n          Pay with the world’s most popular and secure payment methods.\n        </Box>\n      </Box>\n      <Box\n        bg={colorMode === 'light' ? 'white' : '#101522' }\n        height=\"250px\"\n        borderStyle=\"solid\"\n        borderColor=\"#E8E8E8\"\n        borderWidth=\"1px\"\n      >\n        <Center>\n          <Icon as={MdSecurity} w={20} h={20} />{\" \"}\n        </Center>\n        <Box>\n          <Center fontWeight=\"BOLD\">\n            Shop with Confidence\n          </Center>\n        </Box>\n        <Box padding=\"5%\" textAlign=\"center\">\n          Our Buyer Protection covers your purchase from click to delivery.\n        </Box>\n      </Box>\n      <Box\n        bg={colorMode === 'light' ? 'white' : '#101522' }\n        height=\"250px\"\n        borderStyle=\"solid\"\n        borderColor=\"#E8E8E8\"\n        borderWidth=\"1px\"\n      >\n        <Center>\n          <GiTruck size=\"80px\" width=\"20px\" />\n        </Center>\n        <Box>\n          <Center fontWeight=\"BOLD\">\n            Country Wide Delivery\n          </Center>\n        </Box>\n        <Box padding=\"5%\" textAlign=\"center\">\n          Pay with the world’s most popular and secure payment methods.\n        </Box>\n      </Box>\n    </SimpleGrid>\n  );\n}\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js",["455","456","457","458","459","460","461","462"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n  VStack,\n  Progress,\n  Stack,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction ReviewCountPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  const total_reviews = props.feedbacks.length;\n\n  var s5 = 0;\n  var s4 = 0;\n  var s3 = 0;\n  var s2 = 0;\n  var s1 = 0;\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].Rate === 5) {\n      s5 = s5 + 1;\n    } else if (props.feedbacks[i].Rate === 4) {\n      s4 = s4 + 1;\n    } else if (props.feedbacks[i].Rate === 3) {\n      s3 = s3 + 1;\n    } else if (props.feedbacks[i].Rate === 2) {\n      s2 = s2 + 1;\n    } else if (props.feedbacks[i].Rate === 1) {\n      s1 = s1 + 1;\n    }\n  }\n\n  return (\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          5 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s5} reviews\n        </Text>\n        <Progress value={(s5 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          4 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s4} reviews\n        </Text>\n        <Progress value={(s4 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          3 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s3} reviews\n        </Text>\n        <Progress value={(s3 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          2 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s2} reviews\n        </Text>\n        <Progress value={(s2 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          1 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s1} reviews\n        </Text>\n        <Progress value={(s1 / total_reviews) * 100} />\n      </Box>\n    </Stack>\n  );\n}\n\nexport default ReviewCountPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js",["463"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction CategorizedReviewPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  var stars = (rating) => {\n    return Array(5)\n      .fill(\"\")\n      .map((_, j) => (\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\n      ));\n  };\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].Rate === props.rating || props.rating === 'all') {\n      reviews.push(\n        <Box mb='10px'>\n          <HStack>\n            <Avatar\n              name={props.feedbacks[i].First_name +' ' +props.feedbacks[i].Last_name}\n              src={props.feedbacks[i].customer_dp}\n            />\n            <Box\n              w=\"100%\"\n              borderWidth=\"2px\"\n              borderRadius=\"lg\"\n              p=\"10px\"\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\n            >\n              <Heading as=\"h5\" size=\"sm\">\n                {props.feedbacks[i].First_name +' ' +props.feedbacks[i].Last_name}\n              </Heading>\n              <Text>{props.feedbacks[i].Comment}</Text>\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n                {stars(props.feedbacks[i].Rate)}\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\n                  {props.feedbacks[i].Rate}/5\n                </Box>\n              </Box>\n            </Box>\n          </HStack>\n          <Replys replys={[]} />\n        </Box>\n      );\n    }\n  }\n\n  if (reviews.length === 0) {\n    reviews.push(<Text>No reviews</Text>);\n  }\n\n  return <>{reviews}</>;\n}\n\nexport default CategorizedReviewPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Slider/SliderData.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/Register.js",["464","465"],"import React, { useState } from 'react';\nimport './Register.css';\nimport FormSignup from './FormSignup';\nimport FormSuccess from './FormSuccess';\nimport Axios from \"axios\";\nimport useForm from \"./FormSignup\";\n// import { Redirect } from 'react-router-dom';\n\nconst Register = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n    console.log(\"Hello\")\n  }\n  \n  return (\n    <>\n    {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\n    background-size: cover !important; <Redirect to='/' />*/}\n      <div className='form-container'>\n\n        <div className='form-content-left'>\n          <img className='form-img' src='img/svg-2.svg' alt='Security' />\n        </div>\n        {!isSubmitted ? (\n          <FormSignup submitForm={submitForm} />\n        ) : (\n          \n          <FormSuccess />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/API_Service/checkLogin.js",["466","467"],"import Axios from \"axios\";\n\n\nfunction checkAuthorization (callback) {\n    Axios.get(\"http://localhost:5000/customer/login\")\n    .then((response) => {\n      if(response.data.LoggedIn === true) {\n        console.log(response.data);\n        callback(response.data.LoggedIn);\n      }else{\n        callback(false)\n      }\n      });\n} \n\nfunction checkAuthentication (callback) {\n        Axios.get(\"http://localhost:5000/customer/isUserAuth\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")},\n        }).then(response => {\n          if(response.status == 200) {\n              callback(true)\n          } else {\n              callback(false);\n          }\n        });\n}\n\n// function checkLoggedIn(callback) {\n//   const [isAuthorized, setIsAuthorized] = useState(false);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   const [LoggedIn, setLoggedIn] = useState(false);\n//   checkAuthorization(response => {\n//     setIsAuthorized(response);\n//   })\n//   checkAuthentication(response => {\n//     setIsAuthenticated(response);\n//   })\n\n//   if (isAuthorized === isAuthenticated) {\n//     setLoggedIn(true);\n//   } else {\n//     setLoggedIn(false);\n//   }\n//   callback(LoggedIn);\n// }\n\nexport default {\n  checkAuthorization,\n  checkAuthentication\n}","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/LogIn.js",["468","469","470","471","472"],"import React, { useEffect, useState } from \"react\";\nimport \"./LogIn.css\";\nimport FormLogIn from \"./FormLogIn\";\nimport FormSuccess from \"./FormSuccess\";\nimport Axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\n\nconst LogIn = () => {\n\n  \n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  // Axios.defaults.withCredentials = true;\n  // useEffect(() => {\n  //   Axios.get(\"http://localhost:5000/customer/login\").then((response) => {\n  //     console.log(response);\n  //   })\n  // }, [])\n\n  return (\n    <>\n      {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\n    background-size: cover !important; <Redirect to='/' />*/}\n      <div className=\"login-container\">\n        <div className=\"login-content-left\">\n          <img className=\"login-img\" src=\"img/svg-2.svg\" alt=\"Security\" />\n        </div>\n        {/* {!isSubmitted ? (\n          <FormLogIn submitForm={submitForm} />\n        ) : (\n          <Redirect to='/' />\n        )} */}\n        <FormLogIn submitForm={submitForm} />\n      </div>\n    </>\n  );\n};\n\nexport default LogIn;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Slider/ImageSlider.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/Pricing/Pricing.js",["473","474","475","476","477","478","479","480","481","482","483","484","485","486"],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../globalStyles\";\nimport { AiFillThunderbolt } from \"react-icons/ai\";\nimport {\n  GiAllForOne,\n  GiArtificialIntelligence,\n  GiCartwheel,\n  GiCrystalBars,\n  GiDeliveryDrone,\n  GiNewBorn,\n  GiShoppingBag,\n  GiShoppingCart,\n} from \"react-icons/gi\";\nimport { GiCutDiamond, GiRock } from \"react-icons/gi\";\nimport { GiFloatingCrystal } from \"react-icons/gi\";\nimport { IconContext } from \"react-icons/lib\";\nimport {\n  PricingSection,\n  PricingWrapper,\n  PricingHeading,\n  PricingContainer,\n  PricingCard,\n  PricingCardInfo,\n  PricingCardIcon,\n  PricingCardPlan,\n  PricingCardCost,\n  PricingCardLength,\n  PricingCardFeatures,\n  PricingCardFeature,\n} from \"./Pricing.elements\";\nimport { Box, Flex, Text, useColorMode } from \"@chakra-ui/react\";\n\nfunction Pricing(props) {\n  const { colorMode } = useColorMode();\n  const [isDark, setIsDark] = useState(false);\n\n  function handleChange(x) {\n    setIsDark(x);\n  }\n\n  useEffect(() => {\n    // Update isDark according to the color\n    {\n      colorMode === \"light\" ? handleChange(false) : handleChange(true);\n    }\n  });\n\n  return (\n    <IconContext.Provider value={{ color: \"#a9b3c1\", size: 64 }}>\n      {/**colorMode === \"light\" ? \"white\" : \"black\"**/}\n      <Flex\n        p=\"10px 0 160px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        bg={colorMode === \"light\" ? \"white\" : \"#101522\"}\n      >\n        <PricingWrapper>\n          <PricingHeading>{props.heading} </PricingHeading>\n          <PricingContainer>\n            <PricingCard to=\"/\">\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiShoppingBag\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\n                  />\n                </PricingCardIcon>\n\n                <PricingCardPlan>All Categories</PricingCardPlan>\n                <PricingCardCost>6+</PricingCardCost>\n                <PricingCardLength>categories</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>\n                    100+ New Users Everyday\n                  </PricingCardFeature>\n                  <PricingCardFeature>\n                    Best Store in Sri Lanka\n                  </PricingCardFeature>\n                  <PricingCardFeature>Trending Items</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n\n            <PricingCard to=\"/\">\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiNewBorn\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\n                  />\n                </PricingCardIcon>\n                <PricingCardPlan>New Arrivals</PricingCardPlan>\n                <PricingCardCost>150+</PricingCardCost>\n                <PricingCardLength>arrivals per day</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>\n                    Trending shop in the country\n                  </PricingCardFeature>\n                  <PricingCardFeature>Premium Shopping</PricingCardFeature>\n                  <PricingCardFeature>Buy and Feel It</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n\n            <PricingCard to=\"/\">\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiCutDiamond\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\n                  />\n                </PricingCardIcon>\n                <PricingCardPlan>Most Ordered Items</PricingCardPlan>\n                <PricingCardCost>500+</PricingCardCost>\n                <PricingCardLength>orders per day</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>\n                    You will experience the difference\n                  </PricingCardFeature>\n                  <PricingCardFeature>\n                    Best Prices for Best Products\n                  </PricingCardFeature>\n                  <PricingCardFeature>24/7 Support</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n          </PricingContainer>\n        </PricingWrapper>\n      </Flex>\n    </IconContext.Provider>\n  );\n}\nexport default Pricing;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShopNow.js",["487","488","489","490","491","492"],"import {\n  Button,\n  ReactRouterLink,\n  Link,\n  Box,\n  Text,\n  Heading,\n  Flex,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { GiShoppingCart } from \"react-icons/gi\";\n\nimport \"./ShopNow.css\";\n\nfunction ShopNow() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <div className=\"hero-container\">\n      <Flex>\n        <video src=\"/videos/shop.mp4\" autoPlay loop muted />\n      </Flex>\n      <Heading as=\"h1\" size=\"4xl\">\n        LOTS OF FANCY ITEMS\n      </Heading>\n\n      <p>What are you waiting for?</p>\n      <div>\n        <a href=\"#\">\n          <Box\n            as=\"button\"\n            p={4}\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\n            fontWeight=\"bold\"\n            borderRadius=\"15px\"\n            bgGradient={colorMode === \"light\" ? \"linear(to-r, black, blue.600)\" : \"linear(to-r, white, blue.600)\"}\n            _hover={{\n              bgGradient: \"linear(to-r, red, white)\",\n            }}\n          >\n            SHOP NOW\n          </Box>\n        </a>\n        <GiShoppingCart\n          className=\"cart-icon\"\n          size=\"100px\"\n          color={colorMode === \"light\" ? \"white\" : \"black\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ShopNow;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js",["493","494","495","496","497","498","499"],"import {React, useState} from 'react'\nimport {\n    Box,\n    Button,\n    GridItem,\n    useColorMode,\n    useDisclosure,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    ButtonGroup,\n  } from \"@chakra-ui/react\";\n\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\n\n\nconst ShipAddress = ({address,deleteAddress,updateAddress}) => {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    // const [data, setData] = useState({\n    //     id: address.Address_ID,\n    //     name: address.First_Name + address.Last_Name,\n    //     tp: address.tp,\n    //     street: address.Street,\n    //     city: address.City,\n    //     state: address.State,\n    //     zip: address.ZIP,\n    // })\n    \n    // const handleSubmit = (e)=>{\n    //     e.preventDefault()\n    //     // console.log('---------handlesubmit data--------')\n    //     // console.log(data)\n    //     updateAddress(data)\n        \n    //     // updateAddress(address.id)\n    // }\n\n    // const handleChange =  (event) => {\n    //     var value = event.target.value;\n    //     var name = event.target.name;\n\n    //     setData({ ...data, [event.target.name]: value })\n    //     // console.log(data)\n    // };\n\n\n    return(\n        <GridItem>\n        <Box  \n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            borderRadius='md'\n            border='1px'\n            borderColor='cyan.600'\n            p='6'\n            m='4'\n            pb='3'\n           \n            >\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                    <ImUser />\n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"lg\"       \n                        ml=\"2\"\n                    >\n                        { address.First_Name +\" \" +  address.Last_Name }\n                    </Box>\n                </Box> \n                {/* <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                    <ImPhone color='cyan.600'/>\n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        { address.tp }\n                    </Box>\n                </Box>  */}\n\n                <Box d=\"flex\" alignItems=\"baseline\" mt='2' mb='5'>\n                \n                    <ImLocation m='3'/>\n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        <Box>{ address.Street }</Box>\n                        <Box>{ address.City }</Box>\n                        <Box>{ address.State }</Box>\n                        <Box>{ address.ZIP }</Box>\n                    </Box>\n                </Box> \n               \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n\n                    {/* Delete Address */}\n                \n                    <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader fontWeight=\"semibold\">Delete Shipping Address</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody>\n                            Are you sure you want to delete the shipping address?\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteAddress(address.Address_ID)}}>Delete</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                   \n                </Box>\n\n        </Box>\n        </GridItem>\n    )\n}\n\nexport default ShipAddress\n\n\n\n\n\n\n                    {/* {/* Edit Address \n\n                     <Button colorScheme=\"teal\" size=\"xs\" mr='2' onClick={onOpen} >\n                        Edit\n                    </Button> \n                    {/* Edit modal */}\n                    // <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                    //     <ModalOverlay />\n                    //     <ModalContent>\n                    //         <ModalHeader>Edit shipping address</ModalHeader>\n                    //             <ModalCloseButton />\n                           \n                        // <form onSubmit={handleSubmit}>\n                        //     <ModalBody>\n                            \n                        //     <FormControl id=\"name\" > */}\n                        //         <FormLabel>Name</FormLabel>\n                                \n                        //         <Input   \n                        //         placeholder='Name'       \n                        //         value={data.name}\n                        //         name='name'\n                        //         onChange={(event) => handleChange(event)}\n                        //         />\n                        //     </FormControl>\n\n                        //     <FormControl id=\"tp\" >\n                        //         <FormLabel>Telephone</FormLabel>\n                        //         <Input \n                        //         placeholder=\"Telephone\" \n                            //     value={data.tp}\n                            //     name='tp'\n                            //     onChange={(event) => handleChange(event)}  />\n                            // </FormControl>\n\n                            // <FormControl id=\"street\" >\n                            //     <FormLabel>Street</FormLabel>\n                            //     <Input \n                            //     placeholder=\"street\" \n                            //     value={data.street}\n                            //     name='street'\n                            //     onChange={(event) => handleChange(event)} />\n                            // </FormControl>\n                            // <FormControl id=\"city\" >\n                            //     <FormLabel>City</FormLabel>\n                            //     <Input placeholder=\"city\" \n                            //     value={data.city}\n                            //     name='city'\n                            //     onChange={(event) => handleChange(event)} />\n                            // </FormControl>\n                            // <FormControl id=\"state\" >\n                            //     <FormLabel>State</FormLabel>\n                    //             <Input placeholder=\"state\" \n                    //             value={data.state}\n                    //             name='state'\n                    //             onChange={(event) => handleChange(event)}\n                    //             />\n                    //         </FormControl>\n                    //         <FormControl id=\"zip\" >\n                    //             <FormLabel>Zip</FormLabel>\n                    //             <Input placeholder=\"zip\" \n                    //             value={data.zip}\n                    //             name='zip'\n                    //             onChange={(event) => handleChange(event)}\n                    //             />\n                    //         </FormControl>\n                           \n                               \n                    //         </ModalBody>\n                    //         <ModalFooter>\n                    //         <Input mt='2' mb='2'  type=\"submit\" value='Update' className='btn btn-block' bg=\"teal.400\" color='white' onClick={onClose} />\n                    //             {/* <Button colorScheme=\"green\"  onClick={trigger} >Update</Button>                               */}\n                    //         </ModalFooter>\n                    //     </form>\n                    //     </ModalContent>\n                    // </Modal> */}\n\n    ","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCard.js",["500","501","502","503","504","505","506","507"],"import {React, useState} from 'react'\nimport {\n    Box,\n    Button,\n    GridItem,\n    useColorMode,\n    useDisclosure,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    ButtonGroup,\n    Heading,\n    HStack,\n    Spacer,\n    Image\n  } from \"@chakra-ui/react\";\n\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\n\n\nconst BankCard = ({bankcard,deleteBankCard}) => {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    \n\n    // const [data, setData] = useState({\n    //     cardNumber:bankcard.card_number,\n    //     owner:bankcard.owner,\n    //     cvv:bankcard.cvv,\n    //     expDate:bankcard.expDate\n    // })\n    \n\n    // const handleChange =  (event) => {\n    //     var value = event.target.value;\n    //     var name = event.target.name;\n\n    //     setData({ ...data, [event.target.name]: value })\n    //     // console.log(data)\n    // };\n\n\n    return(\n        <GridItem>\n        <Box  \n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            borderRadius='md'\n            border='1px'\n            borderColor='cyan.600'\n            p='6'\n            m='4'\n            pb='3'\n           \n            >\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                    \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"lg\"       \n                        ml=\"2\"\n                    >\n                       <Heading size='lg'> x x x x  x x x x {bankcard.Card_Number.toString().substr(8,13)} </Heading>\n                    </Box>\n                </Box> \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                   \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                       \n                    >\n                        { bankcard.Owner }\n                    </Box>\n                </Box> \n               \n               <HStack mb='4'>\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        {bankcard.Exp_Date}\n                    </Box>\n                </Box> \n                <Spacer />\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                <Image\n                    width='70px'\n                    src=\"../visa.png\"\n                    />\n                </Box> \n                </HStack>\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n\n                 \n                    {/* Delete Address */}\n                \n                    <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader fontWeight=\"semibold\">Delete Card Details</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody>\n                            Are you sure you want to delete card details?\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteBankCard(bankcard.Card_Number)}}>Delete</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                   \n                </Box>\n\n        </Box>\n        </GridItem>\n    )\n}\n\nexport default BankCard\n\n\n\n    ","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTile.js",["508","509","510","511","512","513"],"\nimport {\n    Box,\n    Grid,\n    GridItem,\n    useColorMode,\n    SimpleGrid,\n    Heading,\n    Text,\n    Image,\n    HStack,\n    Badge,\n    Button,\n    VStack,\n    Link,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverArrow,\n    PopoverBody,\n    PopoverCloseButton,\n    PopoverFooter,\n    ButtonGroup\n  } from \"@chakra-ui/react\";\n\nconst OrderTile = ({order,cancelOrder,confirmOrder}) => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n// try with normal functions\n    const StatusBadge = ({status})=>{\n        if(status==='shipped'){\n            return (<Badge colorScheme=\"green\">Shipped</Badge>)\n        }\n        else if (status==='preparing'){\n            return (<Badge colorScheme=\"yellow\">Preparing</Badge>)\n        }\n        else if (status==='cancelled'){\n            return (<Badge colorScheme=\"red\">Cancelled</Badge>)\n        }\n        else if (status==='received'){\n            return (<Badge colorScheme=\"gray.100\">received</Badge>)\n        }\n        else if (status==='await_cancel'){\n            return  (<Badge colorScheme=\"yellow\">Await Cancel</Badge>)\n        }\n        else{\n            return <div></div>\n        }\n    }    \n\n    const OrderActions = ({status})=>{\n        if(status=='shipped'){\n            return (<VStack>\n                <Link href={\"https://parcelsapp.com/en/tracking/\"+order.trackingNumber} isExternal><Button colorScheme='teal' size='xs'>Track Order</Button></Link>\n                <Button colorScheme='teal' size='xs' onClick={()=>{confirmOrder(order.orderID)}}>Confirm Received</Button>\n            </VStack>)\n        }\n        else if (status=='preparing'){\n            return (\n            <Box>\n                \n                <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme='teal' size='xs'  >Cancel Order</Button>\n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader textAlign='left' fontWeight=\"semibold\">Cancel the order</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody textAlign='center'>\n                            Are you really want to cancel the order\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{cancelOrder(order.orderID)}}>Cancel Order</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                  \n                </Box>\n            )\n        }\n        else{\n            return <div></div>\n        }\n    }\n\n    return (\n        <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  m='5' color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\n            <Grid>\n                <GridItem p='2' bg={colorMode === \"light\" ? \"teal.500\" : \"teal.50\"} color={colorMode === \"light\" ? \"teal.50\" : \"teal.500\"} >\n                    <SimpleGrid columns={3} textAlign='center'>\n                        <Box>\n                            <Heading as='h6' size='xs'>Order ID</Heading>\n                            <Text>{order.orderID}</Text>\n                        </Box>\n                        <Box>\n                            <Heading as='h6' size='xs'>Order Date</Heading>\n                            <Text>{order.orderedDate}</Text>\n                        </Box>\n                        <Box>\n                            <Heading as='h6' size='xs'>Order Amount</Heading>\n                            <Text>{order.orderAmount}</Text>\n                        </Box>\n                    </SimpleGrid>\n\n                </GridItem>\n                <GridItem p='2'  color={colorMode === \"light\" ? \"teal.800\" : \"teal.50\"} >\n\n                    <SimpleGrid columns={3} p='2'>\n                        <HStack>\n                            <Image\n                                boxSize=\"80px\"\n                                objectFit=\"cover\"\n                                src={order.orderItemImage}\n                                alt={order.orderItemImage}\n                            />\n                            <Heading as='h6' size='xs'>{order.orderItemTitle}</Heading>\n                        </HStack>\n                        <Box textAlign='center'>\n                           <StatusBadge  status={order.orderStatus}/>\n                        </Box>\n                        <Box textAlign='center'>\n                            {/* {order.status==='shipped'?(\n                       <Box>    {console.log(\"shipped\")}\n             <Button colorScheme='teal' size='xs'>Track Order</Button>\n                <Button colorScheme='teal' size='xs'>Confirm Received</Button>\n                                </Box>\n            ):(<Box><Button colorScheme='teal' size='xs'  onClick={()=>{cancelOrder(order.orderID)}}>Cancel Order</Button></Box>)} */}\n                             <OrderActions status={order.orderStatus}/> \n                           \n                        </Box>\n                    </SimpleGrid>\n\n                </GridItem>\n             \n\n            </Grid>\n        </Box>\n    )\n}\n\nexport default OrderTile\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js",["514","515","516","517","518","519","520","521","522","523","524","525"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n  Tr,\n  Td,\n} from \"@chakra-ui/react\";\nimport { encode } from \"base64-arraybuffer\";\nimport { arrayBufferToBinaryString } from \"blob-util\";\nimport React, { useState } from \"react\";\nimport ImageLoader from \"react-image-file\";\n\nfunction ProductCard(props) {\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" cursor='pointer'>\n      <Image\n        src={`data:image/png;base64,${arrayBufferToBinaryString(props.imageUrl.data)}`}\n        alt=\"product image\"\n        w=\"200px\"\n        h=\"200px\"\n      />\n      <Box p=\"6\">\n        <Badge\n          borderRadius=\"full\"\n          px=\"2\"\n          colorScheme=\"yellow\"\n          variant=\"outline\"\n          fontSize=\"9px\"\n        >\n          {props.category}\n        </Badge>\n        <Box\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          fontSize=\"xl\"\n          isTruncated\n        >\n          {props.title}\n        </Box>\n\n        <Box>\n          <Text color=\"gray.600\" fontSize=\"3xl\">\n            Rs. {props.price}\n          </Text>\n        </Box>\n\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\n          <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\n          >\n            {props.status}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {props.orders} Orders\n          </Box>\n        </Box>\n\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {props.reviews} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ProductCard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js",["526"],"import {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  HStack,\n  VStack,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction Replys(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const dp = \"\";\n\n  var replys = [];\n  for (var i = 0; i < props.replys.length; i++) {\n    replys.push(\n      <HStack spacing=\"10px\" w=\"100%\">\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          p=\"10px\"\n          mt=\"20px\"\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\n        >\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\n          <Text>{props.replys[i]}</Text>\n        </Box>\n      </HStack>\n    );\n  }\n\n  return (\n    <Box ml=\"100px\" mt='10px'>\n      <VStack w=\"100%\">{replys}</VStack>\n    </Box>\n  );\n}\n\nexport default Replys;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/Footer.elements.js",["527"],"import styled from 'styled-components';\nimport { FaMagento } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nexport const FooterContainer = styled.div`\n  background-color: #E8E8E8;\n  padding: 4rem 0 2rem 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FooterSubscription = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-bottom: 24px;\n  padding: 24px;\n  color: #fff;\n`;\n\nexport const FooterSubHeading = styled.p`\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\n    'Lucida Sans', Arial, sans-serif;\n  margin-bottom: 24px;\n  font-size: 24px;\n  color: black;\n`;\n\nexport const FooterSubText = styled.p`\n  margin-bottom: 24px;\n  font-size: 20px;\n  color: black;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n    width: 80%;\n  }\n`;\n\nexport const FormInput = styled.input`\n  padding: 10px 20px;\n  border-radius: 2px;\n  margin-right: 10px;\n  outline: none;\n  border: none;\n  font-size: 16px;\n  border: 1px solid #fff;\n\n  &::placeholder {\n    color: #242424;\n  }\n\n  @media screen and (max-width: 820px) {\n    width: 100%;\n    margin: 0 0 16px 0;\n  }\n`;\n\nexport const FooterLinksContainer = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  display: flex;\n  justify-content: center;\n  color: black;\n\n  @media screen and (max-width: 820px) {\n    padding-top: 32px;\n  }\n`;\n\nexport const FooterLinksWrapper = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n  }\n`;\n\nexport const FooterLinkItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 16px;\n  text-align: left;\n  width: 160px;\n  box-sizing: border-box;\n  color: black;\n\n  @media screen and (max-width: 420px) {\n    margin: 0;\n    padding: 10px;\n    width: 100%;\n  }\n`;\n\nexport const FooterLinkTitle = styled.h2`\n  margin-bottom: 16px;\n  font-size: 20px;\n  \n`;\n\nexport const FooterLink = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  margin-bottom: 0.5rem;\n  color: black;\n  &:hover {\n    color: #0467fb;\n    transition: 0.3s ease-out;\n  }\n`;\n\n","/Users/pasanmadushan/Desktop/Front-end-react/src/globalStyles.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomFooter.elements.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/FormSuccess.js",["528","529"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport { Button, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport \"./Register.css\";\n\nconst FormSuccess = () => {\n  return (\n    <div className=\"form-content-right\">\n      <h1 className=\"form-success\">\n        You have successfully registered!\n        <br />\n        Now Log In{\" \"}\n        <a href=\"signin\">\n          <Button\n            rightIcon={<ArrowForwardIcon />}\n            colorScheme=\"red\"\n            variant=\"outline\"\n          >\n            Sign In\n          </Button>\n        </a>\n      </h1>\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\n    </div>\n  );\n};\n\nexport default FormSuccess;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/FormSignup.js",["530"],"import React from \"react\";\nimport validate from \"./validateInfo\";\nimport useForm from \"./useForm\";\nimport \"./Register.css\";\n// Promise based HTTP client for the node.js\nimport Axios from \"axios\";\n\nconst FormSignup = ({ submitForm }) => {\n\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    submitForm,\n    validate\n  );\n  \n  return (\n    <div className=\"form-content-right\">\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\n        <h1>\n          Get started and have a premium shopping experience!\n          <br />\n          Create your account by filling out the information below.\n        </h1>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">First Name</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            name=\"firstname\"\n            placeholder=\"Enter your first name\"\n            value={values.firstname}\n            onChange={handleChange}\n          />\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\n          {errors.firstname && <p>{errors.firstname}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Last Name</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            name=\"lastname\"\n            placeholder=\"Enter your last name\"\n            value={values.lastname}\n            onChange={handleChange}\n          />\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\n          {errors.lastname && <p>{errors.lastname}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Phone Number</label>\n          <input\n            className=\"form-input\"\n            type=\"tel\"\n            name=\"phonenumber\"\n            placeholder=\"Enter your phone number\"\n            value={values.phonenumber}\n            onChange={handleChange}\n          />\n          {errors.phonenumber && <p>{errors.phonenumber}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Email</label>\n          <input\n            className=\"form-input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Password</label>\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Confirm Password</label>\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            name=\"password2\"\n            placeholder=\"Confirm your password\"\n            value={values.password2}\n            onChange={handleChange}\n          />\n          {errors.password2 && <p>{errors.password2}</p>}\n        </div>\n        <button className=\"form-input-btn\" type=\"submit\" >\n          Sign up\n        </button>\n        <span className=\"form-input-login\">\n          Already have an account? Login <a href=\"signin\">here</a>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default FormSignup;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/FormSuccess.js",["531","532"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport { Button, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport \"./LogIn.css\";\n\nconst FormSuccess = () => {\n  return (\n    <div className=\"form-content-right\">\n      <h1 className=\"form-success\">\n        You have successfully registered!\n        <br />\n        Now Log In{\" \"}\n        <a href=\"signin\">\n          <Button\n            rightIcon={<ArrowForwardIcon />}\n            colorScheme=\"red\"\n            variant=\"outline\"\n          >\n            Sign In\n          </Button>\n        </a>\n      </h1>\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\n    </div>\n  );\n};\n\nexport default FormSuccess;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/FormLogIn.js",["533","534","535","536","537"],"import React, { useEffect } from \"react\";\nimport validate from \"./validateInfo\";\nimport useForm from \"./useForm\";\nimport \"./LogIn.css\";\n// Promise based HTTP client for the node.js\nimport Axios from \"axios\";\nimport { Button } from \"@chakra-ui/react\";\n\nconst FormLogIn = ({ submitForm }) => {\n\n  const { handleChange, handleSubmit, userAuthenticated, values, errors, loginStatus } = useForm(\n    submitForm,\n    validate\n  );\n  \n  \n  return (\n    <div className=\"login-content-right\">\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\n        <h1>\n          Welcome!!!\n          <br />\n          Sign in to continue shopping!\n          <br />\n          <br />\n          \n        </h1>\n        <h1 className=\"login-status\"> </h1> \n        {/* <Button color='red' onClick={userAuthenticated}>Check if</Button> */}\n        <div className=\"login-inputs\">\n          <label className=\"login-label\">Email</label>\n          <input\n            className=\"login-input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className=\"login-inputs\">\n          <label className=\"login-label\">Password</label>\n          <input\n            className=\"login-input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n        \n        <button className=\"login-input-btn\" type=\"submit\">\n          Sign In\n        </button>\n        <span className=\"login-input-login\">\n          Don't have an account? Sign up <a href=\"signup\">here</a>\n        </span>\n      </form>\n    </div>\n  );\n}\n\nexport default FormLogIn;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Pricing/Pricing.elements.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/validateInfo.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/useForm.js",["538"],"import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n//custom hook\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    phonenumber: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const firstName = values.firstname;\n  const lastName = values.lastname;\n  const email = values.email;\n  const phoneNumber = values.phonenumber;\n  const password = values.password;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    if (Object.keys(errors).length === 0) {\n      Axios.post(\"http://localhost:5000/customer/register\", {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phoneNumber: phoneNumber,\n        password: password,\n      }).then((response) => {\n        console.log(response);\n      });\n    }\n  };\n\n  useEffect(() => {\n    //If there are no errors and submitted it wil call submitForm function(callback())\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/useForm.js",["539"],"import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n//custom hook\n\nconst useForm = (callback, validate) => {\n  Axios.defaults.withCredentials = true;\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  const email = values.email;\n  const password = values.password;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    if (Object.keys(errors).length === 0) {\n      Axios.post(\"http://localhost:5000/customer/login\", {\n        email: email,\n        password: password,\n      }).then((response) => {\n        if (!response.data.auth) {\n          console.log(response);\n          setLoginStatus(false);\n          \n        } else {\n          console.log(response.data);\n          localStorage.setItem(\"token\", response.data.token);\n          setLoginStatus(true);\n        }\n      });\n    }\n  };\nconst userAuthenticated = () => {\n    Axios.get(\"http://localhost:5000/customer/isUserAuth\", {\n    headers: {\n      \"x-access-token\": localStorage.getItem(\"token\")},\n    }).then(response => {\n      console.log(response.status);\n    });\n  };\n\n  useEffect(() => {\n    // Axios.get(\"http://localhost:5000/customer/login\").then((response) => {\n    //   if(response.data.LoggedIn === true) {\n    //         setLoginStatus(response.data.user[0].First_name + \" \" + response.data.user[0].Last_name);\n    //   }\n      \n    // });\n    \n    //If there are no errors and submitted it wil call submitForm function(callback())\n    //response.data is an array. message is a attribute of it\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n     }\n  }, [errors]);\n\n  return { handleChange, handleSubmit, userAuthenticated, values, errors, loginStatus };\n};\n\nexport default useForm;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/validateInfo.js",[],{"ruleId":"540","replacedBy":"541"},{"ruleId":"542","replacedBy":"543"},{"ruleId":"544","severity":1,"message":"545","line":37,"column":9,"nodeType":"546","messageId":"547","endLine":37,"endColumn":15},{"ruleId":"544","severity":1,"message":"548","line":37,"column":17,"nodeType":"546","messageId":"547","endLine":37,"endColumn":26},{"ruleId":"544","severity":1,"message":"549","line":39,"column":9,"nodeType":"546","messageId":"547","endLine":39,"endColumn":26},{"ruleId":"550","severity":1,"message":"551","line":51,"column":33,"nodeType":"552","messageId":"553","endLine":51,"endColumn":35},{"ruleId":"544","severity":1,"message":"554","line":3,"column":5,"nodeType":"546","messageId":"547","endLine":3,"endColumn":11},{"ruleId":"544","severity":1,"message":"555","line":8,"column":5,"nodeType":"546","messageId":"547","endLine":8,"endColumn":11},{"ruleId":"544","severity":1,"message":"556","line":17,"column":23,"nodeType":"546","messageId":"547","endLine":17,"endColumn":48},{"ruleId":"544","severity":1,"message":"554","line":3,"column":5,"nodeType":"546","messageId":"547","endLine":3,"endColumn":11},{"ruleId":"544","severity":1,"message":"555","line":8,"column":5,"nodeType":"546","messageId":"547","endLine":8,"endColumn":11},{"ruleId":"544","severity":1,"message":"556","line":17,"column":23,"nodeType":"546","messageId":"547","endLine":17,"endColumn":48},{"ruleId":"544","severity":1,"message":"557","line":8,"column":5,"nodeType":"546","messageId":"547","endLine":8,"endColumn":18},{"ruleId":"544","severity":1,"message":"558","line":12,"column":17,"nodeType":"546","messageId":"547","endLine":12,"endColumn":25},{"ruleId":"544","severity":1,"message":"559","line":12,"column":27,"nodeType":"546","messageId":"547","endLine":12,"endColumn":36},{"ruleId":"544","severity":1,"message":"560","line":19,"column":24,"nodeType":"546","messageId":"547","endLine":19,"endColumn":39},{"ruleId":"544","severity":1,"message":"561","line":21,"column":11,"nodeType":"546","messageId":"547","endLine":21,"endColumn":16},{"ruleId":"562","severity":1,"message":"563","line":90,"column":8,"nodeType":"564","endLine":90,"endColumn":10,"suggestions":"565"},{"ruleId":"550","severity":1,"message":"551","line":166,"column":37,"nodeType":"552","messageId":"553","endLine":166,"endColumn":39},{"ruleId":"544","severity":1,"message":"560","line":172,"column":24,"nodeType":"546","messageId":"547","endLine":172,"endColumn":39},{"ruleId":"544","severity":1,"message":"566","line":1,"column":10,"nodeType":"546","messageId":"547","endLine":1,"endColumn":17},{"ruleId":"544","severity":1,"message":"555","line":2,"column":35,"nodeType":"546","messageId":"547","endLine":2,"endColumn":41},{"ruleId":"544","severity":1,"message":"567","line":2,"column":50,"nodeType":"546","messageId":"547","endLine":2,"endColumn":54},{"ruleId":"544","severity":1,"message":"568","line":7,"column":17,"nodeType":"546","messageId":"547","endLine":7,"endColumn":26},{"ruleId":"544","severity":1,"message":"569","line":13,"column":10,"nodeType":"546","messageId":"547","endLine":13,"endColumn":15},{"ruleId":"544","severity":1,"message":"570","line":10,"column":5,"nodeType":"546","messageId":"547","endLine":10,"endColumn":9},{"ruleId":"544","severity":1,"message":"560","line":15,"column":24,"nodeType":"546","messageId":"547","endLine":15,"endColumn":39},{"ruleId":"544","severity":1,"message":"571","line":6,"column":5,"nodeType":"546","messageId":"547","endLine":6,"endColumn":11},{"ruleId":"544","severity":1,"message":"555","line":10,"column":5,"nodeType":"546","messageId":"547","endLine":10,"endColumn":11},{"ruleId":"544","severity":1,"message":"558","line":13,"column":19,"nodeType":"546","messageId":"547","endLine":13,"endColumn":27},{"ruleId":"544","severity":1,"message":"572","line":14,"column":10,"nodeType":"546","messageId":"547","endLine":14,"endColumn":22},{"ruleId":"544","severity":1,"message":"573","line":22,"column":11,"nodeType":"546","messageId":"547","endLine":22,"endColumn":26},{"ruleId":"544","severity":1,"message":"574","line":24,"column":11,"nodeType":"546","messageId":"547","endLine":24,"endColumn":18},{"ruleId":"544","severity":1,"message":"575","line":37,"column":11,"nodeType":"546","messageId":"547","endLine":37,"endColumn":19},{"ruleId":"544","severity":1,"message":"555","line":24,"column":3,"nodeType":"546","messageId":"547","endLine":24,"endColumn":9},{"ruleId":"544","severity":1,"message":"576","line":30,"column":10,"nodeType":"546","messageId":"547","endLine":30,"endColumn":20},{"ruleId":"544","severity":1,"message":"560","line":38,"column":22,"nodeType":"546","messageId":"547","endLine":38,"endColumn":37},{"ruleId":"544","severity":1,"message":"577","line":40,"column":21,"nodeType":"546","messageId":"547","endLine":40,"endColumn":33},{"ruleId":"544","severity":1,"message":"578","line":76,"column":27,"nodeType":"546","messageId":"547","endLine":76,"endColumn":45},{"ruleId":"544","severity":1,"message":"579","line":100,"column":16,"nodeType":"546","messageId":"547","endLine":100,"endColumn":23},{"ruleId":"544","severity":1,"message":"580","line":133,"column":9,"nodeType":"546","messageId":"547","endLine":133,"endColumn":20},{"ruleId":"544","severity":1,"message":"560","line":21,"column":24,"nodeType":"546","messageId":"547","endLine":21,"endColumn":39},{"ruleId":"544","severity":1,"message":"581","line":25,"column":12,"nodeType":"546","messageId":"547","endLine":25,"endColumn":22},{"ruleId":"562","severity":1,"message":"563","line":56,"column":8,"nodeType":"564","endLine":56,"endColumn":10,"suggestions":"582"},{"ruleId":"562","severity":1,"message":"583","line":78,"column":8,"nodeType":"564","endLine":78,"endColumn":10,"suggestions":"584"},{"ruleId":"544","severity":1,"message":"571","line":3,"column":5,"nodeType":"546","messageId":"547","endLine":3,"endColumn":11},{"ruleId":"544","severity":1,"message":"566","line":11,"column":10,"nodeType":"546","messageId":"547","endLine":11,"endColumn":17},{"ruleId":"544","severity":1,"message":"585","line":11,"column":19,"nodeType":"546","messageId":"547","endLine":11,"endColumn":28},{"ruleId":"544","severity":1,"message":"586","line":11,"column":48,"nodeType":"546","messageId":"547","endLine":11,"endColumn":56},{"ruleId":"544","severity":1,"message":"587","line":13,"column":18,"nodeType":"546","messageId":"547","endLine":13,"endColumn":29},{"ruleId":"544","severity":1,"message":"588","line":17,"column":5,"nodeType":"546","messageId":"547","endLine":17,"endColumn":21},{"ruleId":"544","severity":1,"message":"589","line":18,"column":5,"nodeType":"546","messageId":"547","endLine":18,"endColumn":19},{"ruleId":"544","severity":1,"message":"558","line":20,"column":17,"nodeType":"546","messageId":"547","endLine":20,"endColumn":25},{"ruleId":"544","severity":1,"message":"590","line":21,"column":18,"nodeType":"546","messageId":"547","endLine":21,"endColumn":29},{"ruleId":"544","severity":1,"message":"591","line":21,"column":31,"nodeType":"546","messageId":"547","endLine":21,"endColumn":42},{"ruleId":"544","severity":1,"message":"592","line":22,"column":8,"nodeType":"546","messageId":"547","endLine":22,"endColumn":17},{"ruleId":"562","severity":1,"message":"563","line":63,"column":8,"nodeType":"564","endLine":63,"endColumn":10,"suggestions":"593"},{"ruleId":"544","severity":1,"message":"560","line":124,"column":24,"nodeType":"546","messageId":"547","endLine":124,"endColumn":39},{"ruleId":"544","severity":1,"message":"594","line":9,"column":3,"nodeType":"546","messageId":"547","endLine":9,"endColumn":15},{"ruleId":"544","severity":1,"message":"587","line":12,"column":18,"nodeType":"546","messageId":"547","endLine":12,"endColumn":29},{"ruleId":"544","severity":1,"message":"595","line":13,"column":17,"nodeType":"546","messageId":"547","endLine":13,"endColumn":23},{"ruleId":"544","severity":1,"message":"555","line":13,"column":25,"nodeType":"546","messageId":"547","endLine":13,"endColumn":31},{"ruleId":"544","severity":1,"message":"566","line":18,"column":3,"nodeType":"546","messageId":"547","endLine":18,"endColumn":10},{"ruleId":"544","severity":1,"message":"585","line":19,"column":3,"nodeType":"546","messageId":"547","endLine":19,"endColumn":12},{"ruleId":"544","severity":1,"message":"596","line":23,"column":8,"nodeType":"546","messageId":"547","endLine":23,"endColumn":32},{"ruleId":"544","severity":1,"message":"597","line":24,"column":8,"nodeType":"546","messageId":"547","endLine":24,"endColumn":26},{"ruleId":"544","severity":1,"message":"598","line":28,"column":9,"nodeType":"546","messageId":"547","endLine":28,"endColumn":11},{"ruleId":"544","severity":1,"message":"599","line":32,"column":16,"nodeType":"546","messageId":"547","endLine":32,"endColumn":23},{"ruleId":"544","severity":1,"message":"600","line":8,"column":10,"nodeType":"546","messageId":"547","endLine":8,"endColumn":13},{"ruleId":"544","severity":1,"message":"601","line":8,"column":15,"nodeType":"546","messageId":"547","endLine":8,"endColumn":19},{"ruleId":"544","severity":1,"message":"602","line":9,"column":10,"nodeType":"546","messageId":"547","endLine":9,"endColumn":26},{"ruleId":"603","severity":1,"message":"604","line":4,"column":26,"nodeType":"605","messageId":"606","endLine":4,"endColumn":40,"fix":"607"},{"ruleId":"544","severity":1,"message":"608","line":30,"column":11,"nodeType":"546","messageId":"547","endLine":30,"endColumn":20},{"ruleId":"544","severity":1,"message":"560","line":30,"column":22,"nodeType":"546","messageId":"547","endLine":30,"endColumn":37},{"ruleId":"562","severity":1,"message":"609","line":114,"column":6,"nodeType":"564","endLine":114,"endColumn":8,"suggestions":"610"},{"ruleId":"544","severity":1,"message":"611","line":6,"column":5,"nodeType":"546","messageId":"547","endLine":6,"endColumn":12},{"ruleId":"544","severity":1,"message":"612","line":15,"column":10,"nodeType":"546","messageId":"547","endLine":15,"endColumn":19},{"ruleId":"544","severity":1,"message":"613","line":16,"column":8,"nodeType":"546","messageId":"547","endLine":16,"endColumn":14},{"ruleId":"562","severity":1,"message":"563","line":47,"column":8,"nodeType":"564","endLine":47,"endColumn":10,"suggestions":"614"},{"ruleId":"544","severity":1,"message":"560","line":84,"column":24,"nodeType":"546","messageId":"547","endLine":84,"endColumn":39},{"ruleId":"544","severity":1,"message":"560","line":36,"column":22,"nodeType":"546","messageId":"547","endLine":36,"endColumn":37},{"ruleId":"615","severity":1,"message":"616","line":48,"column":11,"nodeType":"546","messageId":"617","endLine":48,"endColumn":14},{"ruleId":"544","severity":1,"message":"559","line":1,"column":17,"nodeType":"546","messageId":"547","endLine":1,"endColumn":26},{"ruleId":"544","severity":1,"message":"558","line":1,"column":28,"nodeType":"546","messageId":"547","endLine":1,"endColumn":36},{"ruleId":"544","severity":1,"message":"618","line":5,"column":3,"nodeType":"546","messageId":"547","endLine":5,"endColumn":10},{"ruleId":"544","severity":1,"message":"619","line":17,"column":8,"nodeType":"546","messageId":"547","endLine":17,"endColumn":13},{"ruleId":"544","severity":1,"message":"559","line":1,"column":17,"nodeType":"546","messageId":"547","endLine":1,"endColumn":26},{"ruleId":"544","severity":1,"message":"620","line":7,"column":8,"nodeType":"546","messageId":"547","endLine":7,"endColumn":15},{"ruleId":"544","severity":1,"message":"619","line":8,"column":8,"nodeType":"546","messageId":"547","endLine":8,"endColumn":13},{"ruleId":"544","severity":1,"message":"586","line":1,"column":10,"nodeType":"546","messageId":"547","endLine":1,"endColumn":18},{"ruleId":"544","severity":1,"message":"594","line":5,"column":3,"nodeType":"546","messageId":"547","endLine":5,"endColumn":15},{"ruleId":"544","severity":1,"message":"621","line":6,"column":3,"nodeType":"546","messageId":"547","endLine":6,"endColumn":9},{"ruleId":"544","severity":1,"message":"590","line":7,"column":3,"nodeType":"546","messageId":"547","endLine":7,"endColumn":14},{"ruleId":"544","severity":1,"message":"555","line":9,"column":3,"nodeType":"546","messageId":"547","endLine":9,"endColumn":9},{"ruleId":"544","severity":1,"message":"618","line":10,"column":3,"nodeType":"546","messageId":"547","endLine":10,"endColumn":10},{"ruleId":"544","severity":1,"message":"622","line":11,"column":3,"nodeType":"546","messageId":"547","endLine":11,"endColumn":8},{"ruleId":"544","severity":1,"message":"623","line":12,"column":3,"nodeType":"546","messageId":"547","endLine":12,"endColumn":8},{"ruleId":"544","severity":1,"message":"558","line":15,"column":17,"nodeType":"546","messageId":"547","endLine":15,"endColumn":25},{"ruleId":"544","severity":1,"message":"586","line":1,"column":10,"nodeType":"546","messageId":"547","endLine":1,"endColumn":18},{"ruleId":"544","severity":1,"message":"594","line":5,"column":3,"nodeType":"546","messageId":"547","endLine":5,"endColumn":15},{"ruleId":"544","severity":1,"message":"621","line":6,"column":3,"nodeType":"546","messageId":"547","endLine":6,"endColumn":9},{"ruleId":"544","severity":1,"message":"590","line":7,"column":3,"nodeType":"546","messageId":"547","endLine":7,"endColumn":14},{"ruleId":"544","severity":1,"message":"555","line":9,"column":3,"nodeType":"546","messageId":"547","endLine":9,"endColumn":9},{"ruleId":"544","severity":1,"message":"618","line":10,"column":3,"nodeType":"546","messageId":"547","endLine":10,"endColumn":10},{"ruleId":"544","severity":1,"message":"622","line":11,"column":3,"nodeType":"546","messageId":"547","endLine":11,"endColumn":8},{"ruleId":"544","severity":1,"message":"623","line":12,"column":3,"nodeType":"546","messageId":"547","endLine":12,"endColumn":8},{"ruleId":"544","severity":1,"message":"558","line":15,"column":17,"nodeType":"546","messageId":"547","endLine":15,"endColumn":25},{"ruleId":"544","severity":1,"message":"624","line":3,"column":5,"nodeType":"546","messageId":"547","endLine":3,"endColumn":9},{"ruleId":"544","severity":1,"message":"625","line":4,"column":5,"nodeType":"546","messageId":"547","endLine":4,"endColumn":13},{"ruleId":"544","severity":1,"message":"618","line":5,"column":5,"nodeType":"546","messageId":"547","endLine":5,"endColumn":12},{"ruleId":"544","severity":1,"message":"570","line":6,"column":5,"nodeType":"546","messageId":"547","endLine":6,"endColumn":9},{"ruleId":"544","severity":1,"message":"611","line":7,"column":5,"nodeType":"546","messageId":"547","endLine":7,"endColumn":12},{"ruleId":"544","severity":1,"message":"560","line":17,"column":24,"nodeType":"546","messageId":"547","endLine":17,"endColumn":39},{"ruleId":"544","severity":1,"message":"561","line":18,"column":11,"nodeType":"546","messageId":"547","endLine":18,"endColumn":16},{"ruleId":"562","severity":1,"message":"563","line":40,"column":8,"nodeType":"564","endLine":40,"endColumn":10,"suggestions":"626"},{"ruleId":"544","severity":1,"message":"571","line":10,"column":3,"nodeType":"546","messageId":"547","endLine":10,"endColumn":9},{"ruleId":"544","severity":1,"message":"560","line":15,"column":21,"nodeType":"546","messageId":"547","endLine":15,"endColumn":36},{"ruleId":"544","severity":1,"message":"627","line":6,"column":5,"nodeType":"546","messageId":"547","endLine":6,"endColumn":13},{"ruleId":"550","severity":1,"message":"551","line":35,"column":42,"nodeType":"552","messageId":"553","endLine":35,"endColumn":44},{"ruleId":"544","severity":1,"message":"628","line":13,"column":19,"nodeType":"546","messageId":"547","endLine":13,"endColumn":27},{"ruleId":"629","severity":1,"message":"630","line":84,"column":13,"nodeType":"631","endLine":84,"endColumn":34},{"ruleId":"544","severity":1,"message":"632","line":3,"column":3,"nodeType":"546","messageId":"547","endLine":3,"endColumn":17},{"ruleId":"544","severity":1,"message":"633","line":17,"column":17,"nodeType":"546","messageId":"547","endLine":17,"endColumn":25},{"ruleId":"544","severity":1,"message":"634","line":18,"column":10,"nodeType":"546","messageId":"547","endLine":18,"endColumn":21},{"ruleId":"544","severity":1,"message":"554","line":2,"column":10,"nodeType":"546","messageId":"547","endLine":2,"endColumn":16},{"ruleId":"544","severity":1,"message":"554","line":2,"column":10,"nodeType":"546","messageId":"547","endLine":2,"endColumn":16},{"ruleId":"544","severity":1,"message":"635","line":4,"column":3,"nodeType":"546","messageId":"547","endLine":4,"endColumn":13},{"ruleId":"544","severity":1,"message":"636","line":5,"column":3,"nodeType":"546","messageId":"547","endLine":5,"endColumn":14},{"ruleId":"544","severity":1,"message":"637","line":6,"column":3,"nodeType":"546","messageId":"547","endLine":6,"endColumn":12},{"ruleId":"544","severity":1,"message":"638","line":7,"column":3,"nodeType":"546","messageId":"547","endLine":7,"endColumn":12},{"ruleId":"544","severity":1,"message":"639","line":8,"column":3,"nodeType":"546","messageId":"547","endLine":8,"endColumn":13},{"ruleId":"544","severity":1,"message":"567","line":15,"column":3,"nodeType":"546","messageId":"547","endLine":15,"endColumn":7},{"ruleId":"544","severity":1,"message":"640","line":16,"column":3,"nodeType":"546","messageId":"547","endLine":16,"endColumn":12},{"ruleId":"544","severity":1,"message":"641","line":23,"column":8,"nodeType":"546","messageId":"547","endLine":23,"endColumn":20},{"ruleId":"544","severity":1,"message":"642","line":2,"column":10,"nodeType":"546","messageId":"547","endLine":2,"endColumn":22},{"ruleId":"544","severity":1,"message":"643","line":2,"column":24,"nodeType":"546","messageId":"547","endLine":2,"endColumn":41},{"ruleId":"544","severity":1,"message":"644","line":9,"column":3,"nodeType":"546","messageId":"547","endLine":9,"endColumn":13},{"ruleId":"544","severity":1,"message":"560","line":13,"column":22,"nodeType":"546","messageId":"547","endLine":13,"endColumn":37},{"ruleId":"544","severity":1,"message":"595","line":3,"column":3,"nodeType":"546","messageId":"547","endLine":3,"endColumn":9},{"ruleId":"544","severity":1,"message":"621","line":5,"column":3,"nodeType":"546","messageId":"547","endLine":5,"endColumn":9},{"ruleId":"544","severity":1,"message":"618","line":8,"column":3,"nodeType":"546","messageId":"547","endLine":8,"endColumn":10},{"ruleId":"544","severity":1,"message":"555","line":9,"column":3,"nodeType":"546","messageId":"547","endLine":9,"endColumn":9},{"ruleId":"544","severity":1,"message":"645","line":14,"column":8,"nodeType":"546","messageId":"547","endLine":14,"endColumn":14},{"ruleId":"544","severity":1,"message":"608","line":17,"column":11,"nodeType":"546","messageId":"547","endLine":17,"endColumn":20},{"ruleId":"544","severity":1,"message":"560","line":17,"column":22,"nodeType":"546","messageId":"547","endLine":17,"endColumn":37},{"ruleId":"544","severity":1,"message":"646","line":18,"column":7,"nodeType":"546","messageId":"547","endLine":18,"endColumn":14},{"ruleId":"544","severity":1,"message":"560","line":14,"column":22,"nodeType":"546","messageId":"547","endLine":14,"endColumn":37},{"ruleId":"544","severity":1,"message":"619","line":5,"column":8,"nodeType":"546","messageId":"547","endLine":5,"endColumn":13},{"ruleId":"544","severity":1,"message":"647","line":6,"column":8,"nodeType":"546","messageId":"547","endLine":6,"endColumn":15},{"ruleId":"550","severity":1,"message":"551","line":21,"column":30,"nodeType":"552","messageId":"553","endLine":21,"endColumn":32},{"ruleId":"648","severity":1,"message":"649","line":49,"column":1,"nodeType":"650","endLine":52,"endColumn":2},{"ruleId":"544","severity":1,"message":"559","line":1,"column":17,"nodeType":"546","messageId":"547","endLine":1,"endColumn":26},{"ruleId":"544","severity":1,"message":"651","line":4,"column":8,"nodeType":"546","messageId":"547","endLine":4,"endColumn":19},{"ruleId":"544","severity":1,"message":"619","line":5,"column":8,"nodeType":"546","messageId":"547","endLine":5,"endColumn":13},{"ruleId":"544","severity":1,"message":"652","line":6,"column":10,"nodeType":"546","messageId":"547","endLine":6,"endColumn":18},{"ruleId":"544","severity":1,"message":"653","line":14,"column":10,"nodeType":"546","messageId":"547","endLine":14,"endColumn":21},{"ruleId":"544","severity":1,"message":"654","line":3,"column":10,"nodeType":"546","messageId":"547","endLine":3,"endColumn":27},{"ruleId":"544","severity":1,"message":"655","line":5,"column":3,"nodeType":"546","messageId":"547","endLine":5,"endColumn":14},{"ruleId":"544","severity":1,"message":"656","line":6,"column":3,"nodeType":"546","messageId":"547","endLine":6,"endColumn":27},{"ruleId":"544","severity":1,"message":"634","line":7,"column":3,"nodeType":"546","messageId":"547","endLine":7,"endColumn":14},{"ruleId":"544","severity":1,"message":"657","line":8,"column":3,"nodeType":"546","messageId":"547","endLine":8,"endColumn":16},{"ruleId":"544","severity":1,"message":"658","line":9,"column":3,"nodeType":"546","messageId":"547","endLine":9,"endColumn":18},{"ruleId":"544","severity":1,"message":"659","line":12,"column":3,"nodeType":"546","messageId":"547","endLine":12,"endColumn":17},{"ruleId":"544","severity":1,"message":"660","line":14,"column":24,"nodeType":"546","messageId":"547","endLine":14,"endColumn":30},{"ruleId":"544","severity":1,"message":"661","line":15,"column":10,"nodeType":"546","messageId":"547","endLine":15,"endColumn":27},{"ruleId":"544","severity":1,"message":"662","line":18,"column":3,"nodeType":"546","messageId":"547","endLine":18,"endColumn":17},{"ruleId":"544","severity":1,"message":"600","line":31,"column":10,"nodeType":"546","messageId":"547","endLine":31,"endColumn":13},{"ruleId":"544","severity":1,"message":"570","line":31,"column":21,"nodeType":"546","messageId":"547","endLine":31,"endColumn":25},{"ruleId":"544","severity":1,"message":"663","line":35,"column":10,"nodeType":"546","messageId":"547","endLine":35,"endColumn":16},{"ruleId":"664","severity":1,"message":"665","line":43,"column":5,"nodeType":"666","messageId":"667","endLine":45,"endColumn":6},{"ruleId":"544","severity":1,"message":"554","line":2,"column":3,"nodeType":"546","messageId":"547","endLine":2,"endColumn":9},{"ruleId":"544","severity":1,"message":"668","line":3,"column":3,"nodeType":"546","messageId":"547","endLine":3,"endColumn":18},{"ruleId":"544","severity":1,"message":"669","line":4,"column":3,"nodeType":"546","messageId":"547","endLine":4,"endColumn":7},{"ruleId":"544","severity":1,"message":"570","line":6,"column":3,"nodeType":"546","messageId":"547","endLine":6,"endColumn":7},{"ruleId":"544","severity":1,"message":"560","line":17,"column":22,"nodeType":"546","messageId":"547","endLine":17,"endColumn":37},{"ruleId":"670","severity":1,"message":"671","line":29,"column":9,"nodeType":"672","endLine":29,"endColumn":21},{"ruleId":"544","severity":1,"message":"558","line":1,"column":16,"nodeType":"546","messageId":"547","endLine":1,"endColumn":24},{"ruleId":"544","severity":1,"message":"673","line":19,"column":17,"nodeType":"546","messageId":"547","endLine":19,"endColumn":24},{"ruleId":"544","severity":1,"message":"674","line":24,"column":13,"nodeType":"546","messageId":"547","endLine":24,"endColumn":19},{"ruleId":"544","severity":1,"message":"675","line":24,"column":21,"nodeType":"546","messageId":"547","endLine":24,"endColumn":27},{"ruleId":"544","severity":1,"message":"676","line":24,"column":29,"nodeType":"546","messageId":"547","endLine":24,"endColumn":36},{"ruleId":"544","severity":1,"message":"560","line":26,"column":24,"nodeType":"546","messageId":"547","endLine":26,"endColumn":39},{"ruleId":"664","severity":1,"message":"677","line":145,"column":21,"nodeType":"666","messageId":"678","endLine":150,"endColumn":39},{"ruleId":"544","severity":1,"message":"558","line":1,"column":16,"nodeType":"546","messageId":"547","endLine":1,"endColumn":24},{"ruleId":"544","severity":1,"message":"679","line":23,"column":10,"nodeType":"546","messageId":"547","endLine":23,"endColumn":16},{"ruleId":"544","severity":1,"message":"673","line":23,"column":17,"nodeType":"546","messageId":"547","endLine":23,"endColumn":24},{"ruleId":"544","severity":1,"message":"680","line":23,"column":26,"nodeType":"546","messageId":"547","endLine":23,"endColumn":36},{"ruleId":"544","severity":1,"message":"674","line":28,"column":13,"nodeType":"546","messageId":"547","endLine":28,"endColumn":19},{"ruleId":"544","severity":1,"message":"675","line":28,"column":21,"nodeType":"546","messageId":"547","endLine":28,"endColumn":27},{"ruleId":"544","severity":1,"message":"676","line":28,"column":29,"nodeType":"546","messageId":"547","endLine":28,"endColumn":36},{"ruleId":"544","severity":1,"message":"560","line":30,"column":24,"nodeType":"546","messageId":"547","endLine":30,"endColumn":39},{"ruleId":"544","severity":1,"message":"622","line":10,"column":5,"nodeType":"546","messageId":"547","endLine":10,"endColumn":10},{"ruleId":"544","severity":1,"message":"595","line":11,"column":5,"nodeType":"546","messageId":"547","endLine":11,"endColumn":11},{"ruleId":"544","severity":1,"message":"560","line":31,"column":24,"nodeType":"546","messageId":"547","endLine":31,"endColumn":39},{"ruleId":"615","severity":1,"message":"681","line":57,"column":13,"nodeType":"546","messageId":"617","endLine":57,"endColumn":17},{"ruleId":"550","severity":1,"message":"551","line":68,"column":18,"nodeType":"552","messageId":"553","endLine":68,"endColumn":20},{"ruleId":"550","severity":1,"message":"551","line":74,"column":24,"nodeType":"552","messageId":"553","endLine":74,"endColumn":26},{"ruleId":"544","severity":1,"message":"594","line":5,"column":3,"nodeType":"546","messageId":"547","endLine":5,"endColumn":15},{"ruleId":"544","severity":1,"message":"621","line":6,"column":3,"nodeType":"546","messageId":"547","endLine":6,"endColumn":9},{"ruleId":"544","severity":1,"message":"590","line":7,"column":3,"nodeType":"546","messageId":"547","endLine":7,"endColumn":14},{"ruleId":"544","severity":1,"message":"595","line":8,"column":3,"nodeType":"546","messageId":"547","endLine":8,"endColumn":9},{"ruleId":"544","severity":1,"message":"555","line":9,"column":3,"nodeType":"546","messageId":"547","endLine":9,"endColumn":9},{"ruleId":"544","severity":1,"message":"618","line":10,"column":3,"nodeType":"546","messageId":"547","endLine":10,"endColumn":10},{"ruleId":"544","severity":1,"message":"682","line":13,"column":3,"nodeType":"546","messageId":"547","endLine":13,"endColumn":6},{"ruleId":"544","severity":1,"message":"683","line":14,"column":3,"nodeType":"546","messageId":"547","endLine":14,"endColumn":5},{"ruleId":"544","severity":1,"message":"684","line":15,"column":3,"nodeType":"546","messageId":"547","endLine":15,"endColumn":5},{"ruleId":"544","severity":1,"message":"685","line":17,"column":10,"nodeType":"546","messageId":"547","endLine":17,"endColumn":16},{"ruleId":"544","severity":1,"message":"558","line":19,"column":17,"nodeType":"546","messageId":"547","endLine":19,"endColumn":25},{"ruleId":"544","severity":1,"message":"686","line":20,"column":8,"nodeType":"546","messageId":"547","endLine":20,"endColumn":19},{"ruleId":"544","severity":1,"message":"560","line":13,"column":22,"nodeType":"546","messageId":"547","endLine":13,"endColumn":37},{"ruleId":"544","severity":1,"message":"687","line":2,"column":10,"nodeType":"546","messageId":"547","endLine":2,"endColumn":19},{"ruleId":"544","severity":1,"message":"570","line":2,"column":18,"nodeType":"546","messageId":"547","endLine":2,"endColumn":22},{"ruleId":"688","severity":1,"message":"689","line":23,"column":7,"nodeType":"672","endLine":23,"endColumn":77},{"ruleId":"544","severity":1,"message":"619","line":6,"column":8,"nodeType":"546","messageId":"547","endLine":6,"endColumn":13},{"ruleId":"544","severity":1,"message":"570","line":2,"column":18,"nodeType":"546","messageId":"547","endLine":2,"endColumn":22},{"ruleId":"688","severity":1,"message":"689","line":23,"column":7,"nodeType":"672","endLine":23,"endColumn":77},{"ruleId":"544","severity":1,"message":"559","line":1,"column":17,"nodeType":"546","messageId":"547","endLine":1,"endColumn":26},{"ruleId":"544","severity":1,"message":"619","line":6,"column":8,"nodeType":"546","messageId":"547","endLine":6,"endColumn":13},{"ruleId":"544","severity":1,"message":"554","line":7,"column":10,"nodeType":"546","messageId":"547","endLine":7,"endColumn":16},{"ruleId":"544","severity":1,"message":"549","line":11,"column":39,"nodeType":"546","messageId":"547","endLine":11,"endColumn":56},{"ruleId":"544","severity":1,"message":"690","line":11,"column":74,"nodeType":"546","messageId":"547","endLine":11,"endColumn":85},{"ruleId":"562","severity":1,"message":"691","line":53,"column":6,"nodeType":"564","endLine":53,"endColumn":14,"suggestions":"692"},{"ruleId":"562","severity":1,"message":"691","line":69,"column":6,"nodeType":"564","endLine":69,"endColumn":14,"suggestions":"693"},"no-native-reassign",["694"],"no-negated-in-lhs",["695"],"no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","'setIsAuth' is assigned a value but never used.","'userAuthenticated' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'VStack' is defined but never used.","'setActiveCategoryProducts' is assigned a value but never used.","'useDisclosure' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'toggleColorMode' is assigned a value but never used.","'toast' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toast'. Either include it or remove the dependency array.","ArrayExpression",["696"],"'AddIcon' is defined but never used.","'Form' is defined but never used.","'Component' is defined but never used.","'state' is assigned a value but never used.","'Text' is defined but never used.","'Center' is defined but never used.","'Deliverycard' is defined but never used.","'Shipping_method' is assigned a value but never used.","'Ship_to' is assigned a value but never used.","'feedback' is assigned a value but never used.","'RiVisaLine' is defined but never used.","'setCartItems' is assigned a value but never used.","'setShippingAddress' is assigned a value but never used.","'setCard' is assigned a value but never used.","'customer_id' is assigned a value but never used.","'orderStats' is assigned a value but never used.",["697"],"React Hook useEffect has missing dependencies: 'setOrderStats' and 'toast'. Either include them or remove the dependency array.",["698"],"'MinusIcon' is defined but never used.","'StarIcon' is defined but never used.","'ButtonGroup' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'AvatarBadge' is defined but never used.","'AvatarGroup' is defined but never used.","'SearchBar' is defined but never used.",["699"],"'useColorMode' is defined but never used.","'HStack' is defined but never used.","'CategorizedReviewPreview' is defined but never used.","'ReviewCountPreview' is defined but never used.","'id' is assigned a value but never used.","'setData' is assigned a value but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'AiFillExperiment' is defined but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"700","text":"701"},"'colorMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["702"],"'Divider' is defined but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.",["703"],"no-redeclare","'url' is already defined.","redeclared","'Heading' is defined but never used.","'Axios' is defined but never used.","'service' is defined but never used.","'Avatar' is defined but never used.","'Image' is defined but never used.","'Badge' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.",["704"],"'useToast' is defined but never used.","'MdZoomIn' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ChakraProvider' is defined but never used.","'MoneyOff' is defined but never used.","'GiCartwheel' is defined but never used.","'FaFacebook' is defined but never used.","'FaInstagram' is defined but never used.","'FaYoutube' is defined but never used.","'FaTwitter' is defined but never used.","'FaLinkedin' is defined but never used.","'FormInput' is defined but never used.","'BottomFooter' is defined but never used.","'CardGiftcard' is defined but never used.","'CreditCardRounded' is defined but never used.","'MdSettings' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'useForm' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'FormSuccess' is defined but never used.","'Redirect' is defined but never used.","'isSubmitted' is assigned a value but never used.","'AiFillThunderbolt' is defined but never used.","'GiAllForOne' is defined but never used.","'GiArtificialIntelligence' is defined but never used.","'GiCrystalBars' is defined but never used.","'GiDeliveryDrone' is defined but never used.","'GiShoppingCart' is defined but never used.","'GiRock' is defined but never used.","'GiFloatingCrystal' is defined but never used.","'PricingSection' is defined but never used.","'isDark' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'ReactRouterLink' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ImPhone' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","Block is redundant.","redundantBlock","'ImUser' is defined but never used.","'ImLocation' is defined but never used.","'list' is already defined.","'Img' is defined but never used.","'Tr' is defined but never used.","'Td' is defined but never used.","'encode' is defined but never used.","'ImageLoader' is defined but never used.","'FaMagento' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'loginStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["705"],["706"],"no-global-assign","no-unsafe-negation",{"desc":"707","fix":"708"},{"desc":"707","fix":"709"},{"desc":"710","fix":"711"},{"desc":"707","fix":"712"},[101,115],"isAuth",{"desc":"713","fix":"714"},{"desc":"707","fix":"715"},{"desc":"707","fix":"716"},{"desc":"717","fix":"718"},{"desc":"717","fix":"719"},"Update the dependencies array to be: [toast]",{"range":"720","text":"721"},{"range":"722","text":"721"},"Update the dependencies array to be: [setOrderStats, toast]",{"range":"723","text":"724"},{"range":"725","text":"721"},"Update the dependencies array to be: [id]",{"range":"726","text":"727"},{"range":"728","text":"721"},{"range":"729","text":"721"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"730","text":"731"},{"range":"732","text":"731"},[2140,2142],"[toast]",[1548,1550],[2174,2176],"[setOrderStats, toast]",[1517,1519],[2982,2984],"[id]",[1225,1227],[1197,1199],[1354,1362],"[callback, errors, isSubmitting]",[1972,1980]]