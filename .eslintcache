[{"F:\\DB_Project\\Front-end-react\\src\\index.js":"1","F:\\DB_Project\\Front-end-react\\src\\App.js":"2","F:\\DB_Project\\Front-end-react\\src\\pages\\ChangePersonalDet.js":"3","F:\\DB_Project\\Front-end-react\\src\\pages\\CategoryPage.js":"4","F:\\DB_Project\\Front-end-react\\src\\pages\\SpecficProductPage.js":"5","F:\\DB_Project\\Front-end-react\\src\\pages\\OrderView.js":"6","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerDashboard.js":"7","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\Home.js":"8","F:\\DB_Project\\Front-end-react\\src\\pages\\CardDetails.js":"9","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerAdress.js":"10","F:\\DB_Project\\Front-end-react\\src\\components\\Navbar.js":"11","F:\\DB_Project\\Front-end-react\\src\\pages\\CartPage.js":"12","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\SignUp.js":"13","F:\\DB_Project\\Front-end-react\\src\\pages\\AllOrders.js":"14","F:\\DB_Project\\Front-end-react\\src\\pages\\TrackOrder.js":"15","F:\\DB_Project\\Front-end-react\\src\\pages\\AwaitingDelivery.js":"16","F:\\DB_Project\\Front-end-react\\src\\pages\\NewItem.js":"17","F:\\DB_Project\\Front-end-react\\src\\pages\\FeedbackPage.js":"18","F:\\DB_Project\\Front-end-react\\src\\pages\\AwaitingShipment.js":"19","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\SignIn.js":"20","F:\\DB_Project\\Front-end-react\\src\\pages\\Seller\\SellerHome.js":"21","F:\\DB_Project\\Front-end-react\\src\\pages\\SellerAllOrders.js":"22","F:\\DB_Project\\Front-end-react\\src\\pages\\SellerDashboard.js":"23","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePasswordForm.js":"24","F:\\DB_Project\\Front-end-react\\src\\components\\CustomerDashSideBar.js":"25","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBar.js":"26","F:\\DB_Project\\Front-end-react\\src\\components\\ProductCard.js":"27","F:\\DB_Project\\Front-end-react\\src\\components\\ReviewCountPreview.js":"28","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBarHome.js":"29","F:\\DB_Project\\Front-end-react\\src\\components\\BankCards.js":"30","F:\\DB_Project\\Front-end-react\\src\\components\\AddBankCard.js":"31","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTiles.js":"32","F:\\DB_Project\\Front-end-react\\src\\components\\ShopNow.js":"33","F:\\DB_Project\\Front-end-react\\src\\components\\Slider\\ImageSlider.js":"34","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomItems.js":"35","F:\\DB_Project\\Front-end-react\\src\\components\\Slider\\SliderData.js":"36","F:\\DB_Project\\Front-end-react\\src\\components\\Pricing\\Pricing.js":"37","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomFooter.js":"38","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePersonalDetForm.js":"39","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\Footer.js":"40","F:\\DB_Project\\Front-end-react\\src\\components\\CategorizedReviewPreview.js":"41","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\Register.js":"42","F:\\DB_Project\\Front-end-react\\src\\components\\AllOrdersCard.js":"43","F:\\DB_Project\\Front-end-react\\src\\API_Service\\checkLogin.js":"44","F:\\DB_Project\\Front-end-react\\src\\components\\ShipmentCard.js":"45","F:\\DB_Project\\Front-end-react\\src\\components\\Seller\\Middle.js":"46","F:\\DB_Project\\Front-end-react\\src\\components\\Seller\\Card.js":"47","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\LogIn.js":"48","F:\\DB_Project\\Front-end-react\\src\\components\\Replys.js":"49","F:\\DB_Project\\Front-end-react\\src\\components\\BankCard.js":"50","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTile.js":"51","F:\\DB_Project\\Front-end-react\\src\\components\\Deliverycard.js":"52","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomFooter.elements.js":"53","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\Footer.elements.js":"54","F:\\DB_Project\\Front-end-react\\src\\globalStyles.js":"55","F:\\DB_Project\\Front-end-react\\src\\components\\Pricing\\Pricing.elements.js":"56","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\FormLogIn.js":"57","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\FormSuccess.js":"58","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\FormSignup.js":"59","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\FormSuccess.js":"60","F:\\DB_Project\\Front-end-react\\src\\components\\OrderItemTile.js":"61","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\validateInfo.js":"62","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\useForm.js":"63","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\validateInfo.js":"64","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\useForm.js":"65","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddressses.js":"66","F:\\DB_Project\\Front-end-react\\src\\components\\AddAddress.js":"67","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddress.js":"68","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerStats.js":"69","F:\\DB_Project\\Front-end-react\\src\\pages\\ChartForSpecificProduct.js":"70","F:\\DB_Project\\Front-end-react\\src\\pages\\QuarterReport.js":"71","F:\\DB_Project\\Front-end-react\\src\\pages\\ProductPopularityReport.js":"72","F:\\DB_Project\\Front-end-react\\src\\components\\ReportProduct.js":"73"},{"size":334,"mtime":1613621446572,"results":"74","hashOfConfig":"75"},{"size":5750,"mtime":1614767779183,"results":"76","hashOfConfig":"75"},{"size":2824,"mtime":1613809820713,"results":"77","hashOfConfig":"75"},{"size":4752,"mtime":1614775025450,"results":"78","hashOfConfig":"75"},{"size":14798,"mtime":1614775025561,"results":"79","hashOfConfig":"75"},{"size":8758,"mtime":1614708671782,"results":"80","hashOfConfig":"75"},{"size":7648,"mtime":1614767779197,"results":"81","hashOfConfig":"75"},{"size":913,"mtime":1614767779195,"results":"82","hashOfConfig":"75"},{"size":6508,"mtime":1614767779195,"results":"83","hashOfConfig":"75"},{"size":7312,"mtime":1614767779196,"results":"84","hashOfConfig":"75"},{"size":4438,"mtime":1614767779187,"results":"85","hashOfConfig":"75"},{"size":14282,"mtime":1614775025441,"results":"86","hashOfConfig":"75"},{"size":540,"mtime":1613621446574,"results":"87","hashOfConfig":"75"},{"size":8137,"mtime":1614767779194,"results":"88","hashOfConfig":"75"},{"size":1734,"mtime":1613032033446,"results":"89","hashOfConfig":"75"},{"size":2309,"mtime":1614708685484,"results":"90","hashOfConfig":"75"},{"size":13840,"mtime":1614775025505,"results":"91","hashOfConfig":"75"},{"size":5054,"mtime":1614708685485,"results":"92","hashOfConfig":"75"},{"size":2877,"mtime":1614767779194,"results":"93","hashOfConfig":"75"},{"size":1179,"mtime":1614446752176,"results":"94","hashOfConfig":"75"},{"size":3119,"mtime":1614767779198,"results":"95","hashOfConfig":"75"},{"size":2713,"mtime":1614708685570,"results":"96","hashOfConfig":"75"},{"size":9902,"mtime":1614708685571,"results":"97","hashOfConfig":"75"},{"size":3469,"mtime":1614604227950,"results":"98","hashOfConfig":"75"},{"size":2053,"mtime":1614767779185,"results":"99","hashOfConfig":"75"},{"size":620,"mtime":1612551734370,"results":"100","hashOfConfig":"75"},{"size":2179,"mtime":1614775025438,"results":"101","hashOfConfig":"75"},{"size":2363,"mtime":1614496565647,"results":"102","hashOfConfig":"75"},{"size":1105,"mtime":1614513953644,"results":"103","hashOfConfig":"75"},{"size":356,"mtime":1614604227950,"results":"104","hashOfConfig":"75"},{"size":3320,"mtime":1614767779184,"results":"105","hashOfConfig":"75"},{"size":408,"mtime":1614604227952,"results":"106","hashOfConfig":"75"},{"size":1402,"mtime":1614767779192,"results":"107","hashOfConfig":"75"},{"size":1188,"mtime":1613621446571,"results":"108","hashOfConfig":"75"},{"size":2849,"mtime":1614767779186,"results":"109","hashOfConfig":"75"},{"size":267,"mtime":1613621446572,"results":"110","hashOfConfig":"75"},{"size":4710,"mtime":1614767779189,"results":"111","hashOfConfig":"75"},{"size":1715,"mtime":1613032189402,"results":"112","hashOfConfig":"75"},{"size":4802,"mtime":1614767779185,"results":"113","hashOfConfig":"75"},{"size":2585,"mtime":1613032189403,"results":"114","hashOfConfig":"75"},{"size":1856,"mtime":1614496565367,"results":"115","hashOfConfig":"75"},{"size":1002,"mtime":1614604227957,"results":"116","hashOfConfig":"75"},{"size":2167,"mtime":1614708685482,"results":"117","hashOfConfig":"75"},{"size":1935,"mtime":1614767779182,"results":"118","hashOfConfig":"75"},{"size":2221,"mtime":1614708685483,"results":"119","hashOfConfig":"75"},{"size":5636,"mtime":1614767779191,"results":"120","hashOfConfig":"75"},{"size":2278,"mtime":1614767779190,"results":"121","hashOfConfig":"75"},{"size":1062,"mtime":1614604227955,"results":"122","hashOfConfig":"75"},{"size":923,"mtime":1613032033315,"results":"123","hashOfConfig":"75"},{"size":3980,"mtime":1614767779184,"results":"124","hashOfConfig":"75"},{"size":6883,"mtime":1614767779188,"results":"125","hashOfConfig":"75"},{"size":2128,"mtime":1614708685483,"results":"126","hashOfConfig":"75"},{"size":1298,"mtime":1613032189402,"results":"127","hashOfConfig":"75"},{"size":2442,"mtime":1613032189403,"results":"128","hashOfConfig":"75"},{"size":1127,"mtime":1613032189412,"results":"129","hashOfConfig":"75"},{"size":2200,"mtime":1613621446568,"results":"130","hashOfConfig":"75"},{"size":2389,"mtime":1614604227954,"results":"131","hashOfConfig":"75"},{"size":731,"mtime":1613032189408,"results":"132","hashOfConfig":"75"},{"size":4311,"mtime":1614604227956,"results":"133","hashOfConfig":"75"},{"size":728,"mtime":1613809820709,"results":"134","hashOfConfig":"75"},{"size":1070,"mtime":1614767779187,"results":"135","hashOfConfig":"75"},{"size":453,"mtime":1613809820711,"results":"136","hashOfConfig":"75"},{"size":1934,"mtime":1614604227959,"results":"137","hashOfConfig":"75"},{"size":1260,"mtime":1613032189409,"results":"138","hashOfConfig":"75"},{"size":1482,"mtime":1614767779193,"results":"139","hashOfConfig":"75"},{"size":448,"mtime":1614604227953,"results":"140","hashOfConfig":"75"},{"size":2506,"mtime":1614604227948,"results":"141","hashOfConfig":"75"},{"size":3338,"mtime":1614767779191,"results":"142","hashOfConfig":"75"},{"size":7138,"mtime":1614767779197,"results":"143","hashOfConfig":"75"},{"size":1915,"mtime":1614767779195,"results":"144","hashOfConfig":"75"},{"size":7767,"mtime":1614775025506,"results":"145","hashOfConfig":"75"},{"size":257,"mtime":1614767779197,"results":"146","hashOfConfig":"75"},{"size":4525,"mtime":1614775025439,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"1n5sntt",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"150"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"150"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"150"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"150"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"150"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"150"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"150"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"150"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"150"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"150"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"150"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"150"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"150"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"150"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"150"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"150"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"150"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"150"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"150"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"150"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"150"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"150"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"150"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"150"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"150"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"150"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"150"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"150"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"150"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"150"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"150"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"150"},"F:\\DB_Project\\Front-end-react\\src\\index.js",[],["327","328"],"F:\\DB_Project\\Front-end-react\\src\\App.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\ChangePersonalDet.js",["329","330","331","332","333"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    useColorMode,\r\n    Flex,\r\n    Heading,\r\n    useDisclosure,\r\n    useToast,\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\r\nimport ChangePersonalDetails from \"../components/ChangePersonalDetForm\";\r\n\r\nconst ChangePersonalDet = () => { \r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const toast = useToast();\r\n\r\n        return (\r\n            <Box\r\n            \r\n            pt=\"100px\"\r\n            // pl={{ base: \"10px\", sm: \"100px\" }}\r\n            // pr={{ base: \"10px\", sm: \"100px\" }} \r\n            >\r\n                \r\n                <Grid\r\n            \r\n            templateColumns=\"repeat(5, 1fr)\"\r\n            templateRows=\"repeat(1, 1fr)\"\r\n            \r\n        >        \r\n            <GridItem  colSpan={1} rowSpan={2} >\r\n                <CustomerDashSideBar page=\"customeraddress\" />\r\n            </GridItem>\r\n        \r\n            <GridItem colSpan={4} >\r\n                <Box \r\n                    width=\"auto\"\r\n                    h=\"auto\"                   \r\n                    overflow=\"hidden\"                    \r\n                    pb=\"5px\"                      \r\n                    >\r\n                    \r\n                  </Box>\r\n\r\n                    <Grid templateColumns=\"repeat(3)\">\r\n\r\n                        <GridItem bg='cyan.900' p='10px' colSpan={3}>\r\n                            <Flex> \r\n                                <Box  p=\"3\">\r\n                                <Heading as='h3' size='md' color='white'> Change Account Details </Heading> \r\n                                </Box>\r\n                                                   \r\n                             </Flex>\r\n                        </GridItem>\r\n\r\n                        <GridItem colSpan={2}>\r\n                              <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'>         \r\n                            <ChangePersonalDetails />  \r\n                            {/* data={ personaldet } updateDetails={updateDetails}  */}\r\n                            </Box>\r\n                       </GridItem>\r\n\r\n                       <GridItem >\r\n                       <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'> \r\n                       <ChangePasswordForm />\r\n                       \r\n                       </Box>\r\n                       </GridItem>\r\n\r\n                    </Grid>\r\n            </GridItem>\r\n\r\n         \r\n        </Grid>\r\n\r\n    \r\n            </Box>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default ChangePersonalDet","F:\\DB_Project\\Front-end-react\\src\\pages\\CategoryPage.js",["334","335"],"F:\\DB_Project\\Front-end-react\\src\\pages\\SpecficProductPage.js",["336","337","338","339","340"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Heading,\r\n  HStack,\r\n  IconButton,\r\n  Image,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  SimpleGrid,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  useColorMode,\r\n  useDisclosure,\r\n  Modal,\r\n  useToast,\r\n  MenuButton,\r\n  Menu,\r\n  MenuList,\r\n  MenuItem,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  AddIcon,\r\n  ChevronDownIcon,\r\n  Icon,\r\n  MinusIcon,\r\n  StarIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport axios from \"axios\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\n\r\nfunction SpecificProductPage() {\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const toast = useToast();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [currentUser, setCurrentUser] = useState({\r\n    isLoggedIn: false,\r\n    user: 0,\r\n  });\r\n\r\n  const [serverResponse, setServerResponse] = useState({\r\n    success: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0});\r\n\r\n  const [isMainCity, setIsMainCity] = useState(0);\r\n\r\n  const quantity_inc = () => {\r\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\r\n  };\r\n  const quantity_dec = () => {\r\n    if (currentOrder.quantity > 0)\r\n      setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\r\n  };\r\n\r\n  const calculateDeliveryTime = () =>{\r\n    let time = 0\r\n    if(data.variants[currentOrder.varient].quantity === 0){time = time + 3}\r\n    if(isMainCity === 1){\r\n      time = time + 5\r\n    }else if (isMainCity === 2){\r\n      time = time + 7\r\n    }\r\n    return time\r\n  }\r\n\r\n  var toast_type1 = (success, message) =>\r\n    toast({\r\n      position: \"bottom-right\",\r\n      title: success ? \"Success\" : \"Failed\",\r\n      description: message,\r\n      status: success ? \"success\" : \"error\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"\",\r\n    item_name: \"\",\r\n    category_name: \"\",\r\n    price: 0,\r\n    num_of_orders: 0,\r\n    description: \"\",\r\n    status: \"\",\r\n    image: \"\",\r\n    feedbacks: [\r\n      {\r\n        feedback_ID: \"\",\r\n        user_ID: \"\",\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        variant_ID: \"\",\r\n        variant_name: \"\",\r\n        image: \"\",\r\n        color: \"\",\r\n        size: \"\",\r\n        specificDetail: \"\",\r\n        quantity: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.defaults.withCredentials = true;\r\n    axios.get(`http://localhost:5000/customer/login`).then((response) => {\r\n      console.log(response);\r\n      if (response.data.LoggedIn)\r\n        setCurrentUser({ isLoggedIn: true, user: response.data.user.user_id });\r\n    });\r\n    axios\r\n      .get(`http://localhost:5000/items/specificitem/${id}`)\r\n      .then((response) => {\r\n        let data = response.data.items;\r\n        console.log(data);\r\n        setData(data);\r\n        setCurrentOrder({\r\n          ...currentOrder,\r\n          varient_id: data.variants[0].variant_id,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const validateData = () => {\r\n    if (currentOrder.quantity <= 0) {\r\n      toast_type1(false, \"Please Select the Quantity\")\r\n      return false;\r\n    } else if (isMainCity === 0) {\r\n      toast_type1(false, \"Please select the city\");\r\n      return false;\r\n    }else if (!currentUser.isLoggedIn) {\r\n      toast_type1(false, \"Please Log in to your account\");\r\n      return false;\r\n    }  \r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const HandleClickAddtoCart = () => {\r\n    if(validateData()){\r\n      axios\r\n        .post(`http://localhost:5000/items/specificitem/addtocart`, {\r\n          cart_id: currentUser.user,\r\n          varient_id: currentOrder.varient_id,\r\n          quantity: currentOrder.quantity,\r\n          delivery_time:calculateDeliveryTime()\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          toast_type1(true, \"Item Added to the cart successfully\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Add to cart server error : \" + error.response.data.message\r\n          );\r\n          setServerResponse({ success: false, message: \"Server error\" });\r\n          toast_type1(false, \"Server error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const HandleClickBuyNow = () => {\r\n    if(validateData()){\r\n      axios\r\n        .post(`http://localhost:5000/items/specificitem/addtocart`, {\r\n          cart_id: currentUser.user,\r\n          varient_id: currentOrder.varient_id,\r\n          quantity: currentOrder.quantity,\r\n          delivery_time:calculateDeliveryTime()\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          history.push(\"/cart\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Add to cart server error : \" + JSON.stringify(error.response.data.message)\r\n          );\r\n          setServerResponse({ success: false, message: \"Server error\" });\r\n          toast_type1(false, \"Server error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  var imageStack = new Array(data.variants.length)\r\n    .fill(0)\r\n    .map((zero, index) => (\r\n      <Box\r\n        cursor=\"pointer\"\r\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\r\n        borderColor=\"gray.500\"\r\n        onClick={() =>\r\n          setCurrentOrder({\r\n            ...currentOrder,\r\n            varient: index,\r\n            varient_id: data.variants[index].variant_id,\r\n          })\r\n        }\r\n      >\r\n        <Image\r\n          src={`data:image/png;base64,${arrayBufferToBinaryString(\r\n            data.variants[index].image ? data.variants[index].image.data : null\r\n          )}`}\r\n          w=\"100px\"\r\n          h=\"100px\"\r\n          alt=\"image\"\r\n        />\r\n      </Box>\r\n    ));\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb=\"20px\">\r\n        <SearchBar text=\"I'm shopping for\" />\r\n      </Center>\r\n\r\n      <SimpleGrid\r\n        columns={2}\r\n        spacing={5}\r\n        minChildWidth=\"400px\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n      >\r\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\r\n          <Image\r\n            src={`data:image/png;base64,${arrayBufferToBinaryString(\r\n              data.image ? data.image.data : null\r\n            )}`}\r\n            w=\"400px\"\r\n            h=\"400px\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            {data.item_name}\r\n          </Heading>\r\n\r\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\r\n            {data.category}\r\n          </Text>\r\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < data.rating ? \"cyan.500\" : \"cyan.300\"}\r\n                />\r\n              ))}\r\n            <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n              {data.feedbacks.length} reviews &bull; {data.num_of_orders} orders\r\n            </Box>\r\n          </Box>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Varient\r\n          </Heading>\r\n          <Text mt=\"10px\" color=\"green.500\">\r\n            {data.variants[currentOrder.varient].variant_name}\r\n          </Text>\r\n          <HStack>{imageStack}</HStack>\r\n          <HStack spacing=\"40px\">\r\n            <Box>\r\n              <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n                Color\r\n              </Heading>\r\n              <Text mt=\"5px\">{data.variants[currentOrder.varient].color}</Text>\r\n            </Box>\r\n            <Box>\r\n              <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n                Size\r\n              </Heading>\r\n              <Text mt=\"5px\">{data.variants[currentOrder.varient].size}</Text>\r\n            </Box>\r\n          </HStack>\r\n\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Specific details of the variant\r\n          </Heading>\r\n          <Text mt=\"5px\">\r\n            {data.variants[currentOrder.varient].specific_detail}\r\n          </Text>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Quantity\r\n          </Heading>\r\n          <HStack mt=\"10px\">\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<AddIcon />}\r\n              onClick={quantity_inc}\r\n            />\r\n            <Text>{currentOrder.quantity}</Text>\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<MinusIcon />}\r\n              onClick={quantity_dec}\r\n            />\r\n            <Text pl=\"20px\" color=\"red.500\">\r\n              {data.variants.length === 0\r\n                ? null\r\n                : data.variants[currentOrder.varient].quantity}{\" \"}\r\n              items are available\r\n            </Text>\r\n          </HStack>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Delivery to\r\n          </Heading>\r\n          <Menu>\r\n            <MenuButton mt='10px' mb=\"10px\" as={Button} rightIcon={<ChevronDownIcon />}>\r\n              {isMainCity === 0 ? <Text>Select option</Text> : null}\r\n              {isMainCity === 1 ? <Text>Main city</Text> : null}\r\n              {isMainCity === 2 ? <Text>Not a main city</Text> : null}\r\n            </MenuButton>\r\n            <MenuList>\r\n              <MenuItem onClick={() => setIsMainCity(1)}>Main City</MenuItem>\r\n              <MenuItem onClick={() => setIsMainCity(2)}>\r\n                Not a main city\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n          {isMainCity === 1 ?\r\n          <Box bg={colorMode === 'light' ? 'gray.100' : 'gray.800'} p = '10px'> \r\n          <Text fontSize=\"sm\">Main cities are : </Text> \r\n          <Text fontSize='xs'>Colombo, Gampaha, Moratuwa, Kelaniya</Text>\r\n          <Text fontSize='xl'>Estimated delivery time : {data.variants[currentOrder.varient].quantity === 0 ? 8 : 5} days</Text> \r\n          </Box>\r\n          : null}\r\n\r\n          {isMainCity === 2 ?\r\n          <Box bg={colorMode === 'light' ? 'gray.100' : 'gray.800'} p = '10px'> \r\n          <Text fontSize=\"sm\">Cities excluding : </Text> \r\n          <Text fontSize='xs'>Colombo, Gampaha, Moratuwa, Kelaniya</Text>\r\n          <Text fontSize='xl'>Estimated delivery time : {data.variants[currentOrder.varient].quantity === 0 ? 10 : 7} days</Text> \r\n          </Box>\r\n          : null}\r\n          <Heading as=\"h4\" size=\"xl\" mt=\"20px\">\r\n            Price\r\n          </Heading>\r\n          <Text fontSize=\"4xl\">\r\n            Rs. {data.variants[currentOrder.varient].price}\r\n          </Text>\r\n          <HStack mt=\"20px\">\r\n            <Button\r\n              onClick={HandleClickBuyNow}\r\n              colorScheme=\"cyan\"\r\n              color=\"white\"\r\n              size=\"lg\"\r\n            >\r\n              Buy now\r\n            </Button>\r\n            <Button\r\n              onClick={HandleClickAddtoCart}\r\n              colorScheme=\"orange\"\r\n              size=\"lg\"\r\n              variant=\"outline\"\r\n            >\r\n              Add to cart\r\n            </Button>\r\n          </HStack>\r\n        </Box>\r\n      </SimpleGrid>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"10px\"\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          Description\r\n        </Heading>\r\n        <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\r\n          {data.description}\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"100px\"\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          Reviews\r\n        </Heading>\r\n\r\n        <ReviewCountPreview feedbacks={data.feedbacks} />\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> All\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 5\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 4\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 3\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 2\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 1\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview\r\n                feedbacks={data.feedbacks}\r\n                rating=\"all\"\r\n              />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={5} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={4} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={3} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={2} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={1} />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent bg={serverResponse.success ? \"green.300\" : \"red.300\"}>\r\n          <ModalHeader>\r\n            {serverResponse.success ? (\r\n              <Text color=\"white\">Success</Text>\r\n            ) : (\r\n              <Text color=\"white\">Failed</Text>\r\n            )}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Text color=\"white\">{serverResponse.message}</Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SpecificProductPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\OrderView.js",["341","342","343"],"import {\r\n  Box,\r\n  Text,\r\n  Img,\r\n  Button,\r\n  Center,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  VStack,\r\n  HStack,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Deliverycard from \"../components/Deliverycard\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction OrderView() {\r\n  let { id } = useParams();\r\n\r\n  const [data, setData] = useState({ orderitems: [] });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/orders/orderdetails/${id}`)\r\n      .then((response) => {\r\n        setData(response.data.order[0]);\r\n      });\r\n  }, []);\r\n\r\n  console.log(data);\r\n\r\n  const arrMax = (arr) => Math.max(...arr);\r\n\r\n  var delivery_times = [];\r\n\r\n  data.orderitems.forEach((item) => {\r\n    delivery_times.push(item.delivery_time);\r\n  });\r\n\r\n  var maximum_delivery_time = arrMax(delivery_times);\r\n\r\n  return (\r\n    <Box\r\n      pt=\"120px\"\r\n      pl={{ base: \"5px\", sm: \"100px\" }}\r\n      pr={{ base: \"5px\", sm: \"100px\" }}\r\n    >\r\n      <Heading\r\n        as=\"h3\"\r\n        size=\"base\"\r\n        color=\"gray.600\"\r\n        mb=\"5px\"\r\n        bg=\"gray.300\"\r\n        p=\"5px\"\r\n      >\r\n        <HStack>\r\n          <Box>Order Details :</Box>\r\n          <Box size=\"xs\" color=\"red.600\">\r\n            {data.order_id}\r\n          </Box>\r\n        </HStack>\r\n      </Heading>\r\n      <Box height=\"80px\">\r\n        <HStack>\r\n          <b size=\"base\">\r\n            Deliver within {maximum_delivery_time} days from ordered date{\" \"}\r\n            {data.order_date}\r\n          </b>\r\n          <Box>\r\n            <Button\r\n              ml=\"60px\"\r\n              _hover={{ bg: \"blue.300\", transform: \"scale(1.01)\" }}\r\n            >\r\n              Print Shipping Lable\r\n            </Button>\r\n          </Box>\r\n        </HStack>\r\n\r\n        <p>\r\n          Make sure you ship your order within the handling time you specified\r\n          in the listing. Estimated delivery date shown to buyer:{\" \"}\r\n          {maximum_delivery_time} days from ordered date\r\n        </p>\r\n      </Box>\r\n\r\n      <Box width=\"100%\">\r\n        <HStack>\r\n          <Box width=\"100%\">\r\n            <Heading\r\n              as=\"h3\"\r\n              size=\"base\"\r\n              color=\"gray.600\"\r\n              mb=\"5px\"\r\n              bg=\"gray.300\"\r\n              p=\"5px\"\r\n            >\r\n              Purchase Details\r\n            </Heading>\r\n            <Box height=\"250px\">\r\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n                <GridItem fontWeight=\"bold\">Buyer</GridItem>\r\n                <GridItem fontWeight=\"semibold\">\r\n                  {data.firstname} {data.lastname}\r\n                </GridItem>\r\n                <GridItem fontWeight=\"bold\">E-mail</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.email}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Phone</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.phone_number}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Date sold</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.order_date}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Date paid</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.order_date}</GridItem>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box width=\"100%\">\r\n            <Heading\r\n              as=\"h3\"\r\n              size=\"base\"\r\n              color=\"gray.600\"\r\n              mb=\"5px\"\r\n              bg=\"gray.300\"\r\n              p=\"5px\"\r\n            >\r\n              Shipping Details\r\n            </Heading>\r\n\r\n            <Box height=\"250px\">\r\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={2}>\r\n                <GridItem fontWeight=\"bold\">Tracking</GridItem>\r\n                <GridItem fontWeight=\"semibold\">\r\n                  {data.tracking_number}\r\n                </GridItem>\r\n                <GridItem fontWeight=\"bold\">Ship_to</GridItem>\r\n                <GridItem fontWeight=\"semibold\">\r\n                  {data.address_firstname} {data.address_lastname}\r\n                </GridItem>\r\n                <GridItem fontWeight=\"bold\">Street</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.street}</GridItem>\r\n                <GridItem fontWeight=\"bold\">City</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.city}</GridItem>\r\n                <GridItem fontWeight=\"bold\">State</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.state}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Zip Code</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.zip}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Country of origin</GridItem>\r\n                <GridItem fontWeight=\"semibold\">Sri Lanka</GridItem>\r\n                <GridItem fontWeight=\"bold\">Phone</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.phone_number}</GridItem>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </HStack>\r\n\r\n        <Box width=\"100%\">\r\n          <Heading\r\n            as=\"h3\"\r\n            size=\"base\"\r\n            color=\"gray.600\"\r\n            mb=\"5px\"\r\n            bg=\"gray.300\"\r\n            p=\"5px\"\r\n          >\r\n            Items\r\n          </Heading>\r\n          <Box height=\"auto\" pb=\"100px\">\r\n            {Array(data.orderitems.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <Box\r\n                  w=\"100%\"\r\n                  _hover={{ bg: \"yellow.100\", transform: \"scale(1.01)\" }}\r\n                  borderRadius=\"lg\"\r\n                  overflow=\"hidden\"\r\n                  mb=\"5px\"\r\n                  borderWidth=\"1px\"\r\n                >\r\n                  <HStack>\r\n                    <Box width=\"50%\" fontWeight=\"semibold\" height=\"80px\">\r\n                      <Box>\r\n                        <Img\r\n                          src={`data:image/png;base64,${arrayBufferToBinaryString(\r\n                            data.orderitems[i].image.data\r\n                          )}`}\r\n                          alt={\"picture\"}\r\n                          w=\"100px\"\r\n                          h=\"100px\"\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n\r\n                    <Box width=\"100%\" fontWeight=\"semibold\" height=\"80px\">\r\n                      <Box fontWeight=\"bold\">\r\n                        <Text color=\"red.600\" fontSize=\"lg\">\r\n                          {data.orderitems[i].item_name}\r\n                        </Text>\r\n                      </Box>\r\n                    </Box>\r\n                    <VStack>\r\n                      <Box width=\"200px\" fontWeight=\"semibold\" height=\"40px\">\r\n                        <Box>\r\n                          <Text color=\"gray.600\" fontSize=\"lg\">\r\n                            Variant: <b>{data.orderitems[i].variant_name}</b>\r\n                          </Text>\r\n                        </Box>\r\n                      </Box>\r\n                      <Box width=\"200px\" fontWeight=\"semibold\" height=\"40px\">\r\n                        <Box>\r\n                          <Text color=\"gray.600\" fontSize=\"lg\">\r\n                            Quantity:{\" \"}\r\n                            <b>{data.orderitems[i].ordered_quantity}</b>\r\n                          </Text>\r\n                        </Box>\r\n                      </Box>\r\n                    </VStack>\r\n\r\n                    <Box\r\n                      width=\"50%\"\r\n                      height=\"80px\"\r\n                      fontWeight=\"semibold\"\r\n                      textAlign=\"center\"\r\n                    >\r\n                      <Text color=\"blue.700\" fontSize=\"2lg\">\r\n                        Rs. {data.orderitems[i].price}\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box width=\"80%\" fontWeight=\"semibold\" height=\"80px\">\r\n                      <Text color=\"gray.600\" fontSize=\"lg\">\r\n                        Total:{\" \"}\r\n                        {data.orderitems[i].price *\r\n                          data.orderitems[i].ordered_quantity}\r\n                      </Text>\r\n                    </Box>\r\n                  </HStack>\r\n                </Box>\r\n              ))}\r\n            <Box\r\n              borderRadius=\"lg\"\r\n              overflow=\"hidden\"\r\n              mb=\"5px\"\r\n              borderWidth=\"1px\"\r\n              p=\"50px\"\r\n            >\r\n              <HStack spacing='50px'>\r\n                <Text fontSize=\"2xl\">\r\n                  Order Total: \r\n                </Text>\r\n                <Heading fontSize=\"4xl\">\r\n                  Rs. {data.order_total}\r\n                </Heading>\r\n              </HStack>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default OrderView;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerDashboard.js",["344","345","346","347","348"],"F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\Home.js",["349"],"F:\\DB_Project\\Front-end-react\\src\\pages\\CardDetails.js",["350","351"],"F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerAdress.js",["352","353","354"],"F:\\DB_Project\\Front-end-react\\src\\components\\Navbar.js",["355","356","357"],"F:\\DB_Project\\Front-end-react\\src\\pages\\CartPage.js",["358","359","360","361","362"],"import { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Heading,\r\n  HStack,\r\n  Icon,\r\n  Img,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n  SimpleGrid,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Tfoot,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorMode,\r\n  useToast,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\nimport { FaMoneyBillAlt, FaRegCreditCard } from \"react-icons/fa\";\r\nimport { SiPaypal } from \"react-icons/si\";\r\nimport { RiVisaLine } from \"react-icons/ri\";\r\n\r\nimport visa from \"payment-icons/min/flat/visa.svg\";\r\nimport mastercard from \"payment-icons/min/flat/mastercard-old.svg\";\r\nimport amex from \"payment-icons/min/flat/amex.svg\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction CartPage() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const toast = useToast();\r\n  var toast_type1 = (success, message) =>\r\n    toast({\r\n      position: \"bottom-right\",\r\n      title: success ? \"Success\" : \"Failed\",\r\n      description: message,\r\n      status: success ? \"success\" : \"error\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n\r\n  const [cartItems, setCartItems] = useState([\r\n    {\r\n      item_ID: \"\",\r\n      item_name: \"\",\r\n      price: 0,\r\n      quantity: 0,\r\n      varient: \"\",\r\n      image: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [shippingAddress, setShippingAddress] = useState([\r\n    {\r\n      first_Name: \"\",\r\n      last_Name: \"\",\r\n      street: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [card, setCard] = useState([\r\n    {\r\n      owner: \"\",\r\n      card_number: \"\",\r\n      bank_name: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [currentCard, setCurrentCard] = useState(\"none\");\r\n\r\n  const [currentShippingAddress, setCurrentShippingAddress] = useState(0);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"cash\");\r\n\r\n  var TotalPrice = 0;\r\n\r\n  var cardIcon = (type) => {\r\n    if (type === \"visa\") {\r\n      return <Img src={visa} w={12} h={12} />;\r\n    } else if (type === \"mastercard\") {\r\n      return <Img src={mastercard} w={12} h={12} />;\r\n    } else if (type === \"amex\") {\r\n      return <Img src={amex} w={12} h={12} />;\r\n    }\r\n  };\r\n\r\n  cartItems.forEach((element) => {\r\n    TotalPrice = TotalPrice + element.quantity * element.price;\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/items/cart`).then((response) => {\r\n      let data = response.data.items;\r\n      console.log(data);\r\n      setCartItems(data);\r\n    });\r\n    axios.get(`http://localhost:5000/customer/addresses`).then((response) => {\r\n      let data = response.data.addresses;\r\n      console.log(data);\r\n      setShippingAddress(data);\r\n    });\r\n    axios.get(`http://localhost:5000/customer/bankCards`).then((response) => {\r\n      let data = response.data.bankCards;\r\n      console.log(data);\r\n      setCard(data);\r\n    });\r\n  }, []);\r\n\r\n  const HandleRemove = (id) => {\r\n    axios.delete(`http://localhost:5000/items/cart/${id}`).then((response) => {\r\n      console.log(id);\r\n    });\r\n    axios.get(`http://localhost:5000/items/cart`).then((response) => {\r\n      let data = response.data.items;\r\n      console.log(data);\r\n      setCartItems(data);\r\n    });\r\n  };\r\n\r\n  const validateData = () => {\r\n    if (cartItems.length <= 0) {\r\n      toast_type1(false, \"Cart is empty\");\r\n      return false;\r\n    } else if (paymentMethod === \"card\" && currentCard === \"none\") {\r\n      toast_type1(false, \"Please select a card\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const HandlePlaceOrder = () => {\r\n    if (validateData()) {\r\n      axios\r\n        .post(`http://localhost:5000/orders/placeorder`, {\r\n          payment_method: paymentMethod,\r\n          order_address: shippingAddress[currentShippingAddress].address_id,\r\n          order_total: TotalPrice,\r\n          order_status: \"paid\",\r\n          tracking_number: \"123123213\",\r\n        })\r\n        .then((response) => {\r\n          toast_type1(true, \"Order placed successfully\");\r\n        })\r\n        .catch((err) =>{\r\n          toast_type1(false, \"Server error\");\r\n\r\n        })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Box borderWidth=\"1px\" borderColor=\"gray.300\" p=\"50px\" mb=\"200px\">\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          <Icon as={FiShoppingCart} w={12} h={12} /> Cart\r\n        </Heading>\r\n        <Table variant=\"simple\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>Product</Th>\r\n              <Th>Product name</Th>\r\n              <Th>Varient</Th>\r\n              <Th isNumeric>Quantity</Th>\r\n              <Th isNumeric>Price(each)</Th>\r\n              <Th isNumeric>Price</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {Array(cartItems.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <Tr>\r\n                  <Td>\r\n                    <Img src={cartItems[i].image} w=\"50px\" h=\"50px\" />\r\n                  </Td>\r\n                  <Td>{cartItems[i].item_name}</Td>\r\n                  <Td>{cartItems[i].variant}</Td>\r\n                  <Td isNumeric>{cartItems[i].quantity}</Td>\r\n                  <Td isNumeric>{cartItems[i].price}</Td>\r\n                  <Td isNumeric>\r\n                    {cartItems[i].price * cartItems[i].quantity}\r\n                  </Td>\r\n                  <Td>\r\n                    <Button\r\n                      colorScheme=\"red\"\r\n                      variant=\"outline\"\r\n                      size=\"xs\"\r\n                      onClick={() => HandleRemove(cartItems[i].variant_id)}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n          </Tbody>\r\n          <Tfoot>\r\n            <Tr>\r\n              <Th fontSize=\"3xl\">Total</Th>\r\n              <Th>-</Th>\r\n              <Th>-</Th>\r\n              <Th isNumeric>-</Th>\r\n              <Th isNumeric fontSize=\"2xl\">\r\n                Rs.{\" \"}\r\n              </Th>\r\n              <Th isNumeric fontSize=\"2xl\">\r\n                {TotalPrice}\r\n              </Th>\r\n            </Tr>\r\n          </Tfoot>\r\n        </Table>\r\n        <Divider />\r\n        <SimpleGrid columns={2} spacing={5} mb=\"20px\" mt=\"50px\">\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\">\r\n              Shipping address\r\n            </Heading>\r\n\r\n            {shippingAddress.length !== 0 ? (\r\n              <>\r\n                <Box\r\n                  p=\"10px\"\r\n                  borderWidth=\"1px\"\r\n                  bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\r\n                >\r\n                  <Heading as=\"h5\" size=\"sm\">\r\n                    {shippingAddress[currentShippingAddress].first_Name}{\" \"}\r\n                    {shippingAddress[currentShippingAddress].last_Name}\r\n                  </Heading>\r\n\r\n                  <Text>{shippingAddress[currentShippingAddress].street}</Text>\r\n                  <Text>{shippingAddress[currentShippingAddress].city}</Text>\r\n                  <Text>{shippingAddress[currentShippingAddress].state}</Text>\r\n                  <Text>{shippingAddress[currentShippingAddress].zip}</Text>\r\n                </Box>\r\n                <Box ml=\"10px\" pt=\"10px\">\r\n                  <Menu>\r\n                    <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                      Address No. {currentShippingAddress + 1}\r\n                    </MenuButton>\r\n                    <MenuList>\r\n                      {Array(shippingAddress.length)\r\n                        .fill(\"\")\r\n                        .map((_, i) => (\r\n                          <MenuItem\r\n                            onClick={() => setCurrentShippingAddress(i)}\r\n                          >\r\n                            {\"Address No. \" +\r\n                              (i + 1) +\r\n                              \" - \" +\r\n                              shippingAddress[i].first_Name +\r\n                              \" \" +\r\n                              shippingAddress[i].last_Name +\r\n                              \", \" +\r\n                              shippingAddress[i].street +\r\n                              \", \" +\r\n                              shippingAddress[i].city +\r\n                              \", \" +\r\n                              shippingAddress[i].state +\r\n                              \", \" +\r\n                              shippingAddress[i].zip}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </MenuList>\r\n                  </Menu>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Text color=\"red.300\">Please add a shipping address</Text>\r\n            )}\r\n\r\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\" mt=\"50px\">\r\n              Payment method\r\n            </Heading>\r\n\r\n            {currentCard !== \"none\" && paymentMethod === 2 ? (\r\n              <Box\r\n                p=\"10px\"\r\n                borderWidth=\"1px\"\r\n                bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\r\n              >\r\n                <HStack>\r\n                  {card.length !== 0\r\n                    ? cardIcon(card[currentCard].card_type)\r\n                    : \"No cards added\"}\r\n                  <Box>\r\n                    <Text>\r\n                      {card.length !== 0 ? card[currentCard].owner : null}\r\n                    </Text>\r\n                    <Text>\r\n                      XXXX XXXX XXXX{\" \"}\r\n                      {card.length !== 0\r\n                        ? card[currentCard].card_number.substr(12, 15)\r\n                        : null}\r\n                    </Text>\r\n                  </Box>\r\n                </HStack>\r\n              </Box>\r\n            ) : null}\r\n\r\n            <HStack pt=\"10px\">\r\n              <Box pl=\"10px\">\r\n                <Menu>\r\n                  <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                    {paymentMethod === 0 ? <Text>Select method</Text> : null}\r\n                    {paymentMethod === \"cash\" ? (\r\n                      <Text>Cash on delivery</Text>\r\n                    ) : null}\r\n                    {paymentMethod === \"card\" ? <Text>Card</Text> : null}\r\n                  </MenuButton>\r\n                  <MenuList>\r\n                    <MenuItem\r\n                      icon={\r\n                        <Icon\r\n                          as={FaMoneyBillAlt}\r\n                          w={6}\r\n                          h={6}\r\n                          color=\"green.500\"\r\n                        />\r\n                      }\r\n                      onClick={() => setPaymentMethod(\"cash\")}\r\n                    >\r\n                      Cash on delivery\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      icon={\r\n                        <Icon\r\n                          as={FaRegCreditCard}\r\n                          w={6}\r\n                          h={6}\r\n                          color=\"cyan.500\"\r\n                        />\r\n                      }\r\n                      onClick={() => setPaymentMethod(\"card\")}\r\n                    >\r\n                      Card\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </Menu>\r\n              </Box>\r\n              <Box pl=\"10px\">\r\n                {paymentMethod === \"cash\" ? (\r\n                  <Icon as={FaMoneyBillAlt} w={8} h={8} color=\"green.500\" />\r\n                ) : null}\r\n                {paymentMethod === \"card\" ? (\r\n                  <Icon as={FaRegCreditCard} w={8} h={8} color=\"cyan.500\" />\r\n                ) : null}\r\n              </Box>\r\n            </HStack>\r\n\r\n            {paymentMethod === \"card\" ? (\r\n              <Box pl=\"10px\" pt=\"10px\">\r\n                {card.length !== 0 ? (\r\n                  <Box>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                        Select a card\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        {Array(card.length)\r\n                          .fill(\"\")\r\n                          .map((_, i) => (\r\n                            <MenuItem\r\n                              icon={cardIcon(\"visa\")}\r\n                              onClick={() => setCurrentCard(i)}\r\n                            >\r\n                              <Text>{card[i].owner}</Text>\r\n                              <Text>\r\n                                XXXX XXXX XXXX{\" \"}\r\n                                {card[i].card_number.substr(12, 15)}\r\n                              </Text>\r\n                            </MenuItem>\r\n                          ))}\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Box>\r\n                ) : (\r\n                  <Text>Please Add a card</Text>\r\n                )}\r\n              </Box>\r\n            ) : null}\r\n          </Box>\r\n          <Box mr=\"0px\" ml=\"auto\">\r\n            <Box w=\"400px\" borderWidth=\"1px\" p=\"10px\">\r\n              <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\r\n                Order Total\r\n              </Heading>\r\n              <Table>\r\n                <Tbody variant=\"simple\" size=\"md\">\r\n                  <Tr>\r\n                    <Td>Subtotal</Td>\r\n                    <Td isNumeric>{TotalPrice}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td>Shipping</Td>\r\n                    <Td isNumeric>Free</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td fontSize=\"2xl\">Total</Td>\r\n                    <Td isNumeric fontSize=\"2xl\">\r\n                      Rs. {TotalPrice}\r\n                    </Td>\r\n                  </Tr>\r\n                </Tbody>\r\n              </Table>\r\n              <Button\r\n                onClick={HandlePlaceOrder}\r\n                mt=\"20px\"\r\n                colorScheme=\"cyan\"\r\n                w=\"100%\"\r\n              >\r\n                Checkout\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </SimpleGrid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\SignUp.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\AllOrders.js",["363","364","365"],"F:\\DB_Project\\Front-end-react\\src\\pages\\TrackOrder.js",["366","367"],"import React from 'react'\r\nimport { \r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    Center,\r\n    useColorMode,\r\n    Badge,\r\n    Text\r\n        } from \"@chakra-ui/react\";\r\n\r\nconst TrackOrder = () => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n\r\n    return (\r\n        <Box \r\n            pt=\"110px\"\r\n            pl={{ base: \"10px\", sm: \"100px\" }}\r\n            pr={{ base: \"10px\", sm: \"100px\" }}\r\n        >\r\n            <Box mt='20px' mb='20px' p='3' bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\r\n                <Center><Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h3' size='md'>Track Your Order</Heading></Center>        \r\n            </Box>\r\n            <Grid\r\n                h=\"600px\"\r\n                templateRows=\"repeat(3, 1fr)\"\r\n                templateColumns=\"repeat(3, 1fr)\"\r\n                gap={4}\r\n            >\r\n                <GridItem colSpan={2}  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\r\n\r\n                <Box p='5'>\r\n                    <Badge mr='3' variant=\"outline\" fontSize='md' colorScheme=\"teal\">\r\n                    Estimated Delivery \r\n                    </Badge>\r\n                   dsdsd\r\n     \r\n                </Box>\r\n\r\n                </GridItem>\r\n\r\n                <GridItem bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\r\n\r\n                    <Box p='8'>\r\n                        xdsd\r\n                    </Box>\r\n\r\n                </GridItem>\r\n                <GridItem  rowSpan={2} colSpan={2} bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} />\r\n                <GridItem  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}/>\r\n            </Grid>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TrackOrder\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\AwaitingDelivery.js",["368","369","370","371","372"],"import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useState,useEffect } from \"react\";\r\n  import axios from \"axios\";\r\n  import Deliverycard from \"../components/Deliverycard\";\r\n  import SearchBar from \"../components/SearchBar\";\r\n\r\n  \r\n  function AwaitingDelivery() {\r\n    \r\n    var [orderlist, setorderlist] = useState([{}])\r\n  \r\n\r\n\r\n  \r\n    useEffect(() => {\r\n      axios\r\n        .get(`http://localhost:5000/orders/awaitingdeliveries`)\r\n        .then((response) => {\r\n          console.log(response.data.orders)\r\n          setorderlist(response.data.orders)\r\n        });\r\n  \r\n    }, []);\r\n  \r\n    const searchBarText = `Search in Awaiting Deliveries`;\r\n    \r\n    return (\r\n      <Box\r\n        pt=\"150px\"\r\n        pl={{ base: \"10px\", sm: \"100px\" }}\r\n        pr={{ base: \"10px\", sm: \"100px\" }}\r\n      >\r\n        \r\n        <Grid\r\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\r\n        >\r\n          <GridItem  bg=\"gray.300\" p=\"10px\">\r\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\r\n              Awaiting Delivery\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem \r\n          \r\n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\r\n            \r\n            \r\n              {Array(orderlist.length)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n                  <Deliverycard \r\n                    \r\n\r\n                    Order_ID={orderlist[i].order_id}\r\n                    Variant_Name= {orderlist[i].variant_name}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].price*orderlist[i].quantity}\r\n                    Date_paid={orderlist[i].ordered_date}\r\n                    Date_shipped={orderlist[i].ordered_date}\r\n                    Quantity={orderlist[i].quantity}\r\n                    F_name= {orderlist[i].first_name}\r\n                    L_name= {orderlist[i].last_name}\r\n                    Order_status={orderlist[i].order_status}\r\n                    \r\n                  />\r\n                ))}\r\n           \r\n          </GridItem>\r\n          \r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export default AwaitingDelivery;\r\n  ","F:\\DB_Project\\Front-end-react\\src\\pages\\NewItem.js",["373","374","375","376","377"],"import { AddIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Input,\r\n  Stack,\r\n  VStack,\r\n  Heading,\r\n  Form,\r\n  Select,\r\n  HStack,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberDecrementStepper,\r\n  NumberIncrementStepper,\r\n  Flex,\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  NumberInput,\r\n  Text,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction NewItem() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChangeQuantity = (value) => {\r\n    setValue(value);\r\n    setVariantData({ ...variantData, quantity: value });\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    item_name: \"\",\r\n    catagory: \"\",\r\n    description: \"\",\r\n    status: \"Available\",\r\n    price: 0,\r\n    image: \"\",\r\n    variants: [],\r\n  });\r\n\r\n  const [variantData, setVariantData] = useState({\r\n    variant_name: \"\",\r\n    price: \"\",\r\n    color: \"\",\r\n    size: \"\",\r\n    specific_detail: \"\",\r\n    quantity: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const addVariant = () => {\r\n    var newVariantsList = data.variants;\r\n    newVariantsList.push(variantData);\r\n\r\n    setData({ ...data, variants: newVariantsList });\r\n  };\r\n\r\n  const handleChangeVariant = (event) => {\r\n    var value = event.target.value;\r\n    var name = event.target.name;\r\n    console.log(name, value);\r\n    setVariantData({ ...variantData, [name]: value });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    var value = event.target.value;\r\n    var name = event.target.name;\r\n    console.log(name, value);\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const fileToDataUri = (file) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        resolve(event.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n\r\n  const onChangevariant = (file) => {\r\n    if (!file) {\r\n      setVariantData({ ...variantData, image: \"\" });\r\n      return;\r\n    }\r\n\r\n    fileToDataUri(file).then((dataUri) => {\r\n      setVariantData({ ...variantData, image: dataUri });\r\n      console.log(dataUri);\r\n    });\r\n  };\r\n\r\n  const onChange = (file) => {\r\n    if (!file) {\r\n      setData({ ...data, image: \"\" });\r\n      return;\r\n    }\r\n\r\n    fileToDataUri(file).then((dataUri) => {\r\n      setData({ ...data, image: dataUri });\r\n      console.log(dataUri);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(data)\r\n    axios\r\n      .post(`http://localhost:5000/items/newitem`, data)\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <form>\r\n        <Heading\r\n          as=\"h3\"\r\n          size=\"xl\"\r\n          color=\"gray.600\"\r\n          mb=\"10px\"\r\n          bg=\"gray.300\"\r\n          p=\"10px\"\r\n        >\r\n          List a New Item\r\n        </Heading>\r\n        <Stack spacing={1}>\r\n          <b>\r\n            <>Title :</>\r\n          </b>\r\n          <Input\r\n            name=\"item_name\"\r\n            backgroundColor=\"yellow.100\"\r\n            placeholder=\"Enter title here\"\r\n            size=\"md\"\r\n            onChange={(event) => handleChange(event)}\r\n          />\r\n\r\n          <b>\r\n            <>Category:</>\r\n          </b>\r\n\r\n          <Select\r\n            name=\"catagory\"\r\n            borderColor=\"yellow.300\"\r\n            placeholder=\"Select Category\"\r\n            w=\"40%\"\r\n            bg=\"yellow.100\"\r\n            onChange={(event) => handleChange(event)}\r\n          >\r\n            <option w=\"40%\" value=\"Mobile phones\">\r\n              Mobile phones\r\n            </option>\r\n            <option w=\"40%\" value=\"Other Consumer Electronics\">\r\n              Computer Accessories\r\n            </option>\r\n            <option w=\"40%\" value=\"Portable Audio & Headphones\">\r\n              Portable Audio & Headphones\r\n            </option>\r\n            <option w=\"40%\" value=\"Vintage Electronics\">\r\n              Vintage Electronics\r\n            </option>\r\n            <option w=\"40%\" value=\"Vehicle Electronics & GPS\">\r\n              Vehicle Electronics & GPS\r\n            </option>\r\n            <option w=\"40%\" value=\"Radio Communication\">\r\n              Radio Communication\r\n            </option>\r\n            <option w=\"40%\" value=\"Circuit Items\">\r\n              Circuit Items{\" \"}\r\n            </option>\r\n            <option w=\"40%\" value=\"Surveillance & Smart Home Electronics & GPS\">\r\n              Surveillance & Smart Home Electronics & GPS\r\n            </option>\r\n            <option w=\"40%\" value=\"Multipurpose Batteries & Power\">\r\n              Multipurpose Batteries & Power\r\n            </option>\r\n            <option w=\"40%\" value=\"Cameras & Photos\">\r\n              Cameras & Photos\r\n            </option>\r\n            <option w=\"40%\" value=\"Other Consumer Electronics\">\r\n              Other Consumer Electronics\r\n            </option>\r\n          </Select>\r\n\r\n          <b>\r\n            <>Main Image:</>\r\n          </b>\r\n          <img width=\"200\" height=\"200\" src={data.image} alt=\"MainImage\" />\r\n          <input\r\n            type=\"file\"\r\n            onChange={(event) => onChange(event.target.files[0] || null)}\r\n          />\r\n\r\n          <b>\r\n            <>Variant :</>\r\n          </b>\r\n          <HStack>\r\n            <Box\r\n              bg=\"yellow.100\"\r\n              w=\"400px\"\r\n              borderRadius=\"2xl\"\r\n              borderColor=\"yellow.300\"\r\n              borderWidth=\"5px\"\r\n            >\r\n              <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                <b>\r\n                  <>Variant Name :</>\r\n                </b>\r\n                <Input\r\n                  name=\"variant_name\"\r\n                  backgroundColor=\"yellow.100\"\r\n                  placeholder=\"Enter Varient Here\"\r\n                  placeholderColor=\"red\"\r\n                  size=\"md\"\r\n                  onChange={handleChangeVariant}\r\n                />\r\n              </Box>\r\n              <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                <b>\r\n                  <>Color :</>\r\n                </b>\r\n                <Input\r\n                  name=\"color\"\r\n                  backgroundColor=\"yellow.100\"\r\n                  placeholder=\"Enter Varient Here\"\r\n                  placeholderColor=\"red\"\r\n                  size=\"md\"\r\n                  onChange={handleChangeVariant}\r\n                />\r\n              </Box>\r\n              <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                <b>\r\n                  <>Size:</>\r\n                </b>\r\n                <Input\r\n                  name=\"size\"\r\n                  backgroundColor=\"yellow.100\"\r\n                  placeholder=\"Enter Varient Here\"\r\n                  placeholderColor=\"red\"\r\n                  size=\"md\"\r\n                  onChange={handleChangeVariant}\r\n                />\r\n              </Box>\r\n\r\n              <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                <b>\r\n                  <>Specific details:</>\r\n                </b>\r\n                <Textarea\r\n                  name=\"specific_detail\"\r\n                  backgroundColor=\"yellow.100\"\r\n                  placeholder=\"Enter Varient Here\"\r\n                  placeholderColor=\"red\"\r\n                  size=\"md\"\r\n                  onChange={handleChangeVariant}\r\n                />\r\n              </Box>\r\n\r\n              <Box ml=\"2%\" mr=\"2%\">\r\n                <b>\r\n                  <>Quantity :</>\r\n                </b>\r\n                <Flex>\r\n                  <NumberInput\r\n                    name=\"quantity\"\r\n                    maxW=\"100px\"\r\n                    mr=\"2rem\"\r\n                    value={value}\r\n                    onChange={handleChangeQuantity}\r\n                    borderColor=\"yellow.300\"\r\n                  >\r\n                    <NumberInputField borderColor=\"yellow.300\" />\r\n                    <NumberInputStepper borderColor=\"yellow.300\">\r\n                      <NumberIncrementStepper />\r\n                      <NumberDecrementStepper />\r\n                    </NumberInputStepper>\r\n                  </NumberInput>\r\n                  <Slider\r\n                    flex=\"1\"\r\n                    focusThumbOnChange={false}\r\n                    onChange={handleChangeQuantity}\r\n                    value={value}\r\n                  >\r\n                    <SliderTrack bg=\"blue.200\">\r\n                      <SliderFilledTrack bg=\"yellow.400\" />\r\n                    </SliderTrack>\r\n                    <SliderThumb\r\n                      borderColor=\"black\"\r\n                      fontSize=\"sm\"\r\n                      boxSize=\"32px\"\r\n                      children={value}\r\n                    />\r\n                  </Slider>\r\n                </Flex>\r\n              </Box>\r\n              <img\r\n                width=\"200\"\r\n                height=\"200\"\r\n                src={variantData.image}\r\n                alt=\"VariantImage\"\r\n              />\r\n              <HStack>\r\n                <Box w=\"50%\" ml=\"2%\" mb=\"2%\">\r\n                  <b>\r\n                    <>Image:</>\r\n                  </b>\r\n                  <input\r\n                    name=\"image\"\r\n                    type=\"file\"\r\n                    onChange={(event) =>\r\n                      onChangevariant(event.target.files[0] || null)\r\n                    }\r\n                  />\r\n                </Box>\r\n                <Box w=\"100%\" borderColor=\"yellow.300\" mr=\"2%\" mb=\"2%\">\r\n                  <b>\r\n                    <>Price:(LKR)</>\r\n                  </b>\r\n                  <Input\r\n                    name=\"price\"\r\n                    backgroundColor=\"yellow.100\"\r\n                    placeholder=\"Enter Price here\"\r\n                    size=\"md\"\r\n                    onChange={handleChangeVariant}\r\n                  />\r\n                </Box>\r\n              </HStack>\r\n            </Box>\r\n\r\n            {Array(data.variants.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <Box>\r\n                  <Box\r\n                    bg=\"yellow.100\"\r\n                    w=\"100%\"\r\n                    borderRadius=\"2xl\"\r\n                    borderColor=\"yellow.300\"\r\n                    borderWidth=\"5px\"\r\n                  >\r\n                    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                      <b>\r\n                        <>Variant Name :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">\r\n                        {data.variants[i].variant_name}\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                      <b>\r\n                        <>Color :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">{data.variants[i].color}</Text>\r\n                    </Box>\r\n\r\n                    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                      <b>\r\n                        <>Size :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">{data.variants[i].size}</Text>\r\n                    </Box>\r\n                    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                      <b>\r\n                        <>Specific details :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">\r\n                        {data.variants[i].specific_detail}\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box ml=\"2%\" mr=\"2%\">\r\n                      <b>\r\n                        <>Quantity :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">{data.variants[i].quantity}</Text>\r\n                    </Box>\r\n                    <HStack>\r\n                      <Box w=\"50%\" ml=\"2%\" mb=\"2%\">\r\n                        <b>\r\n                          <>Image:</>\r\n                        </b>\r\n                        <img\r\n                          width=\"200\"\r\n                          height=\"200\"\r\n                          src={data.variants[i].image}\r\n                          alt=\"MainImage\"\r\n                        />\r\n                      </Box>\r\n                      <Box w=\"100%\" borderColor=\"yellow.300\" mr=\"2%\" mb=\"2%\">\r\n                        <b>\r\n                          <>Price:(LKR)</>\r\n                        </b>\r\n                        <Text>{data.variants[i].price}</Text>\r\n                      </Box>\r\n                    </HStack>\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n          </HStack>\r\n\r\n          <Button\r\n            w=\"33%\"\r\n            ml=\"40%\"\r\n            horizontalAlign=\"true\"\r\n            textColor=\"Black\"\r\n            bg=\"yellow.100\"\r\n            _hover={{ bg: \"yellow.300\", transform: \"scale(1.01)\" }}\r\n            onClick={addVariant}\r\n          >\r\n            <>\r\n              <b>+</b>\r\n            </>\r\n            Add Varient\r\n          </Button>\r\n\r\n          <b>\r\n            <>Discription:</>\r\n          </b>\r\n          <Textarea\r\n            name=\"description\"\r\n            height=\"200px\"\r\n            backgroundColor=\"yellow.100\"\r\n            placeholder=\"Enter Discription here\"\r\n            size=\"md\"\r\n            onChange={(event) => handleChange(event)}\r\n          />\r\n        </Stack>\r\n\r\n        <br />\r\n\r\n        <Button\r\n          Align=\"middle\"\r\n          ml=\"40%\"\r\n          horizontalAlign=\"true\"\r\n          textColor=\"Black\"\r\n          bg=\"blue.100\"\r\n          _hover={{ bg: \"blue.300\", transform: \"scale(1.01)\" }}\r\n          onClick={(e)=>handleSubmit(e)}\r\n        >\r\n          Submit & Create Listing\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\nexport default NewItem;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\FeedbackPage.js",["378","379","380","381","382","383","384","385","386"],"import {\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Textarea,\r\n  Text,\r\n  useColorMode,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\r\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";import { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\n\r\n\r\nimport {\r\n  AddIcon,\r\n  MinusIcon,\r\n  ArrowForwardIcon,\r\n  StarIcon,\r\n  \r\n} from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction FeedbackPage(props) {\r\n  let { item_id } = useParams();\r\n  let { order_id } = useParams();\r\n\r\n  const toast = useToast()\r\n\r\n  // var Order_ID = 1;\r\n  // var Item_ID = 1;\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"\",\r\n    item_name: \"\",\r\n    category_name: \"\",\r\n    price: 0,\r\n    num_of_orders: 0,\r\n    description: \"\",\r\n    status: \"\",\r\n    image: \"\",\r\n    feedbacks: [\r\n      {\r\n        feedback_ID: \"\",\r\n        user_ID: \"\",\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        variant_ID: \"\",\r\n        variant_name: \"\",\r\n        image: \"\",\r\n        color: \"\",\r\n        size: \"\",\r\n        specificDetail: \"\",\r\n        quantity: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  //get item details from DB\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/items/specificitem/${item_id}`)\r\n      .then((response) => {\r\n        let data = response.data.items;\r\n        console.log(data);\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  const [Rating, setRating] = useState('')\r\n  const [Comment, setComment] = useState('')\r\n\r\n  //add feedback\r\n  const addFeedback = (Order_ID, Item_ID, Rating, Comment) => {\r\n    console.log(Item_ID, Order_ID);\r\n    axios.post(\"http://localhost:5000/orders/feedback\", {Order_ID: Order_ID, Item_ID: Item_ID, Rating: Rating, Comment: Comment })\r\n      .then((Response) => {\r\n        toast({\r\n          position: \"bottom-right\",\r\n          description: \"Feedback Submitted Successfully\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        toast({\r\n          position: \"bottom-right\",\r\n          description: \"Internal Server Error. Try again later\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        })\r\n      });\r\n\r\n  }\r\n\r\n  const onSubmit = (e)=>{\r\n    e.preventDefault()\r\n\r\n    if(!Rating || !Comment){\r\n        alert('Empty Field')\r\n        return\r\n    }\r\n    \r\n    addFeedback(order_id, item_id, Rating, Comment)\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb=\"20px\">\r\n        <SearchBar text=\"I'm shopping for\" />\r\n      </Center>\r\n      <SimpleGrid\r\n        columns={2}\r\n        spacing={5}\r\n        minChildWidth=\"400px\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n      >\r\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\r\n          <Image\r\n            src={`data:image/png;base64,${arrayBufferToBinaryString(\r\n              data.image ? data.image.data : null\r\n            )}`}\r\n            w=\"auto\"\r\n            h=\"auto\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            Submit your feedback...\r\n          </Heading>\r\n\r\n          <Text fontSize=\"6xl\">{data.item_name}</Text>\r\n\r\n          <Badge variant=\"outline\" colorScheme=\"yellow\" fontSize='lg'>\r\n            {data.category}\r\n          </Badge>\r\n          <form onSubmit={onSubmit}>\r\n            <Box d=\"flex\" mt=\"10\" alignItems=\"center\">\r\n              {Array(5)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n                  <StarIcon\r\n                    key={i}\r\n                    color={i < Rating ? \"cyan.500\" : \"cyan.100\"}\r\n                    onClick={() => setRating(i + 1)}\r\n                    boxSize=\"50px\"\r\n                    cursor=\"pointer\"\r\n                  />\r\n                ))}\r\n            </Box>\r\n\r\n            <Textarea mt=\"30px\" placeholder=\"Type your comment here...\" value={Comment} onChange={(e)=>setComment(e.target.value)}/>\r\n            <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n              <Button\r\n                loadingText=\"Submitting\"\r\n                type=\"submit\"\r\n                rightIcon={<ArrowForwardIcon />}\r\n                colorScheme=\"teal\"\r\n                variant=\"outline\"\r\n              >\r\n                Leave Feedback\r\n              </Button>\r\n            </Stack>\r\n          </form>\r\n        </Box>\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FeedbackPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\AwaitingShipment.js",["387","388","389","390"],"F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\SignIn.js",["391","392","393"],"import React, { useEffect } from \"react\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport SearchBarHome from \"../../components/SearchBarHome\";\r\nimport LogIn from \"../../components/SignIn/LogIn\";\r\nimport service from \"../../API_Service/checkLogin\";\r\nimport Axios from \"axios\";\r\n\r\nfunction SignIn(props) {\r\n\r\n  // const [isAuthorized, setIsAuthorized] = useState(false);\r\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // const [LoggedIn, setLoggedIn] = useState(false);\r\n  // checkAuthorization(response => {\r\n  //   setIsAuthorized(response);\r\n  // })\r\n  // checkAuthentication(response => {\r\n  //   setIsAuthenticated(response);\r\n  // })\r\n\r\n  // if (isAuthorized === isAuthenticated) {\r\n  //   setLoggedIn(true);\r\n  // } else {\r\n  //   setLoggedIn(false);\r\n  // }\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <SearchBarHome />\r\n\r\n      <LogIn setSignInClicked={props.setSignInClicked}/>\r\n      <BottomItems />\r\n      <Footer />\r\n      <BottomFooter shopName=\"Electrica\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\Seller\\SellerHome.js",["394","395","396","397","398","399"],"F:\\DB_Project\\Front-end-react\\src\\pages\\SellerAllOrders.js",["400","401"],"import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useState,useEffect } from \"react\";\r\n  import axios from \"axios\";\r\n  import Deliverycard from \"../components/AllOrdersCard\";\r\n  import SearchBar from \"../components/SearchBar\";\r\n\r\n  \r\n  function AwaitingDelivery() {\r\n    \r\n    var [orderlist, setorderlist] = useState([{}])\r\n  \r\n\r\n\r\n  \r\n    useEffect(() => {\r\n      axios\r\n        .get(`http://localhost:5000/orders/`)\r\n        .then((response) => {\r\n          console.log(response.data.orders)\r\n          setorderlist(response.data.orders)\r\n        });\r\n  \r\n    }, []);\r\n   \r\n  \r\n    const searchBarText = `Search in All Orders`;\r\n    const HandleChange = (event) => {\r\n        var value = event.target.value;\r\n        axios\r\n        .post(\"http://localhost:5000/orders\",{\r\n          \"order_id\":`${value}`\r\n        })\r\n        .then((response) => {\r\n          let data = response.data.orders;\r\n          setorderlist(data);\r\n        });\r\n      \r\n      };\r\n\r\n  \r\n    return (\r\n      <Box\r\n        pt=\"150px\"\r\n        pl={{ base: \"10px\", sm: \"100px\" }}\r\n        pr={{ base: \"10px\", sm: \"100px\" }}\r\n      >\r\n        <Center mb='10px'>\r\n          <SearchBar onChange={HandleChange} text={searchBarText} />\r\n        </Center>\r\n        <Grid\r\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\r\n        >\r\n          <GridItem  bg=\"gray.300\" p=\"10px\">\r\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\r\n              All Orders\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem \r\n          \r\n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\r\n            \r\n            \r\n              {Array(orderlist.length)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n                  <Deliverycard \r\n                    \r\n\r\n                    Order_ID={orderlist[i].order_id}\r\n                    Variant_Name= {orderlist[i].variant_name}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].price*orderlist[i].quantity}\r\n                    Date_paid={orderlist[i].ordered_date}\r\n                    Date_shipped={orderlist[i].ordered_date}\r\n                    Quantity={orderlist[i].quantity}\r\n                    F_name= {orderlist[i].first_name}\r\n                    L_name= {orderlist[i].last_name}\r\n                    Order_status={orderlist[i].order_status}\r\n                    \r\n                  />\r\n                ))}\r\n           \r\n          </GridItem>\r\n          \r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export default AwaitingDelivery;\r\n  ","F:\\DB_Project\\Front-end-react\\src\\pages\\SellerDashboard.js",["402"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n    Input,\r\n    Stack,\r\n    useToast\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { useState, useEffect } from 'react';\r\nimport Axios from \"axios\";\r\nimport { Button } from \"@chakra-ui/react\"\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n} from \"@chakra-ui/react\"\r\nimport { Avatar } from \"@chakra-ui/react\"\r\n\r\n\r\nfunction SellerDashboard() {\r\n    const [user_id, setUserID] = useState('')\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const [phone_number, setTelephone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const [oldpwd, setOldPwd] = useState('')\r\n    const [newpwd, setNewPwd] = useState('')\r\n    const [confnewpwd, setConfNewPwd] = useState('')\r\n\r\n    const toast = useToast()\r\n\r\n/**################################################################\r\n                          Get All Seller Details\r\n ################################################################# */\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/seller/changeSellerDetails\")\r\n            .then((Response) => {\r\n                console.log(Response.data);\r\n                setFirstName(Response.data.user[0].first_name);\r\n                setLastName(Response.data.user[0].last_name);\r\n                setTelephone(Response.data.user[0].phone_number);\r\n                setEmail(Response.data.user[0].email);\r\n                setUserID(Response.data.user[0].user_id);\r\n\r\n            })\r\n            .catch((err) => {\r\n                toast({\r\n                    position: \"bottom-right\",\r\n                    description: \"Error loading data\",\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n            });\r\n    }, [])\r\n\r\n/**################################################################\r\n                Put new sellerdetails to the database\r\n ################################################################# */\r\n \r\n    const onSubmitdetail = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (phone_number.length !== 10) {\r\n            alert(\"Invalid Mobile Number\")\r\n            return\r\n        }\r\n\r\n        Axios.put('http://localhost:5000/seller/changeSellerDetails', { user_id, first_name, last_name, phone_number, email })\r\n            .then((Response) => {\r\n                toast({\r\n                    position: \"bottom-right\",\r\n                    description: \"Successfully Updated the Personal Data\",\r\n                    status: \"success\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                toast({\r\n                    position: \"bottom-right\",\r\n                    description: \"Internal Server Error. Try again later\",\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n            });\r\n    }\r\n\r\n/**################################################################\r\n                    Put new password to the database\r\n ################################################################# */\r\n \r\n    const onSubmitpassword = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newpwd !== confnewpwd) {\r\n            alert(\"password doesn't match\");\r\n            return\r\n        }\r\n        else {\r\n            Axios.put(\"http://localhost:5000/seller/changeSellerPassword\", { newpwd: newpwd, oldpwd: oldpwd })\r\n                .then((Response) => {\r\n                    toast({\r\n                        position: \"bottom-right\",\r\n                        description: \"Password update successful\",\r\n                        status: \"success\",\r\n                        duration: 5000,\r\n                        isClosable: true,\r\n                    })\r\n                    setOldPwd('')\r\n                    setNewPwd('')\r\n                    setConfNewPwd('')\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"error\", err)\r\n                    toast({\r\n                        position: \"bottom-right\",\r\n                        description: \"Wrong Password\",\r\n                        status: \"error\",\r\n                        duration: 5000,\r\n                        isClosable: true,\r\n                    })\r\n                    setOldPwd('')\r\n                    setNewPwd('')\r\n                    setConfNewPwd('')\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            pt=\"150px\"\r\n            align='center'\r\n            pl={{ base: \"10px\", sm: \"100px\" }}\r\n            pr={{ base: \"10px\", sm: \"100px\" }}\r\n        >\r\n\r\n            <Grid\r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                gap={0}\r\n                textAlign='center'\r\n                pb='200px'\r\n                w='800px'\r\n            >\r\n                <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\r\n                    <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\" w='300px'>\r\n                        <Avatar size=\"3xl\" name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" marginTop='90px' />\r\n                    </Heading>\r\n                    <VStack>\r\n\r\n                    </VStack>\r\n                </GridItem>\r\n                <GridItem\r\n                    rowSpan={1}\r\n                    colSpan={4}\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    p=\"20px\"\r\n                >\r\n                    <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\r\n                        Update Seller Details\r\n            </Heading>\r\n                    <form onSubmit={onSubmitdetail} >\r\n                        <FormControl id=\"details\" mt='30px'>\r\n                            <FormLabel>Email address</FormLabel>\r\n                            <Input type=\"email\"\r\n                                placeholder='Email Address'\r\n                                defaultValue={email}\r\n                                name='emailaddress'\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required />\r\n                            <FormLabel mt='10px'>First Name</FormLabel>\r\n                            <Input type='text'\r\n                                placeholder='First Name'\r\n                                defaultValue={first_name}\r\n                                name='firstname'\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                                required />\r\n                            <FormLabel mt='10px'>Last Name</FormLabel>\r\n                            <Input type='text'\r\n                                placeholder='Last Name'\r\n                                defaultValue={last_name}\r\n                                name='lastname'\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                                required />\r\n                            <FormLabel>Phone Number</FormLabel>\r\n                            <Input type=\"number\"\r\n                                placeholder='Phone Number'\r\n                                defaultValue={phone_number}\r\n                                name='emailaddress'\r\n                                onChange={(e) => setTelephone(e.target.value)}\r\n                                required />\r\n\r\n                            <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n                                <Button\r\n                                    loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\r\n                                    Update\r\n                                </Button>\r\n                            </Stack>\r\n                        </FormControl>\r\n                    </form>\r\n                    <form onSubmit={onSubmitpassword} >\r\n                        <FormControl id=\"emailpassword\" mt='30px'>\r\n\r\n\r\n                            <FormLabel>Old Password</FormLabel>\r\n                            <Input\r\n                                placeholder='Old Password'\r\n                                name='oldpword'\r\n                                type='password'\r\n                                onChange={(e) => setOldPwd(e.target.value)}\r\n                                required />\r\n                            <FormLabel>New Password</FormLabel>\r\n                            <Input\r\n                                placeholder='New Password'\r\n                                name='newpword'\r\n                                type='password'\r\n                                onChange={(e) => setNewPwd(e.target.value)}\r\n                                required\r\n                            />\r\n                            <FormLabel>Confirm New Password</FormLabel>\r\n                            <Input\r\n                                placeholder='Confirm New Password'\r\n                                name='confnewpword'\r\n                                type='password'\r\n                                onChange={(e) => setConfNewPwd(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n                                <Button\r\n                                    loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\r\n                                    Update\r\n                                </Button>\r\n                            </Stack>\r\n                        </FormControl>\r\n                    </form>\r\n                </GridItem>\r\n            </Grid>\r\n        </Box>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SellerDashboard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePasswordForm.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\CustomerDashSideBar.js",["403","404","405","406","407","408"],"F:\\DB_Project\\Front-end-react\\src\\components\\SearchBar.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ProductCard.js",["409","410"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Badge,\r\n  Link,\r\n  ReactRouterLink\r\n} from \"@chakra-ui/react\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nfunction ProductCard(props) {\r\n  return (\r\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\r\n      <Image\r\n        src={`data:image/png;base64,${arrayBufferToBinaryString(props.imageUrl ? props.imageUrl.data : '')}`}\r\n        alt=\"product image\"\r\n        w=\"200px\"\r\n        h=\"200px\"\r\n      />\r\n      <Box p=\"6\">\r\n        <Badge\r\n          borderRadius=\"full\"\r\n          px=\"2\"\r\n          colorScheme=\"yellow\"\r\n          variant=\"outline\"\r\n          fontSize=\"9px\"\r\n        >\r\n          {props.category}\r\n        </Badge>\r\n        <Box\r\n          fontWeight=\"semibold\"\r\n          as=\"h4\"\r\n          lineHeight=\"tight\"\r\n          fontSize=\"xl\"\r\n          isTruncated\r\n        >\r\n          <Link href={`/productpage/${props.item_id}`}>{props.title}</Link>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Text color=\"gray.600\" fontSize=\"3xl\">\r\n            Rs. {props.price}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\r\n          <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\r\n          >\r\n            {props.status}\r\n          </Badge>\r\n          <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n            ml=\"2\"\r\n          >\r\n            {props.orders} Orders\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n          {Array(5)\r\n            .fill(\"\")\r\n            .map((_, i) => (\r\n              <StarIcon\r\n                key={i}\r\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\r\n              />\r\n            ))}\r\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n            {props.reviews} reviews\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ReviewCountPreview.js",["411","412","413","414","415","416","417","418"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n  VStack,\r\n  Progress,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction ReviewCountPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  const total_reviews = props.feedbacks.length;\r\n\r\n  var s5 = 0;\r\n  var s4 = 0;\r\n  var s3 = 0;\r\n  var s2 = 0;\r\n  var s1 = 0;\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rate === 5) {\r\n      s5 = s5 + 1;\r\n    } else if (props.feedbacks[i].rate === 4) {\r\n      s4 = s4 + 1;\r\n    } else if (props.feedbacks[i].rate === 3) {\r\n      s3 = s3 + 1;\r\n    } else if (props.feedbacks[i].rate === 2) {\r\n      s2 = s2 + 1;\r\n    } else if (props.feedbacks[i].rate === 1) {\r\n      s1 = s1 + 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          5 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s5} reviews\r\n        </Text>\r\n        <Progress value={(s5 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          4 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s4} reviews\r\n        </Text>\r\n        <Progress value={(s4 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          3 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s3} reviews\r\n        </Text>\r\n        <Progress value={(s3 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          2 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s2} reviews\r\n        </Text>\r\n        <Progress value={(s2 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          1 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s1} reviews\r\n        </Text>\r\n        <Progress value={(s1 / total_reviews) * 100} />\r\n      </Box>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default ReviewCountPreview;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBarHome.js",["419","420"],"import { SearchIcon } from \"@chakra-ui/icons\";\r\nimport React from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  IconButton,\r\n  Box,\r\n  Flex,\r\n  Center,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction SearchBarHome(props) {\r\n  const {colorMode, toggleColorMode} = useColorMode();\r\n\r\n  return (\r\n    <Flex\r\n      marginTop=\"110px\"\r\n\r\n      borderBottom='5px solid #E8E8E8'\r\n      bg={colorMode === 'light' ? '#E8E8E8' : '#101522'}\r\n    >\r\n      <Box w=\"500px\" padding=\"15px\" marginLeft=\"30%\" >\r\n        <InputGroup bg='white' rounded='50px' border='blue'>\r\n          <InputRightElement >\r\n            <IconButton\r\n              colorScheme={colorMode === 'light' ? 'blue' : 'red'}\r\n              aria-label=\"Search database\"\r\n              icon={<SearchIcon  />}\r\n            />\r\n          </InputRightElement>\r\n\r\n          <Input\r\n            placeholder={props.text}\r\n            name=\"search\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </InputGroup>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SearchBarHome;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\BankCards.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\AddBankCard.js",["421"],"F:\\DB_Project\\Front-end-react\\src\\components\\OrderTiles.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ShopNow.js",["422","423","424","425","426"],"F:\\DB_Project\\Front-end-react\\src\\components\\Slider\\ImageSlider.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomItems.js",["427","428","429","430"],"F:\\DB_Project\\Front-end-react\\src\\components\\Slider\\SliderData.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\Pricing\\Pricing.js",["431","432","433","434","435","436","437","438","439","440","441","442","443","444"],"F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomFooter.js",["445"],"import React from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport {\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaYoutube,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  FooterContainer,\r\n  SocialMedia,\r\n  SocialMediaWrap,\r\n  SocialLogo,\r\n  SocialIcon,\r\n  WebsiteRights,\r\n  SocialIcons,\r\n  SocialIconLink,\r\n} from \"./BottomFooter.elements\";\r\n\r\nfunction BottomFooter(props) {\r\n  return (\r\n    <FooterContainer>\r\n      <SocialMedia>\r\n        <SocialMediaWrap>\r\n          <SocialLogo to=\"/\">\r\n            <SocialIcon />\r\n            {props.shopName}\r\n          </SocialLogo>\r\n          <WebsiteRights>Designed By University of Moratuwa | All Rights Resserved, © 2021</WebsiteRights>\r\n          <SocialIcons>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Facebook\">\r\n              <FaFacebook />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Instagram\">\r\n              <FaInstagram />\r\n            </SocialIconLink>\r\n            <SocialIconLink\r\n              href={\r\n                \"//www.youtube.com/\"\r\n              }\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              aria-label=\"Youtube\"\r\n            >\r\n              <FaYoutube />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Twitter\">\r\n              <FaTwitter />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"LinkedIn\">\r\n              <FaLinkedin />\r\n            </SocialIconLink>\r\n          </SocialIcons>\r\n        </SocialMediaWrap>\r\n      </SocialMedia>\r\n    </FooterContainer>\r\n  );\r\n}\r\n\r\nexport default BottomFooter;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePersonalDetForm.js",["446"],"F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\Footer.js",["447","448","449","450","451","452","453","454","455"],"import React from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport {\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaYoutube,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  FooterContainer,\r\n  FooterSubscription,\r\n  FooterSubText,\r\n  FooterSubHeading,\r\n  Form,\r\n  FormInput,\r\n  FooterLinksContainer,\r\n  FooterLinksWrapper,\r\n  FooterLinkItems,\r\n  FooterLinkTitle,\r\n  FooterLink,\r\n} from \"./Footer.elements\";\r\nimport BottomFooter from \"./BottomFooter\";\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <FooterContainer>\r\n        <FooterSubscription>\r\n          <FooterSubHeading>\r\n            Join us and have the best items at best prices!\r\n          </FooterSubHeading>\r\n          <FooterSubText>Start shopping today and experience the premium shopping</FooterSubText>\r\n          \r\n        </FooterSubscription>\r\n        <FooterLinksContainer>\r\n          <FooterLinksWrapper>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>About Us</FooterLinkTitle>\r\n              <FooterLink to=\"/sign-up\">How it works</FooterLink>\r\n              <FooterLink to=\"/\">Testimonials</FooterLink>\r\n              <FooterLink to=\"/\">Careers</FooterLink>\r\n              <FooterLink to=\"/\">Investors</FooterLink>\r\n              <FooterLink to=\"/\">Terms of Service</FooterLink>\r\n            </FooterLinkItems>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Contact Us</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Contact</FooterLink>\r\n              <FooterLink to=\"/\">Support</FooterLink>\r\n              <FooterLink to=\"/\">Destinations</FooterLink>\r\n              <FooterLink to=\"/\">Sponsorships</FooterLink>\r\n            </FooterLinkItems>\r\n          </FooterLinksWrapper>\r\n          <FooterLinksWrapper>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Videos</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Submit Video</FooterLink>\r\n              <FooterLink to=\"/\">Ambassadors</FooterLink>\r\n              <FooterLink to=\"/\">Agency</FooterLink>\r\n              <FooterLink to=\"/\">Influencer</FooterLink>\r\n            </FooterLinkItems>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Social Media</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Instagram</FooterLink>\r\n              <FooterLink to=\"/\">Facebook</FooterLink>\r\n              <FooterLink to=\"/\">Youtube</FooterLink>\r\n              <FooterLink to=\"/\">Twitter</FooterLink>\r\n            </FooterLinkItems>\r\n          </FooterLinksWrapper>\r\n        </FooterLinksContainer>\r\n      </FooterContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\CategorizedReviewPreview.js",["456"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction CategorizedReviewPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  var stars = (rating) => {\r\n    return Array(5)\r\n      .fill(\"\")\r\n      .map((_, j) => (\r\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\r\n      ));\r\n  };\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rate === props.rating || props.rating === 'all') {\r\n      reviews.push(\r\n        <Box mb='10px'>\r\n          <HStack>\r\n            <Avatar\r\n              name={props.feedbacks[i].first_name +' ' +props.feedbacks[i].last_name}\r\n              src={props.feedbacks[i].customer_dp}\r\n            />\r\n            <Box\r\n              w=\"100%\"\r\n              borderWidth=\"2px\"\r\n              borderRadius=\"lg\"\r\n              p=\"10px\"\r\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\r\n            >\r\n              <Heading as=\"h5\" size=\"sm\">\r\n                {props.feedbacks[i].first_name +' ' +props.feedbacks[i].last_name}\r\n              </Heading>\r\n              <Text>{props.feedbacks[i].comment}</Text>\r\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n                {stars(props.feedbacks[i].rate)}\r\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n                  {props.feedbacks[i].rate}/5\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </HStack>\r\n          <Replys replys={[]} />\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (reviews.length === 0) {\r\n    reviews.push(<Text>No reviews</Text>);\r\n  }\r\n\r\n  return <>{reviews}</>;\r\n}\r\n\r\nexport default CategorizedReviewPreview;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\Register.js",["457","458"],"import React, { useState } from 'react';\r\nimport './Register.css';\r\nimport FormSignup from './FormSignup';\r\nimport FormSuccess from './FormSuccess';\r\nimport Axios from \"axios\";\r\nimport useForm from \"./FormSignup\";\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n    background-size: cover !important; <Redirect to='/' />*/}\r\n      <div className='form-container'>\r\n\r\n        <div className='form-content-left'>\r\n          <img className='form-img' src='img/svg-2.svg' alt='Security' />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormSignup submitForm={submitForm} />\r\n        ) : (\r\n          \r\n          <FormSuccess />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\AllOrdersCard.js",["459","460","461","462","463","464","465","466","467","468"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\n\r\nfunction ShipmentCard(props) {\r\n  return (\r\n \r\n    <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box  fontWeight=\"bold\"><Text  color=\"red.600\"   fontSize=\"lg\">\r\n            <a href={`/orderview/${props.Order_ID}`}>{props.Order_ID}</a>\r\n          </Text></Box>\r\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\r\n            {props.F_name} {props.L_name}\r\n          </Text></Box>\r\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\r\n            {props.item_name} \r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{props.Quantity}</b>\r\n          </Text></Box>\r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\r\n        Variant: <b>{props.Variant_Name} </b>\r\n          </Text></Box>\r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {props.payment}\r\n          </Text>\r\n\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n            Paid On: {props.Date_paid}\r\n          </Text>\r\n        <Box> <Text color=\"gray.600\" fontSize=\"lg\">\r\n        {props.Order_status===\"shipped\" ?'Shipped On :' + props.Date_shipped: 'Not Yet Shipped'+\" | Status :\" +props.Order_status}\r\n        </Text></Box> \r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ShipmentCard;\r\n","F:\\DB_Project\\Front-end-react\\src\\API_Service\\checkLogin.js",["469","470"],"F:\\DB_Project\\Front-end-react\\src\\components\\ShipmentCard.js",["471","472","473","474","475","476","477","478","479","480","481"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n  Button,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\n\r\nfunction ShipmentCard(props) {\r\n \r\n  \r\n \r\n \r\n  return (\r\n \r\n    <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box  fontWeight=\"bold\"><Text  color=\"red.600\"   fontSize=\"lg\">\r\n            <a href={`/orderview/${props.Order_ID}`}>{props.Order_ID}</a>\r\n          </Text></Box>\r\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\r\n            {props.F_name} {props.L_name}\r\n          </Text></Box>\r\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\r\n            {props.item_name} \r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{props.Quantity}</b>\r\n          </Text></Box>\r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\r\n        Variant: <b>{props.Variant_Name} </b>\r\n          </Text></Box>\r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {props.payment}\r\n          </Text>\r\n          <Button  mt=\"10px\" padding=\"5px\" horizontalAlign=\"true\" textColor=\"Black\" bg=\"blue.100\"  _hover={{ bg: \"yellow.300\" }} onClick={()=>props.MarkasShipped(props.Order_ID)} >Dispatch</Button>\r\n\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n            Paid On: {props.Date_paid}\r\n          </Text>\r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ShipmentCard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Seller\\Middle.js",["482","483","484","485","486","487","488","489","490","491","492","493"],"F:\\DB_Project\\Front-end-react\\src\\components\\Seller\\Card.js",["494","495"],"F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\LogIn.js",["496","497","498"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./LogIn.css\";\r\nimport FormLogIn from \"./FormLogIn\";\r\nimport FormSuccess from \"./FormSuccess\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction LogIn(props) {\r\n\r\n  \r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  return (\r\n    <>\r\n      {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n    background-size: cover !important; <Redirect to='/' />*/}\r\n      <div className=\"login-container\">\r\n        <div className=\"login-content-left\">\r\n          <img className=\"login-img\" src=\"img/svg-2.svg\" alt=\"Security\" />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormLogIn submitForm={submitForm} setSignInClicked={props.setSignInClicked}/>\r\n        ) : (\r\n          <Redirect to='/' />\r\n        )}\r\n        {/* <FormLogIn submitForm={submitForm} /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Replys.js",["499"],"import {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nfunction Replys(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const dp = \"\";\r\n\r\n  var replys = [];\r\n  for (var i = 0; i < props.replys.length; i++) {\r\n    replys.push(\r\n      <HStack spacing=\"10px\" w=\"100%\">\r\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\r\n        <Box\r\n          w=\"100%\"\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          p=\"10px\"\r\n          mt=\"20px\"\r\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\r\n        >\r\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\r\n          <Text>{props.replys[i]}</Text>\r\n        </Box>\r\n      </HStack>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box ml=\"100px\" mt='10px'>\r\n      <VStack w=\"100%\">{replys}</VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Replys;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\BankCard.js",["500","501","502","503","504","505","506","507"],"F:\\DB_Project\\Front-end-react\\src\\components\\OrderTile.js",["508","509","510","511","512","513"],"F:\\DB_Project\\Front-end-react\\src\\components\\Deliverycard.js",["514","515","516","517","518","519","520","521","522","523"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n  Button\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Deliverycard(props) {\r\n  return (\r\n \r\n    <Box maxW=\"parent\"  _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }}  borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n       \r\n        <Box  fontWeight=\"bold\"><Text  color=\"red.600\"   fontSize=\"lg\">\r\n            <a href={`/orderview/${props.Order_ID}`}>{props.Order_ID}</a>\r\n          </Text></Box>\r\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\r\n            {props.F_name} {props.L_name}\r\n          </Text></Box>\r\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\r\n            {props.item_name} \r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{props.Quantity}</b>\r\n          </Text></Box>\r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\r\n        Variant: <b>{props.Variant_Name} </b>\r\n          </Text></Box>\r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {props.payment}\r\n          </Text>\r\n\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   >\r\n            <Box>\r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n           Paid On: {props.Date_paid}\r\n          </Text></Box> \r\n          <Box> <Text color=\"gray.600\" fontSize=\"lg\">\r\n           Shipped On: {props.Date_shipped}\r\n          </Text></Box> \r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Deliverycard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomFooter.elements.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\Footer.elements.js",["524"],"import styled from 'styled-components';\r\nimport { FaMagento } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const FooterContainer = styled.div`\r\n  background-color: #E8E8E8;\r\n  padding: 4rem 0 2rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterSubscription = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  margin-bottom: 24px;\r\n  padding: 24px;\r\n  color: #fff;\r\n`;\r\n\r\nexport const FooterSubHeading = styled.p`\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\r\n    'Lucida Sans', Arial, sans-serif;\r\n  margin-bottom: 24px;\r\n  font-size: 24px;\r\n  color: black;\r\n`;\r\n\r\nexport const FooterSubText = styled.p`\r\n  margin-bottom: 24px;\r\n  font-size: 20px;\r\n  color: black;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    flex-direction: column;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  padding: 10px 20px;\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 16px;\r\n  border: 1px solid #fff;\r\n\r\n  &::placeholder {\r\n    color: #242424;\r\n  }\r\n\r\n  @media screen and (max-width: 820px) {\r\n    width: 100%;\r\n    margin: 0 0 16px 0;\r\n  }\r\n`;\r\n\r\nexport const FooterLinksContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  display: flex;\r\n  justify-content: center;\r\n  color: black;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    padding-top: 32px;\r\n  }\r\n`;\r\n\r\nexport const FooterLinksWrapper = styled.div`\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const FooterLinkItems = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin: 16px;\r\n  text-align: left;\r\n  width: 160px;\r\n  box-sizing: border-box;\r\n  color: black;\r\n\r\n  @media screen and (max-width: 420px) {\r\n    margin: 0;\r\n    padding: 10px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const FooterLinkTitle = styled.h2`\r\n  margin-bottom: 16px;\r\n  font-size: 20px;\r\n  \r\n`;\r\n\r\nexport const FooterLink = styled(Link)`\r\n  color: #fff;\r\n  text-decoration: none;\r\n  margin-bottom: 0.5rem;\r\n  color: black;\r\n  &:hover {\r\n    color: #0467fb;\r\n    transition: 0.3s ease-out;\r\n  }\r\n`;\r\n\r\n","F:\\DB_Project\\Front-end-react\\src\\globalStyles.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\Pricing\\Pricing.elements.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\FormLogIn.js",["525","526","527","528","529"],"import React, { useEffect } from \"react\";\r\nimport validate from \"./validateInfo\";\r\nimport useForm from \"./useForm\";\r\nimport \"./LogIn.css\";\r\n// Promise based HTTP client for the node.js\r\nimport Axios from \"axios\";\r\nimport { Badge, Box, Button, Center } from \"@chakra-ui/react\";\r\n\r\nfunction FormLogIn(props) {\r\n  const { handleChange, handleSubmit, values, errors, backEndErrors } = useForm(\r\n    props.submitForm,\r\n    validate,\r\n    props.setSignInClicked\r\n  );\r\n\r\n  return (\r\n    <div className=\"login-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\r\n        <h1>\r\n          Welcome!!!\r\n          <br />\r\n          Sign in to continue shopping!\r\n          <br />\r\n        </h1>\r\n        {backEndErrors == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box w=\"80%\" h=\"40px\" bg=\"red.500\" borderRadius=\"5px\">\r\n            <Center>\r\n              <Badge variant=\"solid\" m=\"2%\" colorScheme=\"red\">\r\n                {backEndErrors}\r\n              </Badge>\r\n            </Center>\r\n          </Box>\r\n        )}\r\n        <div className=\"login-inputs\">\r\n          <label className=\"login-label\">Email</label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"login-inputs\">\r\n          <label className=\"login-label\">Password</label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        {backEndErrors == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box h='10%' mt='20px'>\r\n            <Badge variant=\"outline\" colorScheme=\"red\">\r\n              Sign In Failed\r\n            </Badge>\r\n          </Box>\r\n        )}\r\n        <button className=\"login-input-btn\" type=\"submit\">\r\n          Sign In\r\n        </button>\r\n        <span className=\"login-input-login\">\r\n          Don't have an account? Sign up <a href=\"signup\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormLogIn;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\FormSuccess.js",["530","531"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Button, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./Register.css\";\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <h1 className=\"form-success\">\r\n        You have successfully registered!\r\n        <br />\r\n        Now Log In{\" \"}\r\n        <a href=\"signin\">\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"red\"\r\n            variant=\"outline\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </a>\r\n      </h1>\r\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\FormSignup.js",["532","533"],"import React from \"react\";\r\nimport validate from \"./validateInfo\";\r\nimport useForm from \"./useForm\";\r\nimport \"./Register.css\";\r\n// Promise based HTTP client for the node.js\r\nimport Axios from \"axios\";\r\nimport { Badge, Box, Center } from \"@chakra-ui/react\";\r\n\r\nconst FormSignup = ({ submitForm }) => {\r\n\r\n  const { handleChange, handleSubmit, values, errors, backEndErrors } = useForm(\r\n    submitForm,\r\n    validate\r\n  );\r\n  \r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\r\n        <h1>\r\n          Get started and have a premium shopping experience!\r\n          <br />\r\n          Create your account by filling out the information below.\r\n        </h1>\r\n        {backEndErrors.error === \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box w=\"80%\" h=\"40px\" bg=\"red.500\" borderRadius=\"5px\">\r\n            <Center>\r\n              <Badge variant=\"solid\" m=\"2%\" colorScheme=\"red\">\r\n                {backEndErrors.error}\r\n              </Badge>\r\n            </Center>\r\n          </Box>\r\n        )}\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">First Name</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            placeholder=\"Enter your first name\"\r\n            value={values.firstname}\r\n            onChange={handleChange}\r\n          />\r\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\r\n          {errors.firstname && <p>{errors.firstname}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Last Name</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder=\"Enter your last name\"\r\n            value={values.lastname}\r\n            onChange={handleChange}\r\n          />\r\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\r\n          {errors.lastname && <p>{errors.lastname}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Phone Number</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"tel\"\r\n            name=\"phonenumber\"\r\n            placeholder=\"Enter your phone number\"\r\n            value={values.phonenumber}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.phonenumber && <p>{errors.phonenumber}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Email</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Confirm Password</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            placeholder=\"Confirm your password\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        {backEndErrors.error == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box  mt='20px'>\r\n            <Badge variant=\"outline\" colorScheme=\"red\">\r\n              Sign Up Failed\r\n            </Badge>\r\n          </Box>\r\n        )}\r\n        <button className=\"form-input-btn\" type=\"submit\" >\r\n          Sign up\r\n        </button>\r\n        <span className=\"form-input-login\">\r\n          Already have an account? Login <a href=\"signin\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignup;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\FormSuccess.js",["534","535"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Button, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./LogIn.css\";\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <h1 className=\"form-success\">\r\n        You have successfully registered!\r\n        <br />\r\n        Now Log In{\" \"}\r\n        <a href=\"signin\">\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"red\"\r\n            variant=\"outline\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </a>\r\n      </h1>\r\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\OrderItemTile.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\validateInfo.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\useForm.js",["536"],"import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n//custom hook\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    phonenumber: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [backEndErrors, setBackEndErrors] = useState({registered: false, error: \"\"});\r\n  const firstName = values.firstname;\r\n  const lastName = values.lastname;\r\n  const email = values.email;\r\n  const phoneNumber = values.phonenumber;\r\n  const password = values.password;\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      Axios.post(\"http://localhost:5000/customer/register\", {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        phoneNumber: phoneNumber,\r\n        password: password,\r\n      }).then((response) => {\r\n        if (!response.data.registered) {\r\n          console.log(response.data.message);\r\n          setBackEndErrors({registered: false, error: response.data.message});\r\n        } else {\r\n          setBackEndErrors({registered: true, error: response.data.message});\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //If there are no errors and submitted it wil call submitForm function(callback())\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      if (!!backEndErrors.registered) {\r\n        callback();\r\n      }\r\n    }\r\n  }, [errors, backEndErrors.registered]);\r\n\r\n  return { handleChange, handleSubmit, values, errors, backEndErrors };\r\n};\r\n\r\nexport default useForm;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\validateInfo.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\useForm.js",["537","538"],"F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddressses.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\AddAddress.js",["539"],"import { useState } from 'react';\r\nimport{\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    useToast\r\n\r\n} from \"@chakra-ui/react\";\r\n\r\nconst AddAddress = ({addAddress,trigger}) => {\r\n    const [first_Name,setFirstName] = useState('')\r\n    const [last_Name,setLastName] = useState('')\r\n    const [street,setStreet] = useState('')\r\n    const [city,setCity] = useState('')\r\n    const [state,setState] = useState('')\r\n    const [zip,setZip] = useState('')\r\n\r\n    const toast = useToast()\r\n\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!first_Name || !last_Name || !street || !city || !state || !zip){\r\n            alert('Empty Field')\r\n            return\r\n        }\r\n        \r\n        addAddress({first_Name,last_Name,street,city,state,zip})\r\n\r\n        setFirstName('')\r\n        setLastName('')\r\n        setStreet('')\r\n        setCity('')\r\n        setState('')\r\n        setZip('')\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={onSubmit} >\r\n            <FormControl>\r\n                <FormLabel>First Name</FormLabel>\r\n                <Input type=\"text\" placeholder='Name' value={first_Name} onChange={(e)=>setFirstName(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Last Name</FormLabel>\r\n                <Input type=\"text\" placeholder='Telephone' value={last_Name} onChange={(e)=>setLastName(e.target.value)}  />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Street</FormLabel>\r\n                <Input type=\"text\" placeholder='Street' value={street} onChange={(e)=>setStreet(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>City</FormLabel>\r\n                <Input type=\"text\" placeholder='City' value={city} onChange={(e)=>setCity(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>State</FormLabel>\r\n                <Input type=\"text\" placeholder='State' value={state} onChange={(e)=>setState(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Zip</FormLabel>\r\n                <Input type=\"text\" placeholder='Zip' value={zip} onChange={(e)=>setZip(e.target.value)} />\r\n            </FormControl>\r\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Address' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddAddress\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddress.js",["540","541","542","543","544"],"F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerStats.js",["545","546","547","548","549"],"F:\\DB_Project\\Front-end-react\\src\\pages\\ChartForSpecificProduct.js",["550","551"],"F:\\DB_Project\\Front-end-react\\src\\pages\\QuarterReport.js",["552","553","554","555","556","557","558","559","560","561","562"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,\r\n    Flex,\r\n    Spacer,\r\n    useColorMode,\r\n    useToast,\r\n    FormControl,\r\n    Input,\r\n    Table,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableCaption,\r\n    Select\r\n\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst TableItems  = ({tableDetails})=>{\r\n    return (\r\n        <>\r\n           {    \r\n\r\n               tableDetails.map((detail)=>(\r\n                   <TableItem key={detail.item_id} detail={detail} > </TableItem>\r\n                   )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst TableItem = ({detail}) =>{\r\n    return(\r\n        <Tbody>                            \r\n            <Tr>\r\n                <Td>{detail.item_id}</Td>\r\n                <Td>{detail.item_name}</Td>\r\n                <Td>{detail.firstQT}</Td>\r\n                <Td>{detail.secondQT}</Td>\r\n                <Td>{detail.thirdQT}</Td>\r\n                <Td>{detail.fourthQT}</Td>\r\n            </Tr>                             \r\n        </Tbody>   \r\n    )\r\n}\r\n\r\n\r\n\r\nconst QuarterReport = () => {\r\n    const toast = useToast()\r\n  \r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const [year, setYear] = useState([]);\r\n    const [tableDetails, setTableDetails] = useState([]);\r\n    const [tableTotal,setTableTotal] = useState([]); \r\n\r\n    const onSubmit  = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(year.length===0){\r\n            alert('Select an year')\r\n            return\r\n        }\r\n\r\n        Axios.post(\"http://localhost:5000/orders/generatequaterreport\",{year:year})\r\n        .then((Response)=>{\r\n            console.log(Response.data)\r\n            refractorResponse(Response.data) \r\n            calculateTotal(Response.data)\r\n        })\r\n\r\n    }\r\n\r\n    const calculateTotal = (data)=>{\r\n        let q1=0\r\n        let q2=0\r\n        let q3=0\r\n        let q4=0\r\n        for (var b=0;b<data.first_quart_det.length;b++){\r\n            q1+=parseFloat(data.first_quart_det[b].sales)\r\n        }\r\n        for (var b=0;b<data.second_quart_det.length;b++){\r\n            q2+=parseFloat(data.second_quart_det[b].sales)\r\n        }\r\n        for (var b=0;b<data.third_quart_det.length;b++){\r\n            q3+=parseFloat(data.third_quart_det[b].sales)\r\n        }\r\n        for (var b=0;b<data.fourth_quart_det.length;b++){\r\n            q4+=parseFloat(data.fourth_quart_det[b].sales)\r\n        }\r\n\r\n        q1 = parseFloat(q1.toFixed(2))\r\n        q2 = parseFloat(q2.toFixed(2))\r\n        q3 = parseFloat(q3.toFixed(2))\r\n        q4 = parseFloat(q4.toFixed(2))\r\n\r\n        setTableTotal({q1,q2,q3,q4})\r\n        console.log({q1,q2,q3,q4})\r\n    }\r\n\r\n    const refractorResponse= (data)=>{\r\n        let final = []\r\n        let all = data.all_items\r\n        for (var i=0;i<data.all_items.length;i++){\r\n            let obj={\r\n                item_id:data.all_items[i].item_id,\r\n                item_name:data.all_items[i].item_name,\r\n                firstQT:0,\r\n                secondQT:0,\r\n                thirdQT:0,\r\n                fourthQT:0\r\n            }\r\n\r\n            for (var a=0;a<data.first_quart_det.length;a++){\r\n                if(data.all_items[i].item_id===data.first_quart_det[a].item_id){\r\n                    obj.firstQT=parseFloat(data.first_quart_det[a].sales).toFixed(2)\r\n                }\r\n            }\r\n            for (var a=0;a<data.second_quart_det.length;a++){\r\n                if(data.all_items[i].item_id===data.second_quart_det[a].item_id){\r\n                    obj.secondQT=parseFloat(data.second_quart_det[a].sales).toFixed(2)\r\n                }\r\n            }\r\n            for (var a=0;a<data.third_quart_det.length;a++){\r\n                if(data.all_items[i].item_id===data.third_quart_det[a].item_id){\r\n                    obj.thirdQT=parseFloat(data.third_quart_det[a].sales).toFixed(2)\r\n                }\r\n            }\r\n            for (var a=0;a<data.fourth_quart_det.length;a++){\r\n                if(data.all_items[i].item_id===data.fourth_quart_det[a].item_id){\r\n                    obj.fourthQT=parseFloat(data.fourth_quart_det[a].sales).toFixed(2)\r\n                }\r\n            }\r\n\r\n            final.push(obj)\r\n        }\r\n        setTableDetails(final)\r\n        // console.log(\"final\",final)\r\n    }\r\n\r\n\r\n  return (\r\n    <Box\r\n      pt=\"100px\"\r\n    >\r\n      <Grid templateColumns=\"repeat(2, 1fr)\">\r\n      <Box \r\n        width=\"auto\"\r\n        h=\"auto\"                   \r\n        overflow=\"hidden\"                    \r\n        pb=\"5px\"                      \r\n        >        \r\n    </Box>\r\n\r\n      <GridItem colSpan={2} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'>  Quarterly Sales Report </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <form onSubmit={onSubmit}>  \r\n                                    <Flex>  \r\n                                    \r\n                                    <FormControl>\r\n                                            <Select color='white' placeholder=\"Select Year\" onChange={(e)=>setYear(e.target.value)}>\r\n                                                <option value='2018'>2018</option>\r\n                                                <option value='2019'>2019</option>\r\n                                                <option value='2020'>2020</option>\r\n                                                <option value='2021'>2021</option>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                    \r\n                                    <Input ml='2' type=\"submit\" value='Generate'  className='btn btn-block' bg=\"teal\" color='white' />\r\n                                   \r\n                                    </Flex>\r\n                                    </form>\r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n\r\n\r\n        {/* stats view */}\r\n        <GridItem>\r\n            \r\n        \r\n        </GridItem>  \r\n\r\n\r\n        {/* Table by product sales */}\r\n        <GridItem colSpan={2} m='5'>\r\n        \r\n\r\n        <Table variant=\"simple\">\r\n            <TableCaption>Sales reports of specific products of {year} Business Year {year+'/01/01-'+year+\"/12/31\"}</TableCaption>\r\n                <Thead backgroundColor='cyan.100'>\r\n                    <Tr color='white'>\r\n                            <Th>Item ID</Th>\r\n                            <Th>Item Name</Th>\r\n                            <Th>Q1</Th>\r\n                            <Th>Q2</Th>\r\n                            <Th>Q3</Th>\r\n                            <Th>Q4</Th>\r\n                    </Tr>\r\n                </Thead>\r\n\r\n            <TableItems  tableDetails={tableDetails} />\r\n                                    \r\n            <Tfoot backgroundColor='cyan.100'>\r\n                    <Tr>\r\n                        <Th>Total</Th>\r\n                        <Th></Th>\r\n                        <Th> {tableTotal.q1}</Th>\r\n                        <Th>{tableTotal.q2} </Th> \r\n                        <Th>{tableTotal.q3} </Th> \r\n                        <Th> {tableTotal.q4} </Th> \r\n                       \r\n                                            \r\n                    </Tr>\r\n            </Tfoot>\r\n        </Table>                     \r\n        \r\n        </GridItem>                  \r\n\r\n                            \r\n                         \r\n\r\n            \r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(QuarterReport);\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\ProductPopularityReport.js",["563","564"],"F:\\DB_Project\\Front-end-react\\src\\components\\ReportProduct.js",["565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],"import React, { useState } from \"react\";\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Text,\r\n  IconButton,\r\n  Tooltip,\r\n  Avatar,\r\n  Center,\r\n  Badge,\r\n  Progress,\r\n  GridItem,\r\n  Heading,\r\n  SimpleGrid,\r\n  useColorMode,\r\n  Grid,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { AvatarBadge } from \"@chakra-ui/react\";\r\n// import \"./Middle.css\";\r\nimport { FaDollarSign } from \"react-icons/fa\";\r\nimport { Money, MoneyOff } from \"@material-ui/icons\";\r\nimport { GiCartwheel, GiShoppingBag, GiShoppingCart } from \"react-icons/gi\";\r\nimport { FiUserPlus } from \"react-icons/fi\";\r\n\r\nfunction ReportProduct() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dashboard\">\r\n        <Box\r\n          borderStyle=\"solid\"\r\n          borderColor=\"gray.800\"\r\n          boarderRadius=\"200px\"\r\n          mt=\"0px\"\r\n          pl=\"20px\"\r\n          pr=\"20px\"\r\n          pt=\"250px\"\r\n          h=\"460px\"\r\n          mb=\"20px\"\r\n        >\r\n          <Box\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.200\"\r\n            borderWidth=\"2px\"\r\n            p=\"10px\"\r\n            pt=\"30px\"\r\n            mt=\"-120px\"\r\n            borderRadius=\"20px\"\r\n            bg={colorMode === \"light\" ? \"white\" : \"cyan.900\"}\r\n          >\r\n            <Center>\r\n              <Heading as=\"h2\" size=\"2xl\">\r\n                Product Popularity Report\r\n              </Heading>\r\n            </Center>\r\n            <SimpleGrid columns={2} spacing={10}>\r\n  <Box bg=\"tomato\" height=\"80px\"></Box>\r\n  <Box bg=\"tomato\" height=\"80px\"></Box>\r\n\r\n</SimpleGrid>\r\n            <FormControl>\r\n            <SimpleGrid columns={2} spacing={10}>\r\n                <FormLabel>Start Date</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  placeholder=\"Exp Date\"\r\n                  value={startDate}\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n                <FormLabel>End Date</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  placeholder=\"Exp Date\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n                <Box bg=\"tomato\" height=\"80px\"></Box>\r\n  <Box bg=\"tomato\" height=\"80px\"></Box>\r\n</SimpleGrid>\r\n\r\n              </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReportProduct;\r\n\r\n{/* <GridItem>\r\n<Box\r\n  bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n  borderRadius=\"20px\"\r\n  color=\"white\"\r\n  m=\"20px\"\r\n  p=\"50px\"\r\n>\r\n  <SimpleGrid columns={5} spacing={5} pt=\"10px\" pb=\"10px\">\r\n    <Box textAlign=\"center\">\r\n      <Heading\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n        as=\"h4\"\r\n        size=\"lg\"\r\n      >\r\n        {\" \"}\r\n        Rs.\r\n      </Heading>\r\n      <Text\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      >\r\n        {\" \"}\r\n        Total Revenue\r\n      </Text>\r\n    </Box>\r\n\r\n    <Box textAlign=\"center\">\r\n      <Heading\r\n        as=\"h4\"\r\n        size=\"lg\"\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      >\r\n        {\" \"}\r\n        Rs.\r\n      </Heading>\r\n\r\n      <Text\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      >\r\n        Today Revenue\r\n      </Text>\r\n    </Box>\r\n\r\n    <Box textAlign=\"center\">\r\n      <Heading\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n        as=\"h4\"\r\n        size=\"lg\"\r\n      >\r\n        {\" \"}\r\n      </Heading>\r\n      <Text\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      >\r\n        Awaiting for shipment\r\n      </Text>\r\n    </Box>\r\n    <Box textAlign=\"center\">\r\n      <Heading\r\n        as=\"h4\"\r\n        size=\"lg\"\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      >\r\n        {\" \"}\r\n      </Heading>\r\n      <Text\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      >\r\n        Awaiting for delivery\r\n      </Text>\r\n    </Box>\r\n    <Box textAlign=\"center\">\r\n      <Heading\r\n        as=\"h4\"\r\n        size=\"lg\"\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      >\r\n        {\" \"}\r\n      </Heading>\r\n\r\n      <Text\r\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      >\r\n        Today New Users\r\n      </Text>\r\n    </Box>\r\n  </SimpleGrid>\r\n</Box>\r\n\r\n</GridItem> */}",{"ruleId":"584","replacedBy":"585"},{"ruleId":"586","replacedBy":"587"},{"ruleId":"588","severity":1,"message":"589","line":8,"column":5,"nodeType":"590","messageId":"591","endLine":8,"endColumn":18},{"ruleId":"588","severity":1,"message":"592","line":12,"column":17,"nodeType":"590","messageId":"591","endLine":12,"endColumn":25},{"ruleId":"588","severity":1,"message":"593","line":12,"column":27,"nodeType":"590","messageId":"591","endLine":12,"endColumn":36},{"ruleId":"588","severity":1,"message":"594","line":19,"column":24,"nodeType":"590","messageId":"591","endLine":19,"endColumn":39},{"ruleId":"588","severity":1,"message":"595","line":21,"column":11,"nodeType":"590","messageId":"591","endLine":21,"endColumn":16},{"ruleId":"588","severity":1,"message":"594","line":37,"column":22,"nodeType":"590","messageId":"591","endLine":37,"endColumn":37},{"ruleId":"596","severity":1,"message":"597","line":49,"column":11,"nodeType":"590","messageId":"598","endLine":49,"endColumn":14},{"ruleId":"588","severity":1,"message":"599","line":32,"column":10,"nodeType":"590","messageId":"591","endLine":32,"endColumn":18},{"ruleId":"588","severity":1,"message":"600","line":37,"column":3,"nodeType":"590","messageId":"591","endLine":37,"endColumn":7},{"ruleId":"588","severity":1,"message":"594","line":50,"column":22,"nodeType":"590","messageId":"591","endLine":50,"endColumn":37},{"ruleId":"588","severity":1,"message":"601","line":54,"column":19,"nodeType":"590","messageId":"591","endLine":54,"endColumn":25},{"ruleId":"602","severity":1,"message":"603","line":145,"column":6,"nodeType":"604","endLine":145,"endColumn":8,"suggestions":"605"},{"ruleId":"588","severity":1,"message":"606","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":9},{"ruleId":"588","severity":1,"message":"607","line":15,"column":8,"nodeType":"590","messageId":"591","endLine":15,"endColumn":20},{"ruleId":"602","severity":1,"message":"608","line":30,"column":6,"nodeType":"604","endLine":30,"endColumn":8,"suggestions":"609"},{"ruleId":"588","severity":1,"message":"610","line":6,"column":5,"nodeType":"590","messageId":"591","endLine":6,"endColumn":12},{"ruleId":"588","severity":1,"message":"611","line":15,"column":10,"nodeType":"590","messageId":"591","endLine":15,"endColumn":19},{"ruleId":"588","severity":1,"message":"612","line":16,"column":8,"nodeType":"590","messageId":"591","endLine":16,"endColumn":14},{"ruleId":"602","severity":1,"message":"613","line":44,"column":6,"nodeType":"604","endLine":44,"endColumn":8,"suggestions":"614"},{"ruleId":"588","severity":1,"message":"594","line":73,"column":22,"nodeType":"590","messageId":"591","endLine":73,"endColumn":37},{"ruleId":"588","severity":1,"message":"615","line":11,"column":10,"nodeType":"590","messageId":"591","endLine":11,"endColumn":20},{"ruleId":"602","severity":1,"message":"613","line":47,"column":8,"nodeType":"604","endLine":47,"endColumn":10,"suggestions":"616"},{"ruleId":"588","severity":1,"message":"594","line":124,"column":24,"nodeType":"590","messageId":"591","endLine":124,"endColumn":39},{"ruleId":"602","severity":1,"message":"613","line":60,"column":8,"nodeType":"604","endLine":60,"endColumn":10,"suggestions":"617"},{"ruleId":"618","severity":1,"message":"619","line":139,"column":37,"nodeType":"620","messageId":"621","endLine":139,"endColumn":39},{"ruleId":"588","severity":1,"message":"594","line":145,"column":24,"nodeType":"590","messageId":"591","endLine":145,"endColumn":39},{"ruleId":"588","severity":1,"message":"593","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"588","severity":1,"message":"592","line":1,"column":28,"nodeType":"590","messageId":"591","endLine":1,"endColumn":36},{"ruleId":"588","severity":1,"message":"622","line":19,"column":7,"nodeType":"590","messageId":"591","endLine":19,"endColumn":10},{"ruleId":"588","severity":1,"message":"623","line":25,"column":3,"nodeType":"590","messageId":"591","endLine":25,"endColumn":9},{"ruleId":"588","severity":1,"message":"624","line":30,"column":10,"nodeType":"590","messageId":"591","endLine":30,"endColumn":18},{"ruleId":"588","severity":1,"message":"625","line":31,"column":10,"nodeType":"590","messageId":"591","endLine":31,"endColumn":20},{"ruleId":"588","severity":1,"message":"611","line":38,"column":10,"nodeType":"590","messageId":"591","endLine":38,"endColumn":19},{"ruleId":"588","severity":1,"message":"594","line":42,"column":22,"nodeType":"590","messageId":"591","endLine":42,"endColumn":37},{"ruleId":"588","severity":1,"message":"594","line":21,"column":24,"nodeType":"590","messageId":"591","endLine":21,"endColumn":39},{"ruleId":"602","severity":1,"message":"613","line":44,"column":8,"nodeType":"604","endLine":44,"endColumn":10,"suggestions":"626"},{"ruleId":"602","severity":1,"message":"613","line":89,"column":8,"nodeType":"604","endLine":89,"endColumn":10,"suggestions":"627"},{"ruleId":"588","severity":1,"message":"628","line":10,"column":5,"nodeType":"590","messageId":"591","endLine":10,"endColumn":9},{"ruleId":"588","severity":1,"message":"594","line":15,"column":24,"nodeType":"590","messageId":"591","endLine":15,"endColumn":39},{"ruleId":"588","severity":1,"message":"629","line":3,"column":5,"nodeType":"590","messageId":"591","endLine":3,"endColumn":11},{"ruleId":"588","severity":1,"message":"606","line":4,"column":5,"nodeType":"590","messageId":"591","endLine":4,"endColumn":11},{"ruleId":"588","severity":1,"message":"623","line":8,"column":5,"nodeType":"590","messageId":"591","endLine":8,"endColumn":11},{"ruleId":"588","severity":1,"message":"630","line":13,"column":10,"nodeType":"590","messageId":"591","endLine":13,"endColumn":19},{"ruleId":"588","severity":1,"message":"631","line":33,"column":11,"nodeType":"590","messageId":"591","endLine":33,"endColumn":24},{"ruleId":"588","severity":1,"message":"632","line":1,"column":10,"nodeType":"590","messageId":"591","endLine":1,"endColumn":17},{"ruleId":"588","severity":1,"message":"623","line":2,"column":35,"nodeType":"590","messageId":"591","endLine":2,"endColumn":41},{"ruleId":"588","severity":1,"message":"633","line":2,"column":50,"nodeType":"590","messageId":"591","endLine":2,"endColumn":54},{"ruleId":"588","severity":1,"message":"634","line":7,"column":17,"nodeType":"590","messageId":"591","endLine":7,"endColumn":26},{"ruleId":"588","severity":1,"message":"635","line":13,"column":10,"nodeType":"590","messageId":"591","endLine":13,"endColumn":15},{"ruleId":"588","severity":1,"message":"636","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":15},{"ruleId":"588","severity":1,"message":"637","line":13,"column":18,"nodeType":"590","messageId":"591","endLine":13,"endColumn":29},{"ruleId":"588","severity":1,"message":"638","line":14,"column":17,"nodeType":"590","messageId":"591","endLine":14,"endColumn":23},{"ruleId":"588","severity":1,"message":"623","line":14,"column":25,"nodeType":"590","messageId":"591","endLine":14,"endColumn":31},{"ruleId":"588","severity":1,"message":"632","line":21,"column":3,"nodeType":"590","messageId":"591","endLine":21,"endColumn":10},{"ruleId":"588","severity":1,"message":"639","line":22,"column":3,"nodeType":"590","messageId":"591","endLine":22,"endColumn":12},{"ruleId":"588","severity":1,"message":"640","line":27,"column":8,"nodeType":"590","messageId":"591","endLine":27,"endColumn":32},{"ruleId":"588","severity":1,"message":"641","line":28,"column":8,"nodeType":"590","messageId":"591","endLine":28,"endColumn":26},{"ruleId":"602","severity":1,"message":"642","line":76,"column":6,"nodeType":"604","endLine":76,"endColumn":8,"suggestions":"643"},{"ruleId":"588","severity":1,"message":"629","line":3,"column":5,"nodeType":"590","messageId":"591","endLine":3,"endColumn":11},{"ruleId":"588","severity":1,"message":"606","line":4,"column":5,"nodeType":"590","messageId":"591","endLine":4,"endColumn":11},{"ruleId":"588","severity":1,"message":"623","line":9,"column":5,"nodeType":"590","messageId":"591","endLine":9,"endColumn":11},{"ruleId":"588","severity":1,"message":"630","line":13,"column":10,"nodeType":"590","messageId":"591","endLine":13,"endColumn":19},{"ruleId":"588","severity":1,"message":"593","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"588","severity":1,"message":"644","line":7,"column":8,"nodeType":"590","messageId":"591","endLine":7,"endColumn":15},{"ruleId":"588","severity":1,"message":"645","line":8,"column":8,"nodeType":"590","messageId":"591","endLine":8,"endColumn":13},{"ruleId":"588","severity":1,"message":"646","line":5,"column":8,"nodeType":"590","messageId":"591","endLine":5,"endColumn":21},{"ruleId":"588","severity":1,"message":"647","line":8,"column":10,"nodeType":"590","messageId":"591","endLine":8,"endColumn":13},{"ruleId":"588","severity":1,"message":"648","line":8,"column":15,"nodeType":"590","messageId":"591","endLine":8,"endColumn":19},{"ruleId":"588","severity":1,"message":"649","line":8,"column":21,"nodeType":"590","messageId":"591","endLine":8,"endColumn":29},{"ruleId":"588","severity":1,"message":"599","line":10,"column":10,"nodeType":"590","messageId":"591","endLine":10,"endColumn":18},{"ruleId":"588","severity":1,"message":"650","line":20,"column":9,"nodeType":"590","messageId":"591","endLine":20,"endColumn":16},{"ruleId":"588","severity":1,"message":"629","line":3,"column":5,"nodeType":"590","messageId":"591","endLine":3,"endColumn":11},{"ruleId":"588","severity":1,"message":"623","line":8,"column":5,"nodeType":"590","messageId":"591","endLine":8,"endColumn":11},{"ruleId":"602","severity":1,"message":"613","line":59,"column":8,"nodeType":"604","endLine":59,"endColumn":10,"suggestions":"651"},{"ruleId":"588","severity":1,"message":"652","line":3,"column":5,"nodeType":"590","messageId":"591","endLine":3,"endColumn":9},{"ruleId":"588","severity":1,"message":"653","line":4,"column":5,"nodeType":"590","messageId":"591","endLine":4,"endColumn":13},{"ruleId":"588","severity":1,"message":"654","line":5,"column":5,"nodeType":"590","messageId":"591","endLine":5,"endColumn":12},{"ruleId":"588","severity":1,"message":"628","line":6,"column":5,"nodeType":"590","messageId":"591","endLine":6,"endColumn":9},{"ruleId":"588","severity":1,"message":"610","line":7,"column":5,"nodeType":"590","messageId":"591","endLine":7,"endColumn":12},{"ruleId":"588","severity":1,"message":"594","line":17,"column":24,"nodeType":"590","messageId":"591","endLine":17,"endColumn":39},{"ruleId":"588","severity":1,"message":"655","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":18},{"ruleId":"588","severity":1,"message":"592","line":11,"column":17,"nodeType":"590","messageId":"591","endLine":11,"endColumn":25},{"ruleId":"588","severity":1,"message":"638","line":3,"column":3,"nodeType":"590","messageId":"591","endLine":3,"endColumn":9},{"ruleId":"588","severity":1,"message":"656","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":9},{"ruleId":"588","severity":1,"message":"654","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":10},{"ruleId":"588","severity":1,"message":"623","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":9},{"ruleId":"588","severity":1,"message":"657","line":14,"column":8,"nodeType":"590","messageId":"591","endLine":14,"endColumn":14},{"ruleId":"588","severity":1,"message":"658","line":17,"column":11,"nodeType":"590","messageId":"591","endLine":17,"endColumn":20},{"ruleId":"588","severity":1,"message":"594","line":17,"column":22,"nodeType":"590","messageId":"591","endLine":17,"endColumn":37},{"ruleId":"588","severity":1,"message":"659","line":18,"column":7,"nodeType":"590","messageId":"591","endLine":18,"endColumn":14},{"ruleId":"588","severity":1,"message":"606","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":9},{"ruleId":"588","severity":1,"message":"594","line":15,"column":21,"nodeType":"590","messageId":"591","endLine":15,"endColumn":36},{"ruleId":"618","severity":1,"message":"619","line":37,"column":42,"nodeType":"620","messageId":"621","endLine":37,"endColumn":44},{"ruleId":"588","severity":1,"message":"629","line":2,"column":3,"nodeType":"590","messageId":"591","endLine":2,"endColumn":9},{"ruleId":"588","severity":1,"message":"655","line":3,"column":3,"nodeType":"590","messageId":"591","endLine":3,"endColumn":18},{"ruleId":"588","severity":1,"message":"660","line":4,"column":3,"nodeType":"590","messageId":"591","endLine":4,"endColumn":7},{"ruleId":"588","severity":1,"message":"628","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":7},{"ruleId":"588","severity":1,"message":"594","line":17,"column":22,"nodeType":"590","messageId":"591","endLine":17,"endColumn":37},{"ruleId":"588","severity":1,"message":"661","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":22},{"ruleId":"588","severity":1,"message":"662","line":2,"column":24,"nodeType":"590","messageId":"591","endLine":2,"endColumn":41},{"ruleId":"588","severity":1,"message":"663","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":13},{"ruleId":"588","severity":1,"message":"594","line":13,"column":22,"nodeType":"590","messageId":"591","endLine":13,"endColumn":37},{"ruleId":"588","severity":1,"message":"664","line":3,"column":10,"nodeType":"590","messageId":"591","endLine":3,"endColumn":27},{"ruleId":"588","severity":1,"message":"665","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":14},{"ruleId":"588","severity":1,"message":"666","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":27},{"ruleId":"588","severity":1,"message":"667","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":14},{"ruleId":"588","severity":1,"message":"668","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":16},{"ruleId":"588","severity":1,"message":"669","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":18},{"ruleId":"588","severity":1,"message":"670","line":12,"column":3,"nodeType":"590","messageId":"591","endLine":12,"endColumn":17},{"ruleId":"588","severity":1,"message":"671","line":14,"column":24,"nodeType":"590","messageId":"591","endLine":14,"endColumn":30},{"ruleId":"588","severity":1,"message":"672","line":15,"column":10,"nodeType":"590","messageId":"591","endLine":15,"endColumn":27},{"ruleId":"588","severity":1,"message":"673","line":18,"column":3,"nodeType":"590","messageId":"591","endLine":18,"endColumn":17},{"ruleId":"588","severity":1,"message":"647","line":31,"column":10,"nodeType":"590","messageId":"591","endLine":31,"endColumn":13},{"ruleId":"588","severity":1,"message":"628","line":31,"column":21,"nodeType":"590","messageId":"591","endLine":31,"endColumn":25},{"ruleId":"588","severity":1,"message":"674","line":35,"column":10,"nodeType":"590","messageId":"591","endLine":35,"endColumn":16},{"ruleId":"675","severity":1,"message":"676","line":43,"column":5,"nodeType":"677","messageId":"678","endLine":45,"endColumn":6},{"ruleId":"588","severity":1,"message":"629","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":16},{"ruleId":"602","severity":1,"message":"613","line":39,"column":8,"nodeType":"604","endLine":39,"endColumn":10,"suggestions":"679"},{"ruleId":"588","severity":1,"message":"629","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":16},{"ruleId":"588","severity":1,"message":"680","line":4,"column":3,"nodeType":"590","messageId":"591","endLine":4,"endColumn":13},{"ruleId":"588","severity":1,"message":"681","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":14},{"ruleId":"588","severity":1,"message":"682","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":12},{"ruleId":"588","severity":1,"message":"683","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":12},{"ruleId":"588","severity":1,"message":"684","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":13},{"ruleId":"588","severity":1,"message":"633","line":15,"column":3,"nodeType":"590","messageId":"591","endLine":15,"endColumn":7},{"ruleId":"588","severity":1,"message":"685","line":16,"column":3,"nodeType":"590","messageId":"591","endLine":16,"endColumn":12},{"ruleId":"588","severity":1,"message":"686","line":23,"column":8,"nodeType":"590","messageId":"591","endLine":23,"endColumn":20},{"ruleId":"588","severity":1,"message":"594","line":14,"column":22,"nodeType":"590","messageId":"591","endLine":14,"endColumn":37},{"ruleId":"588","severity":1,"message":"645","line":5,"column":8,"nodeType":"590","messageId":"591","endLine":5,"endColumn":13},{"ruleId":"588","severity":1,"message":"687","line":6,"column":8,"nodeType":"590","messageId":"591","endLine":6,"endColumn":15},{"ruleId":"588","severity":1,"message":"688","line":1,"column":10,"nodeType":"590","messageId":"591","endLine":1,"endColumn":18},{"ruleId":"588","severity":1,"message":"636","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":15},{"ruleId":"588","severity":1,"message":"656","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":9},{"ruleId":"588","severity":1,"message":"689","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":14},{"ruleId":"588","severity":1,"message":"623","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":9},{"ruleId":"588","severity":1,"message":"654","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":10},{"ruleId":"588","severity":1,"message":"690","line":11,"column":3,"nodeType":"590","messageId":"591","endLine":11,"endColumn":8},{"ruleId":"588","severity":1,"message":"691","line":12,"column":3,"nodeType":"590","messageId":"591","endLine":12,"endColumn":8},{"ruleId":"588","severity":1,"message":"592","line":15,"column":17,"nodeType":"590","messageId":"591","endLine":15,"endColumn":25},{"ruleId":"692","severity":1,"message":"693","line":62,"column":96,"nodeType":"620","messageId":"694","endLine":62,"endColumn":97},{"ruleId":"618","severity":1,"message":"619","line":30,"column":33,"nodeType":"620","messageId":"621","endLine":30,"endColumn":35},{"ruleId":"695","severity":1,"message":"696","line":74,"column":1,"nodeType":"697","endLine":81,"endColumn":2},{"ruleId":"588","severity":1,"message":"688","line":1,"column":10,"nodeType":"590","messageId":"591","endLine":1,"endColumn":18},{"ruleId":"588","severity":1,"message":"636","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":15},{"ruleId":"588","severity":1,"message":"656","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":9},{"ruleId":"588","severity":1,"message":"689","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":14},{"ruleId":"588","severity":1,"message":"623","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":9},{"ruleId":"588","severity":1,"message":"654","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":10},{"ruleId":"588","severity":1,"message":"690","line":11,"column":3,"nodeType":"590","messageId":"591","endLine":11,"endColumn":8},{"ruleId":"588","severity":1,"message":"691","line":12,"column":3,"nodeType":"590","messageId":"591","endLine":12,"endColumn":8},{"ruleId":"588","severity":1,"message":"698","line":15,"column":3,"nodeType":"590","messageId":"591","endLine":15,"endColumn":11},{"ruleId":"588","severity":1,"message":"699","line":17,"column":8,"nodeType":"590","messageId":"591","endLine":17,"endColumn":13},{"ruleId":"588","severity":1,"message":"592","line":18,"column":17,"nodeType":"590","messageId":"591","endLine":18,"endColumn":25},{"ruleId":"588","severity":1,"message":"700","line":3,"column":3,"nodeType":"590","messageId":"591","endLine":3,"endColumn":17},{"ruleId":"588","severity":1,"message":"701","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":13},{"ruleId":"588","severity":1,"message":"702","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":10},{"ruleId":"588","severity":1,"message":"652","line":16,"column":3,"nodeType":"590","messageId":"591","endLine":16,"endColumn":7},{"ruleId":"588","severity":1,"message":"703","line":21,"column":10,"nodeType":"590","messageId":"591","endLine":21,"endColumn":22},{"ruleId":"588","severity":1,"message":"704","line":22,"column":10,"nodeType":"590","messageId":"591","endLine":22,"endColumn":15},{"ruleId":"588","severity":1,"message":"705","line":22,"column":17,"nodeType":"590","messageId":"591","endLine":22,"endColumn":25},{"ruleId":"588","severity":1,"message":"667","line":23,"column":10,"nodeType":"590","messageId":"591","endLine":23,"endColumn":21},{"ruleId":"588","severity":1,"message":"706","line":23,"column":23,"nodeType":"590","messageId":"591","endLine":23,"endColumn":36},{"ruleId":"588","severity":1,"message":"670","line":23,"column":38,"nodeType":"590","messageId":"591","endLine":23,"endColumn":52},{"ruleId":"588","severity":1,"message":"707","line":24,"column":10,"nodeType":"590","messageId":"591","endLine":24,"endColumn":20},{"ruleId":"588","severity":1,"message":"594","line":27,"column":22,"nodeType":"590","messageId":"591","endLine":27,"endColumn":37},{"ruleId":"588","severity":1,"message":"708","line":13,"column":19,"nodeType":"590","messageId":"591","endLine":13,"endColumn":27},{"ruleId":"709","severity":1,"message":"710","line":85,"column":13,"nodeType":"711","endLine":85,"endColumn":34},{"ruleId":"588","severity":1,"message":"593","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"588","severity":1,"message":"712","line":4,"column":8,"nodeType":"590","messageId":"591","endLine":4,"endColumn":19},{"ruleId":"588","severity":1,"message":"645","line":5,"column":8,"nodeType":"590","messageId":"591","endLine":5,"endColumn":13},{"ruleId":"588","severity":1,"message":"594","line":13,"column":22,"nodeType":"590","messageId":"591","endLine":13,"endColumn":37},{"ruleId":"588","severity":1,"message":"592","line":1,"column":16,"nodeType":"590","messageId":"591","endLine":1,"endColumn":24},{"ruleId":"588","severity":1,"message":"713","line":23,"column":10,"nodeType":"590","messageId":"591","endLine":23,"endColumn":16},{"ruleId":"588","severity":1,"message":"714","line":23,"column":17,"nodeType":"590","messageId":"591","endLine":23,"endColumn":24},{"ruleId":"588","severity":1,"message":"715","line":23,"column":26,"nodeType":"590","messageId":"591","endLine":23,"endColumn":36},{"ruleId":"588","severity":1,"message":"716","line":28,"column":13,"nodeType":"590","messageId":"591","endLine":28,"endColumn":19},{"ruleId":"588","severity":1,"message":"601","line":28,"column":21,"nodeType":"590","messageId":"591","endLine":28,"endColumn":27},{"ruleId":"588","severity":1,"message":"717","line":28,"column":29,"nodeType":"590","messageId":"591","endLine":28,"endColumn":36},{"ruleId":"588","severity":1,"message":"594","line":30,"column":24,"nodeType":"590","messageId":"591","endLine":30,"endColumn":39},{"ruleId":"588","severity":1,"message":"690","line":10,"column":5,"nodeType":"590","messageId":"591","endLine":10,"endColumn":10},{"ruleId":"588","severity":1,"message":"638","line":11,"column":5,"nodeType":"590","messageId":"591","endLine":11,"endColumn":11},{"ruleId":"588","severity":1,"message":"594","line":31,"column":24,"nodeType":"590","messageId":"591","endLine":31,"endColumn":39},{"ruleId":"596","severity":1,"message":"718","line":55,"column":13,"nodeType":"590","messageId":"598","endLine":55,"endColumn":17},{"ruleId":"618","severity":1,"message":"619","line":66,"column":18,"nodeType":"620","messageId":"621","endLine":66,"endColumn":20},{"ruleId":"618","severity":1,"message":"619","line":73,"column":24,"nodeType":"620","messageId":"621","endLine":73,"endColumn":26},{"ruleId":"588","severity":1,"message":"688","line":1,"column":10,"nodeType":"590","messageId":"591","endLine":1,"endColumn":18},{"ruleId":"588","severity":1,"message":"636","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":15},{"ruleId":"588","severity":1,"message":"656","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":9},{"ruleId":"588","severity":1,"message":"689","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":14},{"ruleId":"588","severity":1,"message":"623","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":9},{"ruleId":"588","severity":1,"message":"654","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":10},{"ruleId":"588","severity":1,"message":"690","line":11,"column":3,"nodeType":"590","messageId":"591","endLine":11,"endColumn":8},{"ruleId":"588","severity":1,"message":"691","line":12,"column":3,"nodeType":"590","messageId":"591","endLine":12,"endColumn":8},{"ruleId":"588","severity":1,"message":"629","line":14,"column":3,"nodeType":"590","messageId":"591","endLine":14,"endColumn":9},{"ruleId":"588","severity":1,"message":"592","line":16,"column":17,"nodeType":"590","messageId":"591","endLine":16,"endColumn":25},{"ruleId":"588","severity":1,"message":"719","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":19},{"ruleId":"588","severity":1,"message":"593","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"588","severity":1,"message":"645","line":6,"column":8,"nodeType":"590","messageId":"591","endLine":6,"endColumn":13},{"ruleId":"588","severity":1,"message":"629","line":7,"column":22,"nodeType":"590","messageId":"591","endLine":7,"endColumn":28},{"ruleId":"618","severity":1,"message":"619","line":25,"column":24,"nodeType":"620","messageId":"621","endLine":25,"endColumn":26},{"ruleId":"618","severity":1,"message":"619","line":60,"column":24,"nodeType":"620","messageId":"621","endLine":60,"endColumn":26},{"ruleId":"588","severity":1,"message":"628","line":2,"column":18,"nodeType":"590","messageId":"591","endLine":2,"endColumn":22},{"ruleId":"720","severity":1,"message":"721","line":23,"column":7,"nodeType":"722","endLine":23,"endColumn":77},{"ruleId":"588","severity":1,"message":"645","line":6,"column":8,"nodeType":"590","messageId":"591","endLine":6,"endColumn":13},{"ruleId":"618","severity":1,"message":"619","line":109,"column":30,"nodeType":"620","messageId":"621","endLine":109,"endColumn":32},{"ruleId":"588","severity":1,"message":"628","line":2,"column":18,"nodeType":"590","messageId":"591","endLine":2,"endColumn":22},{"ruleId":"720","severity":1,"message":"721","line":23,"column":7,"nodeType":"722","endLine":23,"endColumn":77},{"ruleId":"602","severity":1,"message":"723","line":61,"column":6,"nodeType":"604","endLine":61,"endColumn":40,"suggestions":"724"},{"ruleId":"588","severity":1,"message":"725","line":3,"column":8,"nodeType":"590","messageId":"591","endLine":3,"endColumn":15},{"ruleId":"602","severity":1,"message":"723","line":51,"column":6,"nodeType":"604","endLine":51,"endColumn":14,"suggestions":"726"},{"ruleId":"588","severity":1,"message":"595","line":18,"column":11,"nodeType":"590","messageId":"591","endLine":18,"endColumn":16},{"ruleId":"588","severity":1,"message":"592","line":1,"column":16,"nodeType":"590","messageId":"591","endLine":1,"endColumn":24},{"ruleId":"588","severity":1,"message":"716","line":24,"column":13,"nodeType":"590","messageId":"591","endLine":24,"endColumn":19},{"ruleId":"588","severity":1,"message":"601","line":24,"column":21,"nodeType":"590","messageId":"591","endLine":24,"endColumn":27},{"ruleId":"588","severity":1,"message":"717","line":24,"column":29,"nodeType":"590","messageId":"591","endLine":24,"endColumn":36},{"ruleId":"588","severity":1,"message":"594","line":26,"column":24,"nodeType":"590","messageId":"591","endLine":26,"endColumn":39},{"ruleId":"588","severity":1,"message":"593","line":22,"column":27,"nodeType":"590","messageId":"591","endLine":22,"endColumn":36},{"ruleId":"588","severity":1,"message":"611","line":23,"column":10,"nodeType":"590","messageId":"591","endLine":23,"endColumn":19},{"ruleId":"588","severity":1,"message":"612","line":24,"column":8,"nodeType":"590","messageId":"591","endLine":24,"endColumn":14},{"ruleId":"588","severity":1,"message":"658","line":60,"column":13,"nodeType":"590","messageId":"591","endLine":60,"endColumn":22},{"ruleId":"588","severity":1,"message":"594","line":60,"column":24,"nodeType":"590","messageId":"591","endLine":60,"endColumn":39},{"ruleId":"588","severity":1,"message":"699","line":4,"column":8,"nodeType":"590","messageId":"591","endLine":4,"endColumn":13},{"ruleId":"588","severity":1,"message":"727","line":6,"column":10,"nodeType":"590","messageId":"591","endLine":6,"endColumn":16},{"ruleId":"588","severity":1,"message":"728","line":14,"column":5,"nodeType":"590","messageId":"591","endLine":14,"endColumn":10},{"ruleId":"588","severity":1,"message":"729","line":18,"column":5,"nodeType":"590","messageId":"591","endLine":18,"endColumn":7},{"ruleId":"588","severity":1,"message":"593","line":24,"column":27,"nodeType":"590","messageId":"591","endLine":24,"endColumn":36},{"ruleId":"588","severity":1,"message":"611","line":25,"column":10,"nodeType":"590","messageId":"591","endLine":25,"endColumn":19},{"ruleId":"588","severity":1,"message":"612","line":26,"column":8,"nodeType":"590","messageId":"591","endLine":26,"endColumn":14},{"ruleId":"588","severity":1,"message":"645","line":27,"column":8,"nodeType":"590","messageId":"591","endLine":27,"endColumn":13},{"ruleId":"588","severity":1,"message":"595","line":60,"column":11,"nodeType":"590","messageId":"591","endLine":60,"endColumn":16},{"ruleId":"588","severity":1,"message":"658","line":62,"column":13,"nodeType":"590","messageId":"591","endLine":62,"endColumn":22},{"ruleId":"588","severity":1,"message":"594","line":62,"column":24,"nodeType":"590","messageId":"591","endLine":62,"endColumn":39},{"ruleId":"588","severity":1,"message":"730","line":64,"column":12,"nodeType":"590","messageId":"591","endLine":64,"endColumn":24},{"ruleId":"588","severity":1,"message":"731","line":64,"column":26,"nodeType":"590","messageId":"591","endLine":64,"endColumn":41},{"ruleId":"588","severity":1,"message":"593","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"588","severity":1,"message":"592","line":1,"column":28,"nodeType":"590","messageId":"591","endLine":1,"endColumn":36},{"ruleId":"588","severity":1,"message":"700","line":3,"column":3,"nodeType":"590","messageId":"591","endLine":3,"endColumn":17},{"ruleId":"588","severity":1,"message":"628","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":7},{"ruleId":"588","severity":1,"message":"701","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":13},{"ruleId":"588","severity":1,"message":"702","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":10},{"ruleId":"588","severity":1,"message":"656","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":9},{"ruleId":"588","severity":1,"message":"691","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":8},{"ruleId":"588","severity":1,"message":"732","line":11,"column":3,"nodeType":"590","messageId":"591","endLine":11,"endColumn":11},{"ruleId":"588","severity":1,"message":"653","line":12,"column":3,"nodeType":"590","messageId":"591","endLine":12,"endColumn":11},{"ruleId":"588","severity":1,"message":"652","line":16,"column":3,"nodeType":"590","messageId":"591","endLine":16,"endColumn":7},{"ruleId":"588","severity":1,"message":"689","line":22,"column":10,"nodeType":"590","messageId":"591","endLine":22,"endColumn":21},{"ruleId":"588","severity":1,"message":"703","line":24,"column":10,"nodeType":"590","messageId":"591","endLine":24,"endColumn":22},{"ruleId":"588","severity":1,"message":"704","line":25,"column":10,"nodeType":"590","messageId":"591","endLine":25,"endColumn":15},{"ruleId":"588","severity":1,"message":"705","line":25,"column":17,"nodeType":"590","messageId":"591","endLine":25,"endColumn":25},{"ruleId":"588","severity":1,"message":"667","line":26,"column":10,"nodeType":"590","messageId":"591","endLine":26,"endColumn":21},{"ruleId":"588","severity":1,"message":"706","line":26,"column":23,"nodeType":"590","messageId":"591","endLine":26,"endColumn":36},{"ruleId":"588","severity":1,"message":"670","line":26,"column":38,"nodeType":"590","messageId":"591","endLine":26,"endColumn":52},{"ruleId":"588","severity":1,"message":"707","line":27,"column":10,"nodeType":"590","messageId":"591","endLine":27,"endColumn":20},{"ruleId":"588","severity":1,"message":"594","line":30,"column":22,"nodeType":"590","messageId":"591","endLine":30,"endColumn":37},{"ruleId":"675","severity":1,"message":"733","line":96,"column":1,"nodeType":"677","messageId":"734","endLine":185,"endColumn":16},"no-native-reassign",["735"],"no-negated-in-lhs",["736"],"no-unused-vars","'useDisclosure' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'toggleColorMode' is assigned a value but never used.","'toast' is assigned a value but never used.","no-redeclare","'url' is already defined.","redeclared","'Redirect' is defined but never used.","'Icon' is defined but never used.","'onOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentOrder' and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentOrder(c => ...)' if you only need 'currentOrder' in the 'setCurrentOrder' call.","ArrayExpression",["737"],"'Center' is defined but never used.","'Deliverycard' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["738"],"'Divider' is defined but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.","React Hook useEffect has a missing dependency: 'toast'. Either include it or remove the dependency array.",["739"],"'useHistory' is defined but never used.",["740"],["741"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'his' is assigned a value but never used.","'VStack' is defined but never used.","'SiPaypal' is defined but never used.","'RiVisaLine' is defined but never used.",["742"],["743"],"'Text' is defined but never used.","'Button' is defined but never used.","'SearchBar' is defined but never used.","'searchBarText' is assigned a value but never used.","'AddIcon' is defined but never used.","'Form' is defined but never used.","'Component' is defined but never used.","'state' is assigned a value but never used.","'useColorMode' is defined but never used.","'ButtonGroup' is defined but never used.","'HStack' is defined but never used.","'MinusIcon' is defined but never used.","'CategorizedReviewPreview' is defined but never used.","'ReviewCountPreview' is defined but never used.","React Hook useEffect has a missing dependency: 'item_id'. Either include it or remove the dependency array.",["744"],"'service' is defined but never used.","'Axios' is defined but never used.","'SearchBarHome' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'Skeleton' is defined but never used.","'history' is assigned a value but never used.",["745"],"'Grid' is defined but never used.","'GridItem' is defined but never used.","'Heading' is defined but never used.","'ReactRouterLink' is defined but never used.","'Avatar' is defined but never used.","'Replys' is defined but never used.","'colorMode' is assigned a value but never used.","'reviews' is assigned a value but never used.","'Link' is defined but never used.","'CardGiftcard' is defined but never used.","'CreditCardRounded' is defined but never used.","'MdSettings' is defined but never used.","'AiFillThunderbolt' is defined but never used.","'GiAllForOne' is defined but never used.","'GiArtificialIntelligence' is defined but never used.","'GiCartwheel' is defined but never used.","'GiCrystalBars' is defined but never used.","'GiDeliveryDrone' is defined but never used.","'GiShoppingCart' is defined but never used.","'GiRock' is defined but never used.","'GiFloatingCrystal' is defined but never used.","'PricingSection' is defined but never used.","'isDark' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["746"],"'FaFacebook' is defined but never used.","'FaInstagram' is defined but never used.","'FaYoutube' is defined but never used.","'FaTwitter' is defined but never used.","'FaLinkedin' is defined but never used.","'FormInput' is defined but never used.","'BottomFooter' is defined but never used.","'useForm' is defined but never used.","'StarIcon' is defined but never used.","'AvatarBadge' is defined but never used.","'Image' is defined but never used.","'Badge' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useToast' is defined but never used.","'axios' is defined but never used.","'ChakraProvider' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'FaDollarSign' is defined but never used.","'Money' is defined but never used.","'MoneyOff' is defined but never used.","'GiShoppingBag' is defined but never used.","'FiUserPlus' is defined but never used.","'MdZoomIn' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'FormSuccess' is defined but never used.","'ImUser' is defined but never used.","'ImPhone' is defined but never used.","'ImLocation' is defined but never used.","'isOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'list' is already defined.","'FaMagento' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["747"],"'Cookies' is defined but never used.",["748"],"'Height' is defined but never used.","'Tbody' is defined but never used.","'Td' is defined but never used.","'tableDetails' is assigned a value but never used.","'setTableDetails' is assigned a value but never used.","'Progress' is defined but never used.","Block is redundant.","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"753","fix":"755"},{"desc":"753","fix":"756"},{"desc":"753","fix":"757"},{"desc":"753","fix":"758"},{"desc":"759","fix":"760"},{"desc":"753","fix":"761"},{"desc":"753","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},"Update the dependencies array to be: [currentOrder, id]",{"range":"767","text":"768"},"Update the dependencies array to be: [id]",{"range":"769","text":"770"},"Update the dependencies array to be: [toast]",{"range":"771","text":"772"},{"range":"773","text":"772"},{"range":"774","text":"772"},{"range":"775","text":"772"},{"range":"776","text":"772"},"Update the dependencies array to be: [item_id]",{"range":"777","text":"778"},{"range":"779","text":"772"},{"range":"780","text":"772"},"Update the dependencies array to be: [errors, backEndErrors.registered, isSubmitting, callback]",{"range":"781","text":"782"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"783","text":"784"},[3451,3453],"[currentOrder, id]",[679,681],"[id]",[1164,1166],"[toast]",[1244,1246],[1499,1501],[1125,1127],[2506,2508],[1702,1704],"[item_id]",[1901,1903],[1206,1208],[1790,1824],"[errors, backEndErrors.registered, isSubmitting, callback]",[1364,1372],"[callback, errors, isSubmitting]"]