

[{"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js":"1","/Users/pasanmadushan/Desktop/Front-end-react/src/App.js":"2","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js":"3","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Home.js":"4","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js":"5","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js":"6","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js":"7","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js":"8","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js":"9","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js":"10","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js":"11","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js":"12","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js":"13","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js":"14","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js":"15","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js":"16","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js":"17","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js":"18","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePasswordForm.js":"19","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePersonalDetForm.js":"20","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CardDetails.js":"21","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCards.js":"22","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCard.js":"23","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddBankCard.js":"24","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/TrackOrder.js":"25","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AllOrders.js":"26","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTiles.js":"27","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTile.js":"28"},{"size":319,"mtime":1612065915511,"results":"29","hashOfConfig":"30"},{"size":1457,"mtime":1612686275147,"results":"31","hashOfConfig":"30"},{"size":7922,"mtime":1612503070408,"results":"32","hashOfConfig":"30"},{"size":110,"mtime":1612065915511,"results":"33","hashOfConfig":"30"},{"size":2278,"mtime":1612065915511,"results":"34","hashOfConfig":"30"},{"size":1754,"mtime":1612065915510,"results":"35","hashOfConfig":"30"},{"size":909,"mtime":1612065915511,"results":"36","hashOfConfig":"30"},{"size":3304,"mtime":1612514018286,"results":"37","hashOfConfig":"30"},{"size":5842,"mtime":1612514371208,"results":"38","hashOfConfig":"30"},{"size":6148,"mtime":1612516945697,"results":"39","hashOfConfig":"30"},{"size":2999,"mtime":1612869719692,"results":"40","hashOfConfig":"30"},{"size":1812,"mtime":1612850791547,"results":"41","hashOfConfig":"30"},{"size":425,"mtime":1612503013916,"results":"42","hashOfConfig":"30"},{"size":2561,"mtime":1612503013912,"results":"43","hashOfConfig":"30"},{"size":8510,"mtime":1612608038622,"results":"44","hashOfConfig":"30"},{"size":5225,"mtime":1612503070407,"results":"45","hashOfConfig":"30"},{"size":599,"mtime":1612503070407,"results":"46","hashOfConfig":"30"},{"size":1916,"mtime":1612503070406,"results":"47","hashOfConfig":"30"},{"size":1839,"mtime":1612869475873,"results":"48","hashOfConfig":"30"},{"size":2941,"mtime":1612869432749,"results":"49","hashOfConfig":"30"},{"size":4704,"mtime":1612851022699,"results":"50","hashOfConfig":"30"},{"size":342,"mtime":1612549719766,"results":"51","hashOfConfig":"30"},{"size":4239,"mtime":1612850744629,"results":"52","hashOfConfig":"30"},{"size":2636,"mtime":1612852242236,"results":"53","hashOfConfig":"30"},{"size":1674,"mtime":1612636100457,"results":"54","hashOfConfig":"30"},{"size":7973,"mtime":1612891691733,"results":"55","hashOfConfig":"30"},{"size":392,"mtime":1612888425752,"results":"56","hashOfConfig":"30"},{"size":5406,"mtime":1612894356879,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"13dxzxw",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js",[],["131","132"],"/Users/pasanmadushan/Desktop/Front-end-react/src/App.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js",["133","134","135","136","137","138","139","140"],"import {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  IconButton,\n  Image,\n  Progress,\n  SimpleGrid,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport ImageLoader from \"react-image-file\";\nimport { AddIcon, MinusIcon, SearchIcon, StarIcon } from \"@chakra-ui/icons\";\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\n\nfunction SpecificProductPage() {\n  let { id } = useParams();\n  const { colorMode, toggleColorMode } = useColorMode();\n  \n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\n\n  const quantity_inc = () => {\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\n  };\n  const quantity_dec = () => {\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\n  };\n\n  const [data, setData] = useState({\n    item_ID: \"233d\",\n    item_name: \"Electric tooth brush\",\n    category: \"electronic\",\n    price: 200.0,\n    orders: 345,\n    description:\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n    status: \"Available\",\n    feedbacks: [\n      {\n        customer_name: \"jof hagi\",\n        customer_dp: \"jof hagi\",\n        comment: \"asdasds asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdfsd\", \"adasdasd asdasdasfasc sadasdas\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"gendi gahnadi\",\n        customer_dp: \"jof hagi\",\n        comment: \"hgfhf dghhdgf dfgshssdd\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n    ],\n    variants: [\n      {\n        varient_name: \"white 2 brushes\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n        color: \"green\",\n        details: \"\",\n        Quantity: 450,\n      },\n      {\n        varient_name: \"pink 2 brushes with bateries\",\n        image:\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\n        color: \"pink\",\n        details: \"\",\n        Quantity: 230,\n      },\n      {\n        varient_name: \"two heads only\",\n        image:\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\n        color: \"blue\",\n        details: \"\",\n        Quantity: 500,\n      },\n    ],\n  });\n\n  var imageStack = new Array(data.variants.length)\n    .fill(0)\n    .map((zero, index) => (\n      <Box\n        cursor=\"pointer\"\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\n        borderColor=\"gray.500\"\n        onClick={() => setCurrentOrder({ ...currentOrder, varient: index })}\n      >\n        <Image\n          src={data.variants[index].image}\n          w=\"100px\"\n          h=\"100px\"\n          alt=\"image\"\n        />\n      </Box>\n    ));\n\n  return (\n    <Box\n      pt=\"200px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <SimpleGrid columns={2} spacing={5} minChildWidth=\"400px\">\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          borderWidth=\"2px\"\n          borderRadius=\"lg\"\n          borderColor=\"gray.300\"\n          overflow=\"hidden\"\n          p=\"5px\"\n        >\n          <Image\n            src={data.variants[currentOrder.varient].image}\n            w=\"auto\"\n            h=\"auto\"\n            alt=\"image\"\n            fit\n          />\n        </Box>\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          borderWidth=\"2px\"\n          borderRadius=\"lg\"\n          borderColor=\"gray.300\"\n          overflow=\"hidden\"\n          p={{ base: \"5px\", sm: \"20px\" }}\n        >\n          <Heading as=\"h2\" size=\"2xl\">\n            {data.item_name}\n          </Heading>\n\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\n            {data.category}\n          </Text>\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n            {Array(5)\n              .fill(\"\")\n              .map((_, i) => (\n                <StarIcon\n                  key={i}\n                  color={i < data.feedbacks[0].rating ? \"cyan.500\" : \"cyan.300\"}\n                />\n              ))}\n            <Box as=\"span\" ml=\"2\"  fontSize=\"sm\">\n              {data.feedbacks.length} reviews &bull; {data.orders} orders\n            </Box>\n          </Box>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Varient\n          </Heading>\n          <HStack mt=\"20px\">{imageStack}</HStack>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Quantity\n          </Heading>\n          <HStack mt=\"10px\">\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<AddIcon />}\n              onClick={quantity_inc}\n            />\n            <Text>{currentOrder.quantity}</Text>\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<MinusIcon />}\n              onClick={quantity_dec}\n            />\n          </HStack>\n\n          <HStack mt=\"20px\">\n            <Button colorScheme=\"cyan\" color=\"white\" size=\"lg\">\n              Buy now\n            </Button>\n            <Button colorScheme=\"orange\" size=\"lg\" variant=\"outline\">\n              Add to cart\n            </Button>\n          </HStack>\n\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Description\n          </Heading>\n          <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\n            {data.description}\n          </Text>\n        </Box>\n      </SimpleGrid>\n      <Box\n        width=\"auto\"\n        h=\"auto\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"black\"\n        overflow=\"hidden\"\n        p={{ base: \"5px\", sm: \"20px\" }}\n        mt=\"20px\"\n        mb=\"100px\"\n\n      >\n        <Heading as=\"h2\" size=\"2xl\" mb='20px'>\n          Reviews\n        </Heading>\n        \n        <ReviewCountPreview feedbacks={data.feedbacks}/>\n          <Tabs>\n          <TabList>\n          <Tab><StarIcon color=\"cyan.500\"/> All</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 5</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 4</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 3</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 2</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 1</Tab>\n          </TabList>\n\n          <TabPanels>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ='all' />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={5} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={4} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={3} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={2} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={1} />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Box>\n  );\n}\n\nexport default SpecificProductPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Home.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js",["141","142","143","144","145","146","147","148"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n  VStack,\n  Progress,\n  Stack,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction ReviewCountPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  const total_reviews = props.feedbacks.length;\n\n  var s5 = 0;\n  var s4 = 0;\n  var s3 = 0;\n  var s2 = 0;\n  var s1 = 0;\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].rating === 5) {\n      s5 = s5 + 1;\n    } else if (props.feedbacks[i].rating === 4) {\n      s4 = s4 + 1;\n    } else if (props.feedbacks[i].rating === 3) {\n      s3 = s3 + 1;\n    } else if (props.feedbacks[i].rating === 2) {\n      s2 = s2 + 1;\n    } else if (props.feedbacks[i].rating === 1) {\n      s1 = s1 + 1;\n    }\n  }\n\n  return (\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          5 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s5} reviews\n        </Text>\n        <Progress value={(s5 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          4 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s4} reviews\n        </Text>\n        <Progress value={(s4 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          3 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s3} reviews\n        </Text>\n        <Progress value={(s3 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          2 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s2} reviews\n        </Text>\n        <Progress value={(s2 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          1 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s1} reviews\n        </Text>\n        <Progress value={(s1 / total_reviews) * 100} />\n      </Box>\n    </Stack>\n  );\n}\n\nexport default ReviewCountPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js",["149"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction CategorizedReviewPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  var stars = (rating) => {\n    return Array(5)\n      .fill(\"\")\n      .map((_, j) => (\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\n      ));\n  };\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].rating === props.rating || props.rating === 'all') {\n      reviews.push(\n        <Box mb='10px'>\n          <HStack>\n            <Avatar\n              name={props.feedbacks[i].customer_name}\n              src={props.feedbacks[i].customer_dp}\n            />\n            <Box\n              w=\"100%\"\n              borderWidth=\"2px\"\n              borderRadius=\"lg\"\n              p=\"10px\"\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\n            >\n              <Heading as=\"h5\" size=\"sm\">\n                {props.feedbacks[i].customer_name}\n              </Heading>\n              <Text>{props.feedbacks[i].comment}</Text>\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n                {stars(props.feedbacks[i].rating)}\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\n                  {props.feedbacks[i].rating}/5\n                </Box>\n              </Box>\n            </Box>\n          </HStack>\n          <Replys replys={props.feedbacks[i].reply} />\n        </Box>\n      );\n    }\n  }\n\n  if (reviews.length === 0) {\n    reviews.push(<Text>No reviews</Text>);\n  }\n\n  return <>{reviews}</>;\n}\n\nexport default CategorizedReviewPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js",["150","151","152"],"import {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nfunction Replys(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const dp = \"\";\n\n  var replys = [];\n  for (var i = 0; i < props.replys.length; i++) {\n    replys.push(\n      <HStack spacing=\"10px\" w=\"100%\">\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          p=\"10px\"\n          mt=\"20px\"\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\n        >\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\n          <Text>{props.replys[i]}</Text>\n        </Box>\n      </HStack>\n    );\n  }\n\n  return (\n    <Box ml=\"100px\" mt='10px'>\n      <VStack w=\"100%\">{replys}</VStack>\n    </Box>\n  );\n}\n\nexport default Replys;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js",["153","154","155","156","157","158"],"import React from \"react\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  Button,\n  useColorMode,\n  IconButton,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ReactRouterLink,\n  Img,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { FiShoppingCart } from \"react-icons/fi\";\n\nfunction Navbar(props) {\n  const MenuItems = ({ children }) => (\n    <Button\n      mt={{ base: 4, md: 0 }}\n      mr={6}\n      display=\"block\"\n      colorScheme=\"teal.500\"\n      variant=\"link\"\n      color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.100\"}\n    >\n      {children}\n    </Button>\n  );\n\n  const [show, setShow] = React.useState(false);\n  const handleToggle = () => setShow(!show);\n\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      pt=\"1.0rem\"\n      bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      color=\"white\"\n      position=\"fixed\"\n      top=\"0\"\n      width=\"100%\"\n      zIndex=\"10000\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <Img ml=\"1.5rem\" src=\"../logo.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\n      </Flex>\n\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <HamburgerIcon />\n      </Box>\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ base: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n        pl=\"20px\"\n      >\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\n            Home\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\n            Contact us\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\n            About us\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\n            Help\n          </Link>\n        </MenuItems>\n      </Box>\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <IconButton\n          aria-label=\"Call Segun\"\n          size=\"lg\"\n          icon={<Icon as={FiShoppingCart} w={8} h={8}  />}\n          mr={{ base: \"5px\", md: \"20px\" }}\n          variant=\"ghost\"\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n        />\n        <IconButton\n          aria-label=\"Call Segun\"\n          size=\"md\"\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n          mr={{ base: \"5px\", md: \"20px\" }}\n          variant=\"ghost\"\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          onClick={toggleColorMode}\n        />\n        <a href=\"/\">\n          <Button\n            type=\"button\"\n            border=\"1px\"\n            variant=\"ghost\"\n            mr=\"1.5rem\"\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          >\n            Log out\n          </Button>\n        </a>\n      </Box>\n\n      <Box\n        w=\"100%\"\n        h=\"5px\"\n        b=\"0px\"\n        mt=\"10px\"\n        bg={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n      />\n    </Flex>\n  );\n}\n\nexport default Navbar;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js",["159","160"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,  \n    Flex,\n    Spacer ,\n    Button,\n    useDisclosure,\n    Modal,\n    ModalBody,\n    ModalContent,\n    ModalOverlay,\n    ModalCloseButton,\n    ModalHeader,\n    useToast,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport ShipAddressses from \"../components/ShipAddressses\";\nimport AddAddress from \"../components/AddAddress\"\n\nconst CustomerAddress = () => {\n\n    const [address,setAddress] = useState([\n        {\n            id:1,\n            name:'pasan madushan',\n            tp:'07704543436',\n            street:'1234',\n            city:'abc',\n            state:'def',\n            zip:'12121'   \n                       \n        },\n        {\n            id:2,\n            name:'vimukthi madushan',\n            tp:'077238404543436',\n            street:'sdfsdf',\n            city:'sdflndsfldsnfk',\n            state:'slfnsdflnsdf',\n            zip:'1203948234121'      \n                   \n        },\n        {\n            id:3,\n            name:'chalindu malshika',\n            tp:'077043543436',\n            street:'0324284',\n            city:'rathnapura',\n            state:'hdlfdfs',\n            zip:'139202121'     \n            \n             \n        },\n        {\n            id:4,\n            name:'chandima',\n            tp:'042342492',\n            street:'1234',\n            city:'jsdofjsdof',\n            state:'sdofjdsf',\n            zip:'12121'    \n                      \n        },\n    ])\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const toast = useToast()\n\n    //delete an addresss\n    const deleteAddress  = (id)=>{\n        setAddress(address.filter(\n            (address)=>address.id!==id\n        ))\n        toast({\n            position: \"bottom-right\",    \n            description: \"Shipping address deleted successfully\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n    }\n\n    //add new address\n    const addAddress = (Address)=>{\n        const id = Math.floor(Math.random()*100)+1\n        const newAddress = {id,...Address}\n        setAddress([...address,newAddress]);\n\n    }\n\n    //update address\n    const updateAddress  = async(data)=>{\n        console.log('update address data ----------------')\n        console.log(data);\n        // setTasks(tasks.map(\n        //     (task)=>task.id===id?{...task,reminder:data.reminder}:task\n        //   ))\n        // await setAddress(address.map(\n        //     (address1)=>address1.id==data.id?{...address1,name:data.name}:address1\n        // ))\n        // // console.log(address[0])\n        \n   \n        setAddress(address.map(\n            (address1)=>(address1.id==data.id)?{...address1,data}:address1\n        ))\n        \n\n\n    }\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    \n\n    return (\n        <Box\n        \n        pt=\"100px\"\n        // pl={{ base: \"10px\", sm: \"100px\" }}\n        // pr={{ base: \"10px\", sm: \"100px\" }} \n        >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(1, 1fr)\"\n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"customeraddress\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\n\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> My Shipping Address </Heading> \n                                    </Box>\n                                    <Spacer />\n                                    <Box p=\"1\">\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\n                                            Add Shipping Address\n                                        </Button>\n                    \n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                                            <ModalOverlay />\n                                                <ModalContent>\n                                                    <ModalHeader>Add New Shipping Address</ModalHeader>\n                                                    <ModalCloseButton />\n                                                    <ModalBody pb='5'>\n                                                    <AddAddress addAddress={addAddress} trigger={onClose}/>\n                                                     </ModalBody>\n                                                    \n                                                </ModalContent>\n                                            </Modal>\n\n                                    </Box>\n                                 \n                                 </Flex>\n                            </GridItem>\n\n                       \n                                <ShipAddressses addresses={address} deleteAddress={deleteAddress}  updateAddress={updateAddress}  />\n  \n                        </Grid>\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CustomerAddress\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js",["161","162","163","164","165"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Avatar,\n    Divider,\n    Heading,\n    SimpleGrid,\n    Text,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\n\n\nconst CustomerDashboard = () => {\n\n    const [userdata, setUserdata] = useState(\n        {\n            user_id:'12345',\n            user_name:'Pasan Madushan',\n            image:'https://images.unsplash.com/photo-1553267751-1c148a7280a1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\n            orders:{\n                all:12,\n                await_pay:15,\n                await_ship:35,\n                await_del:45,\n                delivered:56\n            }\n        }\n    )\n    \n    const { colorMode, toggleColorMode } = useColorMode();\n\n\n    return (\n        <Box\n        \n        pt=\"100px\"\n        // pl={{ base: \"10px\", sm: \"100px\" }}\n        // pr={{ base: \"10px\", sm: \"100px\" }} \n        >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(2, 1fr)\"\n                \n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"dashboard\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} m={5} mt={8}>\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"\n                        \n                        overflow=\"hidden\"\n                        p=\"10px\"\n                        pb=\"5px\"\n                        bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n                        borderRadius='10px'\n                        >\n                        \n                        <Grid \n                            templateRows=\"repeat(2, 1fr)\"\n                            gap={4}\n                            \n                        >\n                            <GridItem p=\"10px\"  >\n                                  <SimpleGrid columns={2} spacing={5}>\n                                        <Box >\n                                            <Avatar\n                                                size=\"xl\"\n                                                name={userdata.user_name}\n                                                src={userdata.image}\n                                            />\n                                        </Box>\n                                        <Box >\n                                        <Heading size='lg'> Hello, {userdata.user_name} </Heading>\n                                        </Box>\n                                    </SimpleGrid>\n    \n                            </GridItem >\n                            \n                            <GridItem >\n                                       <Box \n                                        bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                                        borderRadius='md'\n                                       \n                                        color='white'\n                                       >\n                                           <SimpleGrid columns={5} spacing={5} pt='10px' pb='10px'>\n\n                                                <Box textAlign='center' >\n                                                    \n                                                    <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.all} </Heading>\n                                                    \n                                                    <Text  textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>All orders</Text>\n                                                </Box> \n                                                <Box textAlign='center'>\n                                                    <Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h4' size='lg'> {userdata.orders.await_pay} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Payment</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                    <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.await_ship} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Shipment</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                   <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.await_del} </Heading>\n                                                    \n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Delivery</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                    <Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h4' size='lg'> {userdata.orders.delivered} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>  Delivered</Text>\n                                                </Box>\n                                            </SimpleGrid> \n\n                                       </Box>\n                            </GridItem>\n                            \n                        </Grid>\n\n                    </Box>\n\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CustomerDashboard\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js",["166","167"],"import {\n    Box,\n    Grid,\n    GridItem,\n    useColorMode,\n    Flex,\n    Heading,\n    useDisclosure,\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\nimport ChangePersonalDetails from \"../components/ChangePersonalDetForm\";\n\n\n\nconst ChangePersonalDet = () => { \n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const [personaldet,setPersonaldet] = useState(\n        {\n            id:1,\n            firstName:'pasan',\n            lastName:'madushan',\n            tp:'07704543436',                               \n        },)\n\n    //implement change password\n\n    const updateDetails = (data)=>{\n        setPersonaldet(data)\n        console.log(personaldet)\n    }\n\n\n        return (\n            <Box\n            \n            pt=\"100px\"\n            // pl={{ base: \"10px\", sm: \"100px\" }}\n            // pr={{ base: \"10px\", sm: \"100px\" }} \n            >\n                \n                <Grid\n            \n            templateColumns=\"repeat(5, 1fr)\"\n            templateRows=\"repeat(1, 1fr)\"\n            \n        >        \n            <GridItem  colSpan={1} rowSpan={2} >\n                <CustomerDashSideBar page=\"customeraddress\" />\n            </GridItem>\n        \n            <GridItem colSpan={4} >\n                <Box \n                    width=\"auto\"\n                    h=\"auto\"                   \n                    overflow=\"hidden\"                    \n                    pb=\"5px\"                      \n                    >\n                    \n                  </Box>\n\n                    <Grid templateColumns=\"repeat(3)\">\n\n                        <GridItem bg='cyan.900' p='10px' colSpan={3}>\n                            <Flex> \n                                <Box  p=\"3\">\n                                <Heading as='h3' size='md' color='white'> Change Account Details </Heading> \n                                </Box>\n                                                   \n                             </Flex>\n                        </GridItem>\n\n                        <GridItem colSpan={2}>\n                              <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'>         \n                            <ChangePersonalDetails data={personaldet} updateDetails={updateDetails}/>   \n                            </Box>\n                       </GridItem>\n\n                       <GridItem >\n                       <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'> \n                       <ChangePasswordForm />\n                       \n                       </Box>\n                       </GridItem>\n\n                    </Grid>\n            </GridItem>\n\n         \n        </Grid>\n\n    \n            </Box>\n        )\n\n\n}\n\nexport default ChangePersonalDet","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js",["168","169","170","171","172","173"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,\n    Text,\n    Divider,\n    Link,\n    Button,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\n\n\nconst CustomerDashSideBar = ({page}) => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const sidebarButton = {\n        width:'80%',   \n        marginTop:'7px',\n        marginBottom:'7px',\n        marginLeft:'10%',\n        marginRight:'10%'\n    }\n\n    return (\n        <Box\n            width=\"auto\"\n            height={window.innerHeight-100}\n            // height=\"100%\"\n            overflow=\"hidden\"\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            pt='5'  \n           \n                    \n        >                   \n                <Link href='/customerdashboard'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Dashboard </Button> </Link>     \n          \n                <Link href='/allorders'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> My Orders  </Button> </Link>     \n         \n                <Link href='/carddetails'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Card & Bank Details  </Button></Link>     \n            \n                <Link href='/shippingaddress'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Shipping Address </Button></Link>     \n         \n                <Link href='/changepersonaldet'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Change Account Details </Button></Link>     \n           \n        </Box>\n    )\n}\n\nexport default CustomerDashSideBar\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"import {React, useState} from 'react'\nimport {\n    Box,\n    Button,\n    GridItem,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useColorMode,\n    useDisclosure,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    ButtonGroup,\n    FormControl,\n    FormLabel,\n    Input\n  } from \"@chakra-ui/react\";\n\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\n\n\nconst ShipAddress = ({address,deleteAddress,updateAddress}) => {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const [data, setData] = useState({\n        id: address.id,\n        name: address.name,\n        tp: address.tp,\n        street: address.street,\n        city: address.city,\n        state: address.state,\n        zip: address.zip,\n    })\n    \n    const handleSubmit = (e)=>{\n        e.preventDefault()\n        // console.log('---------handlesubmit data--------')\n        // console.log(data)\n        updateAddress(data)\n        \n        // updateAddress(address.id)\n    }\n\n    const handleChange =  (event) => {\n        var value = event.target.value;\n        var name = event.target.name;\n\n        setData({ ...data, [event.target.name]: value })\n        // console.log(data)\n    };\n\n\n    return(\n        <GridItem>\n        <Box  \n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            borderRadius='md'\n            border='1px'\n            borderColor='cyan.600'\n            p='6'\n            m='4'\n            pb='3'\n           \n            >\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                    <ImUser />\n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"lg\"       \n                        ml=\"2\"\n                    >\n                        { address.name }\n                    </Box>\n                </Box> \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                    <ImPhone color='cyan.600'/>\n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        { address.tp }\n                    </Box>\n                </Box> \n\n                <Box d=\"flex\" alignItems=\"baseline\" mt='2' mb='5'>\n                \n                    <ImLocation m='3'/>\n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        <Box>{ address.street }</Box>\n                        <Box>{ address.city }</Box>\n                        <Box>{ address.state }</Box>\n                        <Box>{ address.zip }</Box>\n                    </Box>\n                </Box> \n               \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n\n                    {/* Delete Address */}\n                \n                    <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader fontWeight=\"semibold\">Delete Shipping Address</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody>\n                            Are you sure you want to delete the shipping address?\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteAddress(address.id)}}>Delete</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                   \n                </Box>\n\n        </Box>\n        </GridItem>\n    )\n}\n\nexport default ShipAddress\n\n\n\n\n\n\n                    {/* {/* Edit Address \n\n                     <Button colorScheme=\"teal\" size=\"xs\" mr='2' onClick={onOpen} >\n                        Edit\n                    </Button> \n                    {/* Edit modal */}\n                    // <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                    //     <ModalOverlay />\n                    //     <ModalContent>\n                    //         <ModalHeader>Edit shipping address</ModalHeader>\n                    //             <ModalCloseButton />\n                           \n                        // <form onSubmit={handleSubmit}>\n                        //     <ModalBody>\n                            \n                        //     <FormControl id=\"name\" > */}\n                        //         <FormLabel>Name</FormLabel>\n                                \n                        //         <Input   \n                        //         placeholder='Name'       \n                        //         value={data.name}\n                        //         name='name'\n                        //         onChange={(event) => handleChange(event)}\n                        //         />\n                        //     </FormControl>\n\n                        //     <FormControl id=\"tp\" >\n                        //         <FormLabel>Telephone</FormLabel>\n                        //         <Input \n                        //         placeholder=\"Telephone\" \n                            //     value={data.tp}\n                            //     name='tp'\n                            //     onChange={(event) => handleChange(event)}  />\n                            // </FormControl>\n\n                            // <FormControl id=\"street\" >\n                            //     <FormLabel>Street</FormLabel>\n                            //     <Input \n                            //     placeholder=\"street\" \n                            //     value={data.street}\n                            //     name='street'\n                            //     onChange={(event) => handleChange(event)} />\n                            // </FormControl>\n                            // <FormControl id=\"city\" >\n                            //     <FormLabel>City</FormLabel>\n                            //     <Input placeholder=\"city\" \n                            //     value={data.city}\n                            //     name='city'\n                            //     onChange={(event) => handleChange(event)} />\n                            // </FormControl>\n                            // <FormControl id=\"state\" >\n                            //     <FormLabel>State</FormLabel>\n                    //             <Input placeholder=\"state\" \n                    //             value={data.state}\n                    //             name='state'\n                    //             onChange={(event) => handleChange(event)}\n                    //             />\n                    //         </FormControl>\n                    //         <FormControl id=\"zip\" >\n                    //             <FormLabel>Zip</FormLabel>\n                    //             <Input placeholder=\"zip\" \n                    //             value={data.zip}\n                    //             name='zip'\n                    //             onChange={(event) => handleChange(event)}\n                    //             />\n                    //         </FormControl>\n                           \n                               \n                    //         </ModalBody>\n                    //         <ModalFooter>\n                    //         <Input mt='2' mb='2'  type=\"submit\" value='Update' className='btn btn-block' bg=\"teal.400\" color='white' onClick={onClose} />\n                    //             {/* <Button colorScheme=\"green\"  onClick={trigger} >Update</Button>                               */}\n                    //         </ModalFooter>\n                    //     </form>\n                    //     </ModalContent>\n                    // </Modal> */}\n\n    ","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js",["192","193"],"import {\n  Box,\n  Button,\n  Center,\n  Grid,\n  GridItem,\n  Heading,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nimport SearchBar from \"../components/SearchBar\";\nimport ProductCard from \"../components/ProductCard\";\n\nfunction CategoryPage() {\n  const [categories, setCategories] = useState([\n    \"All categories\",\n    \"Phones\",\n    \"Smart Watches\",\n    \"Tabs\",\n    \"Headphones\",\n    \"Chargers\",\n  ]);\n  const [activeCategory, setActiveCategory] = useState(categories[0]);\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([\n    {\n      item_ID: \"233d\",\n      item_name: \"Electric tooth brush\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:100,\n      rating:3,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:100,\n      rating:3,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"../images/iphone.jpg\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:250,\n      rating:4,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Out of stock\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:150,\n      rating:2,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:50,\n      rating:5,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n  ]);\n\n  var searchBarText = `Search in ${activeCategory}`;\n\n  const HandleClick = (category) => {\n    setActiveCategory(category);\n\n  };\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Center mb='10px'>\n        <SearchBar text={searchBarText} />\n      </Center>\n      <Grid\n        templateRows=\"repeat(1, 1fr)\"\n        templateColumns=\"repeat(5, 1fr)\"\n        gap={0}\n        pb='200px'\n      >\n        <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\n          <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\">\n            Categories\n          </Heading>\n          <VStack>\n            {Array(categories.length)\n              .fill(\"\")\n              .map((_, i) =>\n                categories[i] === activeCategory ? (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"gray\"\n                    isActive\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                ) : (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"gray\"\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                )\n              )}\n          </VStack>\n        </GridItem>\n        <GridItem\n          rowSpan={1}\n          colSpan={4}\n          borderWidth=\"1px\"\n          borderColor=\"gray.300\"\n          p=\"20px\"\n        >\n          <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\n            {activeCategory}\n          </Heading>\n          <Grid h=\"auto\" templateColumns=\"repeat(4, 1fr)\" gap={2}>\n            {Array(activeCategoryProducts.length)\n              .fill(\"\")\n              .map((_, i) => (\n                <ProductCard\n                  title={activeCategoryProducts[i].item_name}\n                  imageUrl={activeCategoryProducts[i].image}\n                  itemName= {activeCategoryProducts[i].item_name}\n                  category= {activeCategoryProducts[i].category}\n                  price= {activeCategoryProducts[i].price}\n                  orders= {activeCategoryProducts[i].orders}\n                  status={activeCategoryProducts[i].status}\n                  rating={activeCategoryProducts[i].rating}\n                  reviews={activeCategoryProducts[i].reviews}\n                  \n                />\n              ))}\n          </Grid>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default CategoryPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js",["194","195","196","197","198","199","200","201"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nfunction ProductCard(props) {\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Img src={props.imageUrl} alt={props.imageAlt} w='230px' h='250px' />\n\n      <Box p=\"6\">\n      <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            colorScheme='yellow'\n            variant=\"outline\" \n            fontSize='9px'\n          >\n            {props.category}\n          </Badge>\n        <Box fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" fontSize='xl' isTruncated>\n          {props.title}\n        </Box>\n       \n        <Box>\n          <Text color=\"gray.600\" fontSize=\"3xl\">\n            Rs. {props.price}\n          </Text>\n        </Box>\n\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\n          <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\n          >\n            {props.status}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {props.orders} Orders\n          </Box>\n        </Box>\n\n       \n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {props.reviews} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ProductCard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePasswordForm.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePersonalDetForm.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CardDetails.js",["202"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,  \n    Flex,\n    Spacer ,\n    Button,\n    useDisclosure,\n    Modal,\n    ModalBody,\n    ModalContent,\n    ModalOverlay,\n    ModalCloseButton,\n    ModalHeader,\n    useToast,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport AddBankCard from \"../components/AddBankCard\";\nimport BankCards from \"../components/BankCards\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\n\nconst CardDetails = () => {\n\n    const [bankCards,setBankCards] = useState([\n        {\n            cardNumber:323446453434,\n            owner:'pasan madushan',\n            cvv:'123',\n            expDate:'10/12',\n                  \n        },\n        {\n            cardNumber:323446453435,\n            owner:'vimukthi madushan',\n            cvv:'123',\n            expDate:'10/12',\n                  \n        },\n        {\n            cardNumber:323446453436,\n            owner:'chalindu malshika',\n            cvv:'123',\n            expDate:'10/12',\n                  \n        },\n        {\n            cardNumber:323446453437,\n            owner:'chandima prabath',\n            cvv:'123',\n            expDate:'10/12',\n                  \n        },\n    ])\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const toast = useToast()\n\n    //delete a card\n    const deleteBankCard  = (cardNumber)=>{\n        setBankCards(bankCards.filter(\n            (bankCard)=>bankCard.cardNumber!==cardNumber\n        ))\n        toast({\n            position: \"bottom-right\",    \n            description: \"Bank Card deleted successfully\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n    }\n\n    //add new card\n    const addBankCard = (CardDetails)=>{\n        setBankCards([...bankCards,CardDetails]);\n\n    }\n\n   \n    const { colorMode, toggleColorMode } = useColorMode();\n\n    \n\n    return (\n        <Box   pt=\"100px\">\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(1, 1fr)\"\n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"customeraddress\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\n\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> Card & Bank Details </Heading> \n                                    </Box>\n                                    <Spacer />\n                                    <Box p=\"1\">\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\n                                            Add New Payment Method\n                                        </Button>\n                    \n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                                            <ModalOverlay />\n                                                <ModalContent>\n                                                    <ModalHeader>Add New Payment Method</ModalHeader>\n                                                    <ModalCloseButton />\n                                                    <ModalBody pb='5'>\n                                                    <AddBankCard addBankCard={addBankCard} trigger={onClose}/>\n                                                     </ModalBody>\n                                                    \n                                                </ModalContent>\n                                            </Modal>\n\n                                    </Box>\n                                 \n                                 </Flex>\n                            </GridItem>\n\n                                <BankCards bankcards={bankCards} deleteBankCard={deleteBankCard} />\n                                \n                        </Grid>\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CardDetails\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCards.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCard.js",["203","204","205","206","207","208","209","210","211"],"import {React, useState} from 'react'\nimport {\n    Box,\n    Button,\n    GridItem,\n    useColorMode,\n    useDisclosure,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    ButtonGroup,\n    Heading,\n    HStack,\n    Spacer,\n    Image\n  } from \"@chakra-ui/react\";\n\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\n\n\nconst BankCard = ({bankcard,deleteBankCard}) => {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    \n\n    const [data, setData] = useState({\n        cardNumber:bankcard.card_number,\n        owner:bankcard.owner,\n        cvv:bankcard.cvv,\n        expDate:bankcard.expDate\n    })\n    \n\n    const handleChange =  (event) => {\n        var value = event.target.value;\n        var name = event.target.name;\n\n        setData({ ...data, [event.target.name]: value })\n        // console.log(data)\n    };\n\n\n    return(\n        <GridItem>\n        <Box  \n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            borderRadius='md'\n            border='1px'\n            borderColor='cyan.600'\n            p='6'\n            m='4'\n            pb='3'\n           \n            >\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                    \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"lg\"       \n                        ml=\"2\"\n                    >\n                       <Heading size='lg'> x x x x  x x x x {bankcard.cardNumber.toString().substr(8,13)} </Heading>\n                    </Box>\n                </Box> \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                   \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                       \n                    >\n                        { bankcard.owner }\n                    </Box>\n                </Box> \n               \n               <HStack mb='4'>\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        {bankcard.expDate}\n                    </Box>\n                </Box> \n                <Spacer />\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                <Image\n                    width='70px'\n                    src=\"../visa.png\"\n                    />\n                </Box> \n                </HStack>\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n\n                 \n                    {/* Delete Address */}\n                \n                    <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader fontWeight=\"semibold\">Delete Card Details</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody>\n                            Are you sure you want to delete card details?\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteBankCard(bankcard.cardNumber)}}>Delete</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                   \n                </Box>\n\n        </Box>\n        </GridItem>\n    )\n}\n\nexport default BankCard\n\n\n\n    ","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddBankCard.js",["212"],"import { useState } from 'react';\nimport{\n    FormControl,\n    FormLabel,\n    Input,\n    useToast\n\n} from \"@chakra-ui/react\";\n\nconst AddBankCard = ({addBankCard,trigger}) => {\n    const [cardNumber,setCardNumber] = useState('')\n    const [owner,setOwner] = useState('')\n    const [cvv,setCvv] = useState('')\n    const [expDate,setExpDate] = useState('')\n    \n\n    const toast = useToast()\n\n\n    const onSubmit = (e)=>{\n        e.preventDefault()\n\n        if(!cardNumber || !owner || !cvv || !expDate){\n            alert('Empty Field')\n            return\n        }\n\n        if(cardNumber.toString().length!==12){\n            alert('Invalid Card Number')\n            return\n        }\n    \n        var givenDate = new Date(expDate);\n        var today = new Date();\n        if (givenDate.getFullYear() < today.getFullYear()) {\n            alert('card is expired')\n            return\n        }\n        else if (givenDate.getFullYear() == today.getFullYear()){\n            if(givenDate.getMonth() < today.getMonth()){\n                alert('card is expired')\n                return\n            }\n        }\n    \n        \n        addBankCard({cardNumber,owner,cvv,expDate})\n\n        setCardNumber('')\n        setOwner('')\n        setCvv('')\n        setExpDate('')\n        \n        toast({\n            position: \"bottom-right\",    \n            description: \"New payment method added successfully\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          })\n    }\n\n    return (\n        <form  onSubmit={onSubmit} >\n            <FormControl>\n                <FormLabel>Card Number</FormLabel>\n                <Input type=\"number\" placeholder='Card Number' value={cardNumber} onChange={(e)=>setCardNumber(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Owner</FormLabel>\n                <Input type=\"text\" placeholder='Owner' value={owner} onChange={(e)=>setOwner(e.target.value)}  />\n            </FormControl>\n            <FormControl>\n                <FormLabel>CVV</FormLabel>\n                <Input type=\"number\" placeholder='CVV' value={cvv} onChange={(e)=>setCvv(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Exp Date</FormLabel>\n                <Input type=\"month\" placeholder='Exp Date' value={expDate} onChange={(e)=>setExpDate(e.target.value)} />\n            </FormControl>\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Card Details' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\n            \n        </form>\n    )\n}\n\nexport default AddBankCard\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/TrackOrder.js",["213","214"],"import React from 'react'\nimport { \n    Box,\n    Grid,\n    GridItem,\n    Heading,\n    Center,\n    useColorMode,\n    Badge,\n    Text\n        } from \"@chakra-ui/react\";\n\nconst TrackOrder = () => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n\n    return (\n        <Box \n            pt=\"110px\"\n            pl={{ base: \"10px\", sm: \"100px\" }}\n            pr={{ base: \"10px\", sm: \"100px\" }}\n        >\n            <Box mt='20px' mb='20px' p='3' bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\n                <Center><Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h3' size='md'>Track Your Order</Heading></Center>        \n            </Box>\n            <Grid\n                h=\"600px\"\n                templateRows=\"repeat(3, 1fr)\"\n                templateColumns=\"repeat(3, 1fr)\"\n                gap={4}\n            >\n                <GridItem colSpan={2}  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\n\n                <Box p='5'>\n                    <Badge mr='3' variant=\"outline\" fontSize='md' colorScheme=\"teal\">\n                    Estimated Delivery \n                    </Badge>\n                   dsdsd\n     \n                </Box>\n\n                </GridItem>\n\n                <GridItem bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\n\n                    <Box p='8'>\n                        xdsd\n                    </Box>\n\n                </GridItem>\n                <GridItem  rowSpan={2} colSpan={2} bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} />\n                <GridItem  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}/>\n            </Grid>\n\n        </Box>\n    )\n}\n\nexport default TrackOrder\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AllOrders.js",["215"],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTiles.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTile.js",["216","217","218"],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":4,"column":3,"nodeType":"225","messageId":"226","endLine":4,"endColumn":9},{"ruleId":"223","severity":1,"message":"227","line":9,"column":3,"nodeType":"225","messageId":"226","endLine":9,"endColumn":11},{"ruleId":"223","severity":1,"message":"228","line":22,"column":8,"nodeType":"225","messageId":"226","endLine":22,"endColumn":19},{"ruleId":"223","severity":1,"message":"229","line":23,"column":30,"nodeType":"225","messageId":"226","endLine":23,"endColumn":40},{"ruleId":"223","severity":1,"message":"230","line":28,"column":9,"nodeType":"225","messageId":"226","endLine":28,"endColumn":11},{"ruleId":"223","severity":1,"message":"231","line":29,"column":11,"nodeType":"225","messageId":"226","endLine":29,"endColumn":20},{"ruleId":"223","severity":1,"message":"232","line":29,"column":22,"nodeType":"225","messageId":"226","endLine":29,"endColumn":37},{"ruleId":"223","severity":1,"message":"233","line":40,"column":16,"nodeType":"225","messageId":"226","endLine":40,"endColumn":23},{"ruleId":"223","severity":1,"message":"234","line":3,"column":3,"nodeType":"225","messageId":"226","endLine":3,"endColumn":9},{"ruleId":"223","severity":1,"message":"235","line":5,"column":3,"nodeType":"225","messageId":"226","endLine":5,"endColumn":9},{"ruleId":"223","severity":1,"message":"236","line":8,"column":3,"nodeType":"225","messageId":"226","endLine":8,"endColumn":10},{"ruleId":"223","severity":1,"message":"237","line":9,"column":3,"nodeType":"225","messageId":"226","endLine":9,"endColumn":9},{"ruleId":"223","severity":1,"message":"238","line":14,"column":8,"nodeType":"225","messageId":"226","endLine":14,"endColumn":14},{"ruleId":"223","severity":1,"message":"231","line":17,"column":11,"nodeType":"225","messageId":"226","endLine":17,"endColumn":20},{"ruleId":"223","severity":1,"message":"232","line":17,"column":22,"nodeType":"225","messageId":"226","endLine":17,"endColumn":37},{"ruleId":"223","severity":1,"message":"239","line":18,"column":7,"nodeType":"225","messageId":"226","endLine":18,"endColumn":14},{"ruleId":"223","severity":1,"message":"232","line":14,"column":22,"nodeType":"225","messageId":"226","endLine":14,"endColumn":37},{"ruleId":"223","severity":1,"message":"240","line":6,"column":3,"nodeType":"225","messageId":"226","endLine":6,"endColumn":14},{"ruleId":"223","severity":1,"message":"241","line":11,"column":17,"nodeType":"225","messageId":"226","endLine":11,"endColumn":25},{"ruleId":"223","severity":1,"message":"232","line":14,"column":22,"nodeType":"225","messageId":"226","endLine":14,"endColumn":37},{"ruleId":"223","severity":1,"message":"236","line":5,"column":3,"nodeType":"225","messageId":"226","endLine":5,"endColumn":10},{"ruleId":"223","severity":1,"message":"242","line":9,"column":3,"nodeType":"225","messageId":"226","endLine":9,"endColumn":16},{"ruleId":"223","severity":1,"message":"243","line":10,"column":3,"nodeType":"225","messageId":"226","endLine":10,"endColumn":8},{"ruleId":"223","severity":1,"message":"244","line":11,"column":3,"nodeType":"225","messageId":"226","endLine":11,"endColumn":15},{"ruleId":"223","severity":1,"message":"245","line":12,"column":3,"nodeType":"225","messageId":"226","endLine":12,"endColumn":15},{"ruleId":"223","severity":1,"message":"246","line":18,"column":16,"nodeType":"225","messageId":"226","endLine":18,"endColumn":24},{"ruleId":"247","severity":1,"message":"248","line":110,"column":37,"nodeType":"249","messageId":"250","endLine":110,"endColumn":39},{"ruleId":"223","severity":1,"message":"232","line":117,"column":24,"nodeType":"225","messageId":"226","endLine":117,"endColumn":39},{"ruleId":"223","severity":1,"message":"251","line":6,"column":5,"nodeType":"225","messageId":"226","endLine":6,"endColumn":12},{"ruleId":"223","severity":1,"message":"252","line":14,"column":10,"nodeType":"225","messageId":"226","endLine":14,"endColumn":19},{"ruleId":"223","severity":1,"message":"253","line":15,"column":8,"nodeType":"225","messageId":"226","endLine":15,"endColumn":14},{"ruleId":"223","severity":1,"message":"254","line":21,"column":22,"nodeType":"225","messageId":"226","endLine":21,"endColumn":33},{"ruleId":"223","severity":1,"message":"232","line":36,"column":24,"nodeType":"225","messageId":"226","endLine":36,"endColumn":39},{"ruleId":"223","severity":1,"message":"242","line":8,"column":5,"nodeType":"225","messageId":"226","endLine":8,"endColumn":18},{"ruleId":"223","severity":1,"message":"232","line":20,"column":24,"nodeType":"225","messageId":"226","endLine":20,"endColumn":39},{"ruleId":"223","severity":1,"message":"255","line":3,"column":5,"nodeType":"225","messageId":"226","endLine":3,"endColumn":9},{"ruleId":"223","severity":1,"message":"256","line":4,"column":5,"nodeType":"225","messageId":"226","endLine":4,"endColumn":13},{"ruleId":"223","severity":1,"message":"236","line":5,"column":5,"nodeType":"225","messageId":"226","endLine":5,"endColumn":12},{"ruleId":"223","severity":1,"message":"257","line":6,"column":5,"nodeType":"225","messageId":"226","endLine":6,"endColumn":9},{"ruleId":"223","severity":1,"message":"251","line":7,"column":5,"nodeType":"225","messageId":"226","endLine":7,"endColumn":12},{"ruleId":"223","severity":1,"message":"232","line":17,"column":24,"nodeType":"225","messageId":"226","endLine":17,"endColumn":39},{"ruleId":"223","severity":1,"message":"243","line":6,"column":5,"nodeType":"225","messageId":"226","endLine":6,"endColumn":10},{"ruleId":"223","severity":1,"message":"244","line":7,"column":5,"nodeType":"225","messageId":"226","endLine":7,"endColumn":17},{"ruleId":"223","severity":1,"message":"245","line":8,"column":5,"nodeType":"225","messageId":"226","endLine":8,"endColumn":17},{"ruleId":"223","severity":1,"message":"258","line":9,"column":5,"nodeType":"225","messageId":"226","endLine":9,"endColumn":16},{"ruleId":"223","severity":1,"message":"259","line":10,"column":5,"nodeType":"225","messageId":"226","endLine":10,"endColumn":16},{"ruleId":"223","severity":1,"message":"260","line":11,"column":5,"nodeType":"225","messageId":"226","endLine":11,"endColumn":14},{"ruleId":"223","severity":1,"message":"261","line":12,"column":5,"nodeType":"225","messageId":"226","endLine":12,"endColumn":21},{"ruleId":"223","severity":1,"message":"262","line":24,"column":5,"nodeType":"225","messageId":"226","endLine":24,"endColumn":16},{"ruleId":"223","severity":1,"message":"263","line":25,"column":5,"nodeType":"225","messageId":"226","endLine":25,"endColumn":14},{"ruleId":"223","severity":1,"message":"264","line":26,"column":5,"nodeType":"225","messageId":"226","endLine":26,"endColumn":10},{"ruleId":"223","severity":1,"message":"265","line":34,"column":13,"nodeType":"225","messageId":"226","endLine":34,"endColumn":19},{"ruleId":"223","severity":1,"message":"266","line":34,"column":21,"nodeType":"225","messageId":"226","endLine":34,"endColumn":27},{"ruleId":"223","severity":1,"message":"267","line":34,"column":29,"nodeType":"225","messageId":"226","endLine":34,"endColumn":36},{"ruleId":"223","severity":1,"message":"232","line":36,"column":24,"nodeType":"225","messageId":"226","endLine":36,"endColumn":39},{"ruleId":"223","severity":1,"message":"268","line":48,"column":11,"nodeType":"225","messageId":"226","endLine":48,"endColumn":23},{"ruleId":"223","severity":1,"message":"269","line":57,"column":11,"nodeType":"225","messageId":"226","endLine":57,"endColumn":23},{"ruleId":"223","severity":1,"message":"270","line":59,"column":13,"nodeType":"225","messageId":"226","endLine":59,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":155,"column":21,"nodeType":"273","messageId":"274","endLine":160,"endColumn":39},{"ruleId":"223","severity":1,"message":"275","line":16,"column":22,"nodeType":"225","messageId":"226","endLine":16,"endColumn":35},{"ruleId":"223","severity":1,"message":"276","line":25,"column":34,"nodeType":"225","messageId":"226","endLine":25,"endColumn":59},{"ruleId":"223","severity":1,"message":"277","line":5,"column":3,"nodeType":"225","messageId":"226","endLine":5,"endColumn":15},{"ruleId":"223","severity":1,"message":"235","line":6,"column":3,"nodeType":"225","messageId":"226","endLine":6,"endColumn":9},{"ruleId":"223","severity":1,"message":"240","line":7,"column":3,"nodeType":"225","messageId":"226","endLine":7,"endColumn":14},{"ruleId":"223","severity":1,"message":"234","line":8,"column":3,"nodeType":"225","messageId":"226","endLine":8,"endColumn":9},{"ruleId":"223","severity":1,"message":"237","line":9,"column":3,"nodeType":"225","messageId":"226","endLine":9,"endColumn":9},{"ruleId":"223","severity":1,"message":"236","line":10,"column":3,"nodeType":"225","messageId":"226","endLine":10,"endColumn":10},{"ruleId":"223","severity":1,"message":"278","line":11,"column":3,"nodeType":"225","messageId":"226","endLine":11,"endColumn":8},{"ruleId":"223","severity":1,"message":"241","line":15,"column":17,"nodeType":"225","messageId":"226","endLine":15,"endColumn":25},{"ruleId":"223","severity":1,"message":"232","line":82,"column":24,"nodeType":"225","messageId":"226","endLine":82,"endColumn":39},{"ruleId":"223","severity":1,"message":"279","line":23,"column":10,"nodeType":"225","messageId":"226","endLine":23,"endColumn":16},{"ruleId":"223","severity":1,"message":"280","line":23,"column":17,"nodeType":"225","messageId":"226","endLine":23,"endColumn":24},{"ruleId":"223","severity":1,"message":"281","line":23,"column":26,"nodeType":"225","messageId":"226","endLine":23,"endColumn":36},{"ruleId":"223","severity":1,"message":"265","line":28,"column":13,"nodeType":"225","messageId":"226","endLine":28,"endColumn":19},{"ruleId":"223","severity":1,"message":"266","line":28,"column":21,"nodeType":"225","messageId":"226","endLine":28,"endColumn":27},{"ruleId":"223","severity":1,"message":"267","line":28,"column":29,"nodeType":"225","messageId":"226","endLine":28,"endColumn":36},{"ruleId":"223","severity":1,"message":"232","line":30,"column":24,"nodeType":"225","messageId":"226","endLine":30,"endColumn":39},{"ruleId":"223","severity":1,"message":"269","line":42,"column":11,"nodeType":"225","messageId":"226","endLine":42,"endColumn":23},{"ruleId":"223","severity":1,"message":"270","line":44,"column":13,"nodeType":"225","messageId":"226","endLine":44,"endColumn":17},{"ruleId":"247","severity":1,"message":"248","line":39,"column":42,"nodeType":"249","messageId":"250","endLine":39,"endColumn":44},{"ruleId":"223","severity":1,"message":"257","line":10,"column":5,"nodeType":"225","messageId":"226","endLine":10,"endColumn":9},{"ruleId":"223","severity":1,"message":"232","line":15,"column":24,"nodeType":"225","messageId":"226","endLine":15,"endColumn":39},{"ruleId":"223","severity":1,"message":"232","line":21,"column":24,"nodeType":"225","messageId":"226","endLine":21,"endColumn":39},{"ruleId":"223","severity":1,"message":"232","line":29,"column":24,"nodeType":"225","messageId":"226","endLine":29,"endColumn":39},{"ruleId":"247","severity":1,"message":"248","line":53,"column":18,"nodeType":"249","messageId":"250","endLine":53,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":59,"column":24,"nodeType":"249","messageId":"250","endLine":59,"endColumn":26},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'Center' is defined but never used.","Identifier","unusedVar","'Progress' is defined but never used.","'ImageLoader' is defined but never used.","'SearchIcon' is defined but never used.","'id' is assigned a value but never used.","'colorMode' is assigned a value but never used.","'toggleColorMode' is assigned a value but never used.","'setData' is assigned a value but never used.","'HStack' is defined but never used.","'Avatar' is defined but never used.","'Heading' is defined but never used.","'VStack' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'AvatarBadge' is defined but never used.","'useState' is defined but never used.","'useDisclosure' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Divider' is defined but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.","'setUserdata' is assigned a value but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'Text' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'name' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'setCategories' is assigned a value but never used.","'setActiveCategoryProducts' is assigned a value but never used.","'useColorMode' is defined but never used.","'Image' is defined but never used.","'ImUser' is defined but never used.","'ImPhone' is defined but never used.","'ImLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]




[{"F:\\DB_Project\\Front-end-react\\src\\index.js":"1","F:\\DB_Project\\Front-end-react\\src\\App.js":"2","F:\\DB_Project\\Front-end-react\\src\\pages\\Home.js":"3","F:\\DB_Project\\Front-end-react\\src\\pages\\SpecficProductPage.js":"4","F:\\DB_Project\\Front-end-react\\src\\components\\Navbar.js":"5","F:\\DB_Project\\Front-end-react\\src\\components\\CategorizedReviewPreview.js":"6","F:\\DB_Project\\Front-end-react\\src\\components\\Replys.js":"7","F:\\DB_Project\\Front-end-react\\src\\components\\ReviewCountPreview.js":"8","F:\\DB_Project\\Front-end-react\\src\\pages\\CategoryPage.js":"9","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBar.js":"10","F:\\DB_Project\\Front-end-react\\src\\components\\ProductCard.js":"11"},{"size":334,"mtime":1612288754563,"results":"12","hashOfConfig":"13"},{"size":760,"mtime":1612551734359,"results":"14","hashOfConfig":"13"},{"size":119,"mtime":1612288754563,"results":"15","hashOfConfig":"13"},{"size":8210,"mtime":1612551734396,"results":"16","hashOfConfig":"13"},{"size":3441,"mtime":1612551734360,"results":"17","hashOfConfig":"13"},{"size":1820,"mtime":1612288754561,"results":"18","hashOfConfig":"13"},{"size":953,"mtime":1612288754561,"results":"19","hashOfConfig":"13"},{"size":2373,"mtime":1612288754562,"results":"20","hashOfConfig":"13"},{"size":5410,"mtime":1612551734396,"results":"21","hashOfConfig":"13"},{"size":620,"mtime":1612551734370,"results":"22","hashOfConfig":"13"},{"size":1997,"mtime":1612551734369,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1n5sntt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"F:\\DB_Project\\Front-end-react\\src\\index.js",[],["54","55"],"F:\\DB_Project\\Front-end-react\\src\\App.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\Home.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\SpecficProductPage.js",["56","57","58","59"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Heading,\r\n  HStack,\r\n  IconButton,\r\n  Image,\r\n  SimpleGrid,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nimport { AddIcon, MinusIcon, StarIcon } from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction SpecificProductPage() {\r\n  let { id } = useParams();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  \r\n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\r\n\r\n  const quantity_inc = () => {\r\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\r\n  };\r\n  const quantity_dec = () => {\r\n    if(currentOrder.quantity>0)setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"233d\",\r\n    item_name: \"Electric tooth brush\",\r\n    category: \"electronic\",\r\n    price: 200.0,\r\n    orders: 345,\r\n    description:\r\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n    status: \"Available\",\r\n    feedbacks: [\r\n      {\r\n        customer_name: \"jof hagi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"asdasds asdasd sad\",\r\n        rating: 4,\r\n        reply: [\"sfsdfsd\", \"Thank you\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 5,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"gendi gahnadi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"hgfhf dghhdgf dfgshssdd\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        varient_name: \"white 2 brushes\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n        color: \"green\",\r\n        details: \"\",\r\n        Quantity: 450,\r\n      },\r\n      {\r\n        varient_name: \"pink 2 brushes with bateries\",\r\n        image:\r\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\r\n        color: \"pink\",\r\n        details: \"\",\r\n        Quantity: 230,\r\n      },\r\n      {\r\n        varient_name: \"two heads only\",\r\n        image:\r\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\r\n        color: \"blue\",\r\n        details: \"\",\r\n        Quantity: 500,\r\n      },\r\n    ],\r\n  });\r\n\r\n  var imageStack = new Array(data.variants.length)\r\n    .fill(0)\r\n    .map((zero, index) => (\r\n      <Box\r\n        cursor=\"pointer\"\r\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\r\n        borderColor=\"gray.500\"\r\n        onClick={() => setCurrentOrder({ ...currentOrder, varient: index })}\r\n      >\r\n        <Image\r\n          src={data.variants[index].image}\r\n          w=\"100px\"\r\n          h=\"100px\"\r\n          alt=\"image\"\r\n        />\r\n      </Box>\r\n    ));\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n\r\n    >\r\n    <Center mb='20px'>\r\n      <SearchBar text=\"I'm shopping for\" />\r\n    </Center>\r\n    <Box>\r\n      \r\n    </Box>\r\n      <SimpleGrid columns={2} spacing={5} minChildWidth=\"400px\"       \r\n          borderWidth=\"2px\"\r\n          borderRadius=\"lg\"\r\n          borderColor=\"gray.300\">\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p=\"5px\"\r\n        >\r\n          <Image\r\n            src={data.variants[currentOrder.varient].image}\r\n            w=\"auto\"\r\n            h=\"auto\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            {data.item_name}\r\n          </Heading>\r\n\r\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\r\n            {data.category}\r\n          </Text>\r\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < data.feedbacks[0].rating ? \"cyan.500\" : \"cyan.300\"}\r\n                />\r\n              ))}\r\n            <Box as=\"span\" ml=\"2\"  fontSize=\"sm\">\r\n              {data.feedbacks.length} reviews &bull; {data.orders} orders\r\n            </Box>\r\n          </Box>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Varient\r\n          </Heading>\r\n          <HStack mt=\"20px\">{imageStack}</HStack>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Quantity\r\n          </Heading>\r\n          <HStack mt=\"10px\">\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<AddIcon />}\r\n              onClick={quantity_inc}\r\n            />\r\n            <Text>{currentOrder.quantity}</Text>\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<MinusIcon />}\r\n              onClick={quantity_dec}\r\n            />\r\n          </HStack>\r\n\r\n          <HStack mt=\"20px\">\r\n            <Button colorScheme=\"cyan\" color=\"white\" size=\"lg\">\r\n              Buy now\r\n            </Button>\r\n            <Button colorScheme=\"orange\" size=\"lg\" variant=\"outline\">\r\n              Add to cart\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Box>\r\n      </SimpleGrid>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"10px\"\r\n\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb='20px'>\r\n          Description\r\n        </Heading>\r\n        <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\r\n            {data.description}\r\n          </Text>\r\n      </Box>  \r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"100px\"\r\n\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb='20px'>\r\n          Reviews\r\n        </Heading>\r\n        \r\n        <ReviewCountPreview feedbacks={data.feedbacks}/>\r\n          <Tabs>\r\n          <TabList>\r\n          <Tab><StarIcon color=\"cyan.500\"/> All</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 5</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 4</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 3</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 2</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 1</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ='all' />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={5} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={4} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={3} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={2} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={1} />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SpecificProductPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Navbar.js",["60","61","62","63","64","65"],"import React from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  useColorMode,\r\n  IconButton,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ReactRouterLink,\r\n  Img,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\n\r\nfunction Navbar(props) {\r\n  const MenuItems = ({ children }) => (\r\n    <Button\r\n      mt={{ base: 4, md: 0 }}\r\n      mr={6}\r\n      display=\"block\"\r\n      colorScheme=\"teal.500\"\r\n      variant=\"link\"\r\n      color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.100\"}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      pt=\"1.0rem\"\r\n      bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      color=\"white\"\r\n      position=\"fixed\"\r\n      top=\"0\"\r\n      width=\"100%\"\r\n      zIndex=\"10000\"\r\n    >\r\n      <Flex align=\"center\" mr={5}>\r\n        <Img ml=\"1.5rem\" src=\"../logo.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\r\n      </Flex>\r\n\r\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\r\n        <HamburgerIcon />\r\n      </Box>\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\r\n        width={{ base: \"full\", md: \"auto\" }}\r\n        alignItems=\"center\"\r\n        flexGrow={1}\r\n        pl=\"20px\"\r\n      >\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\r\n            Home\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\r\n            Contact us\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\r\n            About us\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\r\n            Help\r\n          </Link>\r\n        </MenuItems>\r\n      </Box>\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n        mt={{ base: 4, md: 0 }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"lg\"\r\n          icon={<Icon as={FiShoppingCart} w={8} h={8}  />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n        />\r\n        <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"md\"\r\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          onClick={toggleColorMode}\r\n        />\r\n        <a href=\"/\">\r\n          <Button\r\n            type=\"button\"\r\n            border=\"1px\"\r\n            variant=\"ghost\"\r\n            mr=\"1.5rem\"\r\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          >\r\n            Log out\r\n          </Button>\r\n        </a>\r\n      </Box>\r\n\r\n      <Box\r\n        w=\"100%\"\r\n        h=\"5px\"\r\n        b=\"0px\"\r\n        mt=\"10px\"\r\n        bg={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\CategorizedReviewPreview.js",["66"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction CategorizedReviewPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  var stars = (rating) => {\r\n    return Array(5)\r\n      .fill(\"\")\r\n      .map((_, j) => (\r\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\r\n      ));\r\n  };\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rating === props.rating || props.rating === 'all') {\r\n      reviews.push(\r\n        <Box mb='10px'>\r\n          <HStack>\r\n            <Avatar\r\n              name={props.feedbacks[i].customer_name}\r\n              src={props.feedbacks[i].customer_dp}\r\n            />\r\n            <Box\r\n              w=\"100%\"\r\n              borderWidth=\"2px\"\r\n              borderRadius=\"lg\"\r\n              p=\"10px\"\r\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\r\n            >\r\n              <Heading as=\"h5\" size=\"sm\">\r\n                {props.feedbacks[i].customer_name}\r\n              </Heading>\r\n              <Text>{props.feedbacks[i].comment}</Text>\r\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n                {stars(props.feedbacks[i].rating)}\r\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n                  {props.feedbacks[i].rating}/5\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </HStack>\r\n          <Replys replys={props.feedbacks[i].reply} />\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (reviews.length === 0) {\r\n    reviews.push(<Text>No reviews</Text>);\r\n  }\r\n\r\n  return <>{reviews}</>;\r\n}\r\n\r\nexport default CategorizedReviewPreview;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Replys.js",["67","68","69"],"import {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Replys(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const dp = \"\";\r\n\r\n  var replys = [];\r\n  for (var i = 0; i < props.replys.length; i++) {\r\n    replys.push(\r\n      <HStack spacing=\"10px\" w=\"100%\">\r\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\r\n        <Box\r\n          w=\"100%\"\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          p=\"10px\"\r\n          mt=\"20px\"\r\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\r\n        >\r\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\r\n          <Text>{props.replys[i]}</Text>\r\n        </Box>\r\n      </HStack>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box ml=\"100px\" mt='10px'>\r\n      <VStack w=\"100%\">{replys}</VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Replys;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ReviewCountPreview.js",["70","71","72","73","74","75","76","77"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n  VStack,\r\n  Progress,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction ReviewCountPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  const total_reviews = props.feedbacks.length;\r\n\r\n  var s5 = 0;\r\n  var s4 = 0;\r\n  var s3 = 0;\r\n  var s2 = 0;\r\n  var s1 = 0;\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rating === 5) {\r\n      s5 = s5 + 1;\r\n    } else if (props.feedbacks[i].rating === 4) {\r\n      s4 = s4 + 1;\r\n    } else if (props.feedbacks[i].rating === 3) {\r\n      s3 = s3 + 1;\r\n    } else if (props.feedbacks[i].rating === 2) {\r\n      s2 = s2 + 1;\r\n    } else if (props.feedbacks[i].rating === 1) {\r\n      s1 = s1 + 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          5 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s5} reviews\r\n        </Text>\r\n        <Progress value={(s5 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          4 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s4} reviews\r\n        </Text>\r\n        <Progress value={(s4 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          3 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s3} reviews\r\n        </Text>\r\n        <Progress value={(s3 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          2 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s2} reviews\r\n        </Text>\r\n        <Progress value={(s2 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          1 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s1} reviews\r\n        </Text>\r\n        <Progress value={(s1 / total_reviews) * 100} />\r\n      </Box>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default ReviewCountPreview;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CategoryPage.js",["78","79","80"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  useColorMode,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport ProductCard from \"../components/ProductCard\";\r\n\r\nfunction CategoryPage() {\r\n  const [categories, setCategories] = useState([\r\n    \"All categories\",\r\n    \"Phones\",\r\n    \"Smart Watches\",\r\n    \"Tabs\",\r\n    \"Headphones\",\r\n    \"Chargers\",\r\n  ]);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const [activeCategory, setActiveCategory] = useState(categories[0]);\r\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([\r\n    {\r\n      item_ID: \"233d\",\r\n      item_name: \"Electric tooth brush\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:100,\r\n      rating:3,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Available\",\r\n      image:\r\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n    },\r\n    {\r\n      item_ID: \"34cd\",\r\n      item_name: \"Iphone 8\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:100,\r\n      rating:3,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Available\",\r\n      image:\r\n        \"../images/iphone.jpg\",\r\n    },\r\n    {\r\n      item_ID: \"34cd\",\r\n      item_name: \"Iphone 8\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:250,\r\n      rating:4,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Out of stock\",\r\n      image:\r\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n    },\r\n    {\r\n      item_ID: \"34cd\",\r\n      item_name: \"Iphone 8\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:150,\r\n      rating:2,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Available\",\r\n      image:\r\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n    },\r\n    {\r\n      item_ID: \"34cd\",\r\n      item_name: \"Iphone 8\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:50,\r\n      rating:5,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Available\",\r\n      image:\r\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n    },\r\n  ]);\r\n\r\n  var searchBarText = `Search in ${activeCategory}`;\r\n\r\n  const HandleClick = (category) => {\r\n    setActiveCategory(category);\r\n\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb='10px'>\r\n        <SearchBar text={searchBarText} />\r\n      </Center>\r\n      <Grid\r\n        templateRows=\"repeat(1, 1fr)\"\r\n        templateColumns=\"repeat(5, 1fr)\"\r\n        gap={0}\r\n        pb='200px'\r\n      >\r\n        <GridItem rowSpan={1} colSpan={1} bg={colorMode === \"light\" ? \"gray.200\" : \"gray.600\"} p=\"10px\">\r\n          <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\r\n            Categories\r\n          </Heading>\r\n          <VStack>\r\n            {Array(categories.length)\r\n              .fill(\"\")\r\n              .map((_, i) =>\r\n                categories[i] === activeCategory ? (\r\n                  <Button\r\n                    w=\"100%\"\r\n                    variant=\"ghost\"\r\n                    colorScheme=\"gray\"\r\n                    isActive\r\n                    onClick={() => HandleClick(categories[i])}\r\n                  >\r\n                    {categories[i]}\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    w=\"100%\"\r\n                    variant=\"ghost\"\r\n                    colorScheme=\"gray\"\r\n                    onClick={() => HandleClick(categories[i])}\r\n                  >\r\n                    {categories[i]}\r\n                  </Button>\r\n                )\r\n              )}\r\n          </VStack>\r\n        </GridItem>\r\n        <GridItem\r\n          rowSpan={1}\r\n          colSpan={4}\r\n          borderWidth=\"1px\"\r\n          borderColor=\"gray.300\"\r\n          p=\"20px\"\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n            {activeCategory}\r\n          </Heading>\r\n          <Grid h=\"auto\" templateColumns=\"repeat(4, 1fr)\" gap={2}>\r\n            {Array(activeCategoryProducts.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <ProductCard\r\n                  title={activeCategoryProducts[i].item_name}\r\n                  imageUrl={activeCategoryProducts[i].image}\r\n                  itemName= {activeCategoryProducts[i].item_name}\r\n                  category= {activeCategoryProducts[i].category}\r\n                  price= {activeCategoryProducts[i].price}\r\n                  orders= {activeCategoryProducts[i].orders}\r\n                  status={activeCategoryProducts[i].status}\r\n                  rating={activeCategoryProducts[i].rating}\r\n                  reviews={activeCategoryProducts[i].reviews}\r\n                  \r\n                />\r\n              ))}\r\n          </Grid>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CategoryPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBar.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ProductCard.js",["81","82","83","84","85","86","87","88"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ProductCard(props) {\r\n  return (\r\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\r\n      <Img src={props.imageUrl} alt={props.imageAlt} w='230px' h='250px' />\r\n\r\n      <Box p=\"6\">\r\n      <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme='yellow'\r\n            variant=\"outline\" \r\n            fontSize='9px'\r\n          >\r\n            {props.category}\r\n          </Badge>\r\n        <Box fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" fontSize='xl' isTruncated>\r\n          {props.title}\r\n        </Box>\r\n       \r\n        <Box>\r\n          <Text color=\"gray.600\" fontSize=\"3xl\">\r\n            Rs. {props.price}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\r\n          <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\r\n          >\r\n            {props.status}\r\n          </Badge>\r\n          <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n            ml=\"2\"\r\n          >\r\n            {props.orders} Orders\r\n          </Box>\r\n        </Box>\r\n\r\n       \r\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n          {Array(5)\r\n            .fill(\"\")\r\n            .map((_, i) => (\r\n              <StarIcon\r\n                key={i}\r\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\r\n              />\r\n            ))}\r\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n            {props.reviews} reviews\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":28,"column":9,"nodeType":"95","messageId":"96","endLine":28,"endColumn":11},{"ruleId":"93","severity":1,"message":"97","line":29,"column":11,"nodeType":"95","messageId":"96","endLine":29,"endColumn":20},{"ruleId":"93","severity":1,"message":"98","line":29,"column":22,"nodeType":"95","messageId":"96","endLine":29,"endColumn":37},{"ruleId":"93","severity":1,"message":"99","line":40,"column":16,"nodeType":"95","messageId":"96","endLine":40,"endColumn":23},{"ruleId":"93","severity":1,"message":"100","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":10},{"ruleId":"93","severity":1,"message":"101","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":16},{"ruleId":"93","severity":1,"message":"102","line":10,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":8},{"ruleId":"93","severity":1,"message":"103","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":15},{"ruleId":"93","severity":1,"message":"104","line":12,"column":3,"nodeType":"95","messageId":"96","endLine":12,"endColumn":15},{"ruleId":"93","severity":1,"message":"105","line":18,"column":16,"nodeType":"95","messageId":"96","endLine":18,"endColumn":24},{"ruleId":"93","severity":1,"message":"98","line":14,"column":22,"nodeType":"95","messageId":"96","endLine":14,"endColumn":37},{"ruleId":"93","severity":1,"message":"106","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":14},{"ruleId":"93","severity":1,"message":"107","line":11,"column":17,"nodeType":"95","messageId":"96","endLine":11,"endColumn":25},{"ruleId":"93","severity":1,"message":"98","line":14,"column":22,"nodeType":"95","messageId":"96","endLine":14,"endColumn":37},{"ruleId":"93","severity":1,"message":"108","line":3,"column":3,"nodeType":"95","messageId":"96","endLine":3,"endColumn":9},{"ruleId":"93","severity":1,"message":"109","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":9},{"ruleId":"93","severity":1,"message":"100","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":10},{"ruleId":"93","severity":1,"message":"110","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":9},{"ruleId":"93","severity":1,"message":"111","line":14,"column":8,"nodeType":"95","messageId":"96","endLine":14,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":17,"column":11,"nodeType":"95","messageId":"96","endLine":17,"endColumn":20},{"ruleId":"93","severity":1,"message":"98","line":17,"column":22,"nodeType":"95","messageId":"96","endLine":17,"endColumn":37},{"ruleId":"93","severity":1,"message":"112","line":18,"column":7,"nodeType":"95","messageId":"96","endLine":18,"endColumn":14},{"ruleId":"93","severity":1,"message":"113","line":17,"column":22,"nodeType":"95","messageId":"96","endLine":17,"endColumn":35},{"ruleId":"93","severity":1,"message":"98","line":26,"column":22,"nodeType":"95","messageId":"96","endLine":26,"endColumn":37},{"ruleId":"93","severity":1,"message":"114","line":28,"column":34,"nodeType":"95","messageId":"96","endLine":28,"endColumn":59},{"ruleId":"93","severity":1,"message":"115","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":15},{"ruleId":"93","severity":1,"message":"109","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":9},{"ruleId":"93","severity":1,"message":"106","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":14},{"ruleId":"93","severity":1,"message":"108","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":9},{"ruleId":"93","severity":1,"message":"110","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":9},{"ruleId":"93","severity":1,"message":"100","line":10,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":10},{"ruleId":"93","severity":1,"message":"116","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":8},{"ruleId":"93","severity":1,"message":"107","line":15,"column":17,"nodeType":"95","messageId":"96","endLine":15,"endColumn":25},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'colorMode' is assigned a value but never used.","'toggleColorMode' is assigned a value but never used.","'setData' is assigned a value but never used.","'Heading' is defined but never used.","'useDisclosure' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'Redirect' is defined but never used.","'AvatarBadge' is defined but never used.","'useState' is defined but never used.","'HStack' is defined but never used.","'Avatar' is defined but never used.","'VStack' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'setActiveCategoryProducts' is assigned a value but never used.","'useColorMode' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]

[{"C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\index.js":"1","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\App.js":"2","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\SpecficProductPage.js":"3","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\Home.js":"4","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\CategoryPage.js":"5","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\Navbar.js":"6","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\SearchBar.js":"7","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\ReviewCountPreview.js":"8","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\CategorizedReviewPreview.js":"9","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\ProductCard.js":"10","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\Replys.js":"11","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\FeedbackPage.js":"12","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\SellerDashboard.js":"13"},{"size":334,"mtime":1612599455044,"results":"14","hashOfConfig":"15"},{"size":1014,"mtime":1612805086136,"results":"16","hashOfConfig":"15"},{"size":8210,"mtime":1612791478636,"results":"17","hashOfConfig":"15"},{"size":119,"mtime":1612599455045,"results":"18","hashOfConfig":"15"},{"size":5410,"mtime":1612807013352,"results":"19","hashOfConfig":"15"},{"size":3441,"mtime":1612599455041,"results":"20","hashOfConfig":"15"},{"size":620,"mtime":1612599455043,"results":"21","hashOfConfig":"15"},{"size":2373,"mtime":1612599455042,"results":"22","hashOfConfig":"15"},{"size":1820,"mtime":1612718024074,"results":"23","hashOfConfig":"15"},{"size":1997,"mtime":1612599455041,"results":"24","hashOfConfig":"15"},{"size":953,"mtime":1612599455042,"results":"25","hashOfConfig":"15"},{"size":6790,"mtime":1612804058185,"results":"26","hashOfConfig":"15"},{"size":2765,"mtime":1612810692586,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"y798rl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\index.js",[],["62","63"],"C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\App.js",[],"C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\SpecficProductPage.js",["64","65","66","67"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Heading,\r\n  HStack,\r\n  IconButton,\r\n  Image,\r\n  SimpleGrid,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nimport { AddIcon, MinusIcon, StarIcon } from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction SpecificProductPage() {\r\n  let { id } = useParams();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  \r\n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\r\n\r\n  const quantity_inc = () => {\r\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\r\n  };\r\n  const quantity_dec = () => {\r\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"233d\",\r\n    item_name: \"Electric tooth brush\",\r\n    category: \"electronic\",\r\n    price: 200.0,\r\n    orders: 345,\r\n    description:\r\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n    status: \"Available\",\r\n    feedbacks: [\r\n      {\r\n        customer_name: \"jof hagi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"asdasds asdasd sad\",\r\n        rating: 4,\r\n        reply: [\"sfsdfsd\", \"Thank you\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 5,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"gendi gahnadi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"hgfhf dghhdgf dfgshssdd\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        varient_name: \"white 2 brushes\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n        color: \"green\",\r\n        details: \"\",\r\n        Quantity: 450,\r\n      },\r\n      {\r\n        varient_name: \"pink 2 brushes with bateries\",\r\n        image:\r\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\r\n        color: \"pink\",\r\n        details: \"\",\r\n        Quantity: 230,\r\n      },\r\n      {\r\n        varient_name: \"two heads only\",\r\n        image:\r\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\r\n        color: \"blue\",\r\n        details: \"\",\r\n        Quantity: 500,\r\n      },\r\n    ],\r\n  });\r\n\r\n  var imageStack = new Array(data.variants.length)\r\n    .fill(0)\r\n    .map((zero, index) => (\r\n      <Box\r\n        cursor=\"pointer\"\r\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\r\n        borderColor=\"gray.500\"\r\n        onClick={() => setCurrentOrder({ ...currentOrder, varient: index })}\r\n      >\r\n        <Image\r\n          src={data.variants[index].image}\r\n          w=\"100px\"\r\n          h=\"100px\"\r\n          alt=\"image\"\r\n        />\r\n      </Box>\r\n    ));\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n\r\n    >\r\n    <Center mb='20px'>\r\n      <SearchBar text=\"I'm shopping for\" />\r\n    </Center>\r\n    <Box>\r\n      \r\n    </Box>\r\n      <SimpleGrid columns={2} spacing={5} minChildWidth=\"400px\"       \r\n          borderWidth=\"2px\"\r\n          borderRadius=\"lg\"\r\n          borderColor=\"gray.300\">\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p=\"5px\"\r\n        >\r\n          <Image\r\n            src={data.variants[currentOrder.varient].image}\r\n            w=\"auto\"\r\n            h=\"auto\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            {data.item_name}\r\n          </Heading>\r\n\r\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\r\n            {data.category}\r\n          </Text>\r\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < data.feedbacks[0].rating ? \"cyan.500\" : \"cyan.300\"}\r\n                />\r\n              ))}\r\n            <Box as=\"span\" ml=\"2\"  fontSize=\"sm\">\r\n              {data.feedbacks.length} reviews &bull; {data.orders} orders\r\n            </Box>\r\n          </Box>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Varient\r\n          </Heading>\r\n          <HStack mt=\"20px\">{imageStack}</HStack>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Quantity\r\n          </Heading>\r\n          <HStack mt=\"10px\">\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<AddIcon />}\r\n              onClick={quantity_inc}\r\n            />\r\n            <Text>{currentOrder.quantity}</Text>\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<MinusIcon />}\r\n              onClick={quantity_dec}\r\n            />\r\n          </HStack>\r\n\r\n          <HStack mt=\"20px\">\r\n            <Button colorScheme=\"cyan\" color=\"white\" size=\"lg\">\r\n              Buy now\r\n            </Button>\r\n            <Button colorScheme=\"orange\" size=\"lg\" variant=\"outline\">\r\n              Add to cart\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Box>\r\n      </SimpleGrid>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"10px\"\r\n\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb='20px'>\r\n          Description\r\n        </Heading>\r\n        <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\r\n            {data.description}\r\n          </Text>\r\n      </Box>  \r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"100px\"\r\n\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb='20px'>\r\n          Reviews\r\n        </Heading>\r\n        \r\n        <ReviewCountPreview feedbacks={data.feedbacks}/>\r\n          <Tabs>\r\n          <TabList>\r\n          <Tab><StarIcon color=\"cyan.500\"/> All</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 5</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 4</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 3</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 2</Tab>\r\n            <Tab><StarIcon color=\"cyan.500\"/> 1</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ='all' />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={5} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={4} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={3} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={2} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={1} />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SpecificProductPage;\r\n","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\Home.js",[],"C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\CategoryPage.js",["68","69"],"C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\Navbar.js",["70","71","72","73","74","75"],"import React from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  useColorMode,\r\n  IconButton,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ReactRouterLink,\r\n  Img,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\n\r\nfunction Navbar(props) {\r\n  const MenuItems = ({ children }) => (\r\n    <Button\r\n      mt={{ base: 4, md: 0 }}\r\n      mr={6}\r\n      display=\"block\"\r\n      colorScheme=\"teal.500\"\r\n      variant=\"link\"\r\n      color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.100\"}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      pt=\"1.0rem\"\r\n      bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n      color=\"white\"\r\n      position=\"fixed\"\r\n      top=\"0\"\r\n      width=\"100%\"\r\n      zIndex=\"10000\"\r\n    >\r\n      <Flex align=\"center\" mr={5}>\r\n        <Img ml=\"1.5rem\" src=\"../logo.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\r\n      </Flex>\r\n\r\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\r\n        <HamburgerIcon />\r\n      </Box>\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\r\n        width={{ base: \"full\", md: \"auto\" }}\r\n        alignItems=\"center\"\r\n        flexGrow={1}\r\n        pl=\"20px\"\r\n      >\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\r\n            Home\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\r\n            Contact us\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\r\n            About us\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\r\n            Help\r\n          </Link>\r\n        </MenuItems>\r\n      </Box>\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n        mt={{ base: 4, md: 0 }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"lg\"\r\n          icon={<Icon as={FiShoppingCart} w={8} h={8}  />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n        />\r\n        <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"md\"\r\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          onClick={toggleColorMode}\r\n        />\r\n        <a href=\"/\">\r\n          <Button\r\n            type=\"button\"\r\n            border=\"1px\"\r\n            variant=\"ghost\"\r\n            mr=\"1.5rem\"\r\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          >\r\n            Log out\r\n          </Button>\r\n        </a>\r\n      </Box>\r\n\r\n      <Box\r\n        w=\"100%\"\r\n        h=\"5px\"\r\n        b=\"0px\"\r\n        mt=\"10px\"\r\n        bg={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\SearchBar.js",[],"C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\ReviewCountPreview.js",["76","77","78","79","80","81","82","83"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n  VStack,\r\n  Progress,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction ReviewCountPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  const total_reviews = props.feedbacks.length;\r\n\r\n  var s5 = 0;\r\n  var s4 = 0;\r\n  var s3 = 0;\r\n  var s2 = 0;\r\n  var s1 = 0;\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rating === 5) {\r\n      s5 = s5 + 1;\r\n    } else if (props.feedbacks[i].rating === 4) {\r\n      s4 = s4 + 1;\r\n    } else if (props.feedbacks[i].rating === 3) {\r\n      s3 = s3 + 1;\r\n    } else if (props.feedbacks[i].rating === 2) {\r\n      s2 = s2 + 1;\r\n    } else if (props.feedbacks[i].rating === 1) {\r\n      s1 = s1 + 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          5 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s5} reviews\r\n        </Text>\r\n        <Progress value={(s5 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          4 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s4} reviews\r\n        </Text>\r\n        <Progress value={(s4 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          3 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s3} reviews\r\n        </Text>\r\n        <Progress value={(s3 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          2 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s2} reviews\r\n        </Text>\r\n        <Progress value={(s2 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          1 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s1} reviews\r\n        </Text>\r\n        <Progress value={(s1 / total_reviews) * 100} />\r\n      </Box>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default ReviewCountPreview;\r\n","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\CategorizedReviewPreview.js",["84"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction CategorizedReviewPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  var stars = (rating) => {\r\n    return Array(5)\r\n      .fill(\"\")\r\n      .map((_, j) => (\r\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\r\n      ));\r\n  };\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rating === props.rating || props.rating === 'all') {\r\n      reviews.push(\r\n        <Box mb='10px'>\r\n          <HStack>\r\n            <Avatar\r\n              name={props.feedbacks[i].customer_name}\r\n              src={props.feedbacks[i].customer_dp}\r\n            />\r\n            <Box\r\n              w=\"100%\"\r\n              borderWidth=\"2px\"\r\n              borderRadius=\"lg\"\r\n              p=\"10px\"\r\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\r\n            >\r\n              <Heading as=\"h5\" size=\"sm\">\r\n                {props.feedbacks[i].customer_name}\r\n              </Heading>\r\n              <Text>{props.feedbacks[i].comment}</Text>\r\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n                {stars(props.feedbacks[i].rating)}\r\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n                  {props.feedbacks[i].rating}/5\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </HStack>\r\n          <Replys replys={props.feedbacks[i].reply} />\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (reviews.length === 0) {\r\n    reviews.push(<Text>No reviews</Text>);\r\n  }\r\n\r\n  return <>{reviews}</>;\r\n}\r\n\r\nexport default CategorizedReviewPreview;\r\n","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\ProductCard.js",["85","86","87","88","89","90","91","92"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ProductCard(props) {\r\n  return (\r\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\r\n      <Img src={props.imageUrl} alt={props.imageAlt} w='230px' h='250px' />\r\n\r\n      <Box p=\"6\">\r\n      <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme='yellow'\r\n            variant=\"outline\" \r\n            fontSize='9px'\r\n          >\r\n            {props.category}\r\n          </Badge>\r\n        <Box fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" fontSize='xl' isTruncated>\r\n          {props.title}\r\n        </Box>\r\n       \r\n        <Box>\r\n          <Text color=\"gray.600\" fontSize=\"3xl\">\r\n            Rs. {props.price}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\r\n          <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\r\n          >\r\n            {props.status}\r\n          </Badge>\r\n          <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n            ml=\"2\"\r\n          >\r\n            {props.orders} Orders\r\n          </Box>\r\n        </Box>\r\n\r\n       \r\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n          {Array(5)\r\n            .fill(\"\")\r\n            .map((_, i) => (\r\n              <StarIcon\r\n                key={i}\r\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\r\n              />\r\n            ))}\r\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n            {props.reviews} reviews\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\components\\Replys.js",["93","94","95"],"import {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Replys(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const dp = \"\";\r\n\r\n  var replys = [];\r\n  for (var i = 0; i < props.replys.length; i++) {\r\n    replys.push(\r\n      <HStack spacing=\"10px\" w=\"100%\">\r\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\r\n        <Box\r\n          w=\"100%\"\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          p=\"10px\"\r\n          mt=\"20px\"\r\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\r\n        >\r\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\r\n          <Text>{props.replys[i]}</Text>\r\n        </Box>\r\n      </HStack>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box ml=\"100px\" mt='10px'>\r\n      <VStack w=\"100%\">{replys}</VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Replys;\r\n","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\FeedbackPage.js",["96","97","98","99","100","101","102","103","104","105","106","107","108"],"import {\r\n    Box,\r\n    Center,\r\n    Heading,\r\n    Image,\r\n    SimpleGrid,\r\n    Textarea,\r\n    Text,\r\n    useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\"\r\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nimport { AddIcon, MinusIcon, ArrowForwardIcon, StarIcon } from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction FeedbackPage(props) {\r\n    let { id } = useParams();\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\r\n\r\n    const quantity_inc = () => {\r\n        setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\r\n    };\r\n    const quantity_dec = () => {\r\n        setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\r\n    };\r\n\r\n    const [data, setData] = useState({\r\n        item_ID: \"233d\",\r\n        item_name: \"Electric tooth brush\",\r\n        category: \"electronic\",\r\n        price: 200.0,\r\n        orders: 345,\r\n        description:\r\n            \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n        status: \"Available\",\r\n        feedbacks: [\r\n            {\r\n                customer_name: \"jof hagi\",\r\n                customer_dp: \"jof hagi\",\r\n                comment: \"asdasds asdasd sad\",\r\n                rating: 4,\r\n                reply: [\"sfsdfsd\", \"Thank you\"],\r\n            },\r\n            {\r\n                customer_name: \"den kali\",\r\n                customer_dp: \"jof hagi\",\r\n                comment: \"axasxas asdasd sad\",\r\n                rating: 5,\r\n                reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n            },\r\n            {\r\n                customer_name: \"gendi gahnadi\",\r\n                customer_dp: \"jof hagi\",\r\n                comment: \"hgfhf dghhdgf dfgshssdd\",\r\n                rating: 2,\r\n                reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n            },\r\n            {\r\n                customer_name: \"den kali\",\r\n                customer_dp: \"jof hagi\",\r\n                comment: \"axasxas asdasd sad\",\r\n                rating: 2,\r\n                reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n            },\r\n        ],\r\n        variants: [\r\n            {\r\n                varient_name: \"white 2 brushes\",\r\n                image:\r\n                    \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n                color: \"green\",\r\n                details: \"\",\r\n                Quantity: 450,\r\n            },\r\n            {\r\n                varient_name: \"pink 2 brushes with bateries\",\r\n                image:\r\n                    \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\r\n                color: \"pink\",\r\n                details: \"\",\r\n                Quantity: 230,\r\n            },\r\n            {\r\n                varient_name: \"two heads only\",\r\n                image:\r\n                    \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\r\n                color: \"blue\",\r\n                details: \"\",\r\n                Quantity: 500,\r\n            },\r\n        ]\r\n\r\n    });\r\n\r\n\r\n    return (\r\n        <Box\r\n            pt=\"150px\"\r\n            pl={{ base: \"10px\", sm: \"100px\" }}\r\n            pr={{ base: \"10px\", sm: \"100px\" }}\r\n\r\n        >\r\n            <Center mb='20px'>\r\n                <SearchBar text=\"I'm shopping for\" />\r\n            </Center>\r\n            <SimpleGrid columns={2} spacing={5} minChildWidth=\"400px\"\r\n                borderWidth=\"2px\"\r\n                borderRadius=\"lg\"\r\n                borderColor=\"gray.300\">\r\n                <Box\r\n                    width=\"auto\"\r\n                    h=\"auto\"\r\n                    overflow=\"hidden\"\r\n                    p=\"5px\"\r\n                >\r\n                    <Image\r\n                        src={data.variants[0].image}\r\n                        w=\"auto\"\r\n                        h=\"auto\"\r\n                        alt=\"image\"\r\n                        fit\r\n                    />\r\n                </Box>\r\n                <Box\r\n                    width=\"auto\"\r\n                    h=\"auto\"\r\n                    overflow=\"hidden\"\r\n                    p={{ base: \"5px\", sm: \"20px\" }}\r\n                >\r\n                    <Heading as=\"h2\" size=\"3xl\">\r\n                        Submit your feedback...\r\n                    </Heading>\r\n                    <Heading as=\"h2\" size=\"xl\">\r\n                        {data.item_name}\r\n                    </Heading>\r\n\r\n                    <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\" >\r\n                        {data.category}\r\n                    </Text>\r\n                    <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n                        {Array(5)\r\n                            .fill(\"\")\r\n                            .map((_, i) => (\r\n                                <StarIcon\r\n                                    key={i}\r\n                                    color={i < data.feedbacks[0].rating ? \"cyan.500\" : \"cyan.300\"}\r\n                                />\r\n                            ))}\r\n                        <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n                            {data.feedbacks.length} reviews &bull; {data.orders} orders\r\n\r\n              </Box>\r\n\r\n                    </Box>\r\n                    <Box d=\"flex\" mt=\"10\" alignItems=\"center\">\r\n                        {Array(5)\r\n                            .fill(\"\")\r\n                            .map((_, i) => (\r\n                                <StarIcon\r\n                                    key={i}\r\n                                    color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\r\n                                    //onClick={}\r\n                                    boxSize='20'\r\n                                />\r\n                            ))}\r\n                    </Box>\r\n                    <form>\r\n                        <Textarea mt=\"30px\" placeholder=\"Type your comment here...\" />\r\n                        <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n                            <Button\r\n                                loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\r\n                                Leave Feedback\r\n  </Button>\r\n                        </Stack>\r\n                    </form>\r\n                </Box>\r\n            </SimpleGrid>\r\n        </Box >\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default FeedbackPage;\r\n","C:\\Users\\Shehan Perera\\OneDrive\\Data Base Project\\Frond-End-React\\src\\pages\\SellerDashboard.js",["109","110","111","112","113","114","115","116","117","118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":28,"column":9,"nodeType":"126","messageId":"127","endLine":28,"endColumn":11},{"ruleId":"124","severity":1,"message":"128","line":29,"column":11,"nodeType":"126","messageId":"127","endLine":29,"endColumn":20},{"ruleId":"124","severity":1,"message":"129","line":29,"column":22,"nodeType":"126","messageId":"127","endLine":29,"endColumn":37},{"ruleId":"124","severity":1,"message":"130","line":40,"column":16,"nodeType":"126","messageId":"127","endLine":40,"endColumn":23},{"ruleId":"124","severity":1,"message":"131","line":16,"column":22,"nodeType":"126","messageId":"127","endLine":16,"endColumn":35},{"ruleId":"124","severity":1,"message":"132","line":25,"column":34,"nodeType":"126","messageId":"127","endLine":25,"endColumn":59},{"ruleId":"124","severity":1,"message":"133","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":10},{"ruleId":"124","severity":1,"message":"134","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":16},{"ruleId":"124","severity":1,"message":"135","line":10,"column":3,"nodeType":"126","messageId":"127","endLine":10,"endColumn":8},{"ruleId":"124","severity":1,"message":"136","line":11,"column":3,"nodeType":"126","messageId":"127","endLine":11,"endColumn":15},{"ruleId":"124","severity":1,"message":"137","line":12,"column":3,"nodeType":"126","messageId":"127","endLine":12,"endColumn":15},{"ruleId":"124","severity":1,"message":"138","line":18,"column":16,"nodeType":"126","messageId":"127","endLine":18,"endColumn":24},{"ruleId":"124","severity":1,"message":"139","line":3,"column":3,"nodeType":"126","messageId":"127","endLine":3,"endColumn":9},{"ruleId":"124","severity":1,"message":"140","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":9},{"ruleId":"124","severity":1,"message":"133","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":10},{"ruleId":"124","severity":1,"message":"141","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":9},{"ruleId":"124","severity":1,"message":"142","line":14,"column":8,"nodeType":"126","messageId":"127","endLine":14,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":17,"column":11,"nodeType":"126","messageId":"127","endLine":17,"endColumn":20},{"ruleId":"124","severity":1,"message":"129","line":17,"column":22,"nodeType":"126","messageId":"127","endLine":17,"endColumn":37},{"ruleId":"124","severity":1,"message":"143","line":18,"column":7,"nodeType":"126","messageId":"127","endLine":18,"endColumn":14},{"ruleId":"124","severity":1,"message":"129","line":14,"column":22,"nodeType":"126","messageId":"127","endLine":14,"endColumn":37},{"ruleId":"124","severity":1,"message":"144","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":15},{"ruleId":"124","severity":1,"message":"140","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":9},{"ruleId":"124","severity":1,"message":"145","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":14},{"ruleId":"124","severity":1,"message":"139","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":9},{"ruleId":"124","severity":1,"message":"141","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":9},{"ruleId":"124","severity":1,"message":"133","line":10,"column":3,"nodeType":"126","messageId":"127","endLine":10,"endColumn":10},{"ruleId":"124","severity":1,"message":"146","line":11,"column":3,"nodeType":"126","messageId":"127","endLine":11,"endColumn":8},{"ruleId":"124","severity":1,"message":"147","line":15,"column":17,"nodeType":"126","messageId":"127","endLine":15,"endColumn":25},{"ruleId":"124","severity":1,"message":"145","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"147","line":11,"column":17,"nodeType":"126","messageId":"127","endLine":11,"endColumn":25},{"ruleId":"124","severity":1,"message":"129","line":14,"column":22,"nodeType":"126","messageId":"127","endLine":14,"endColumn":37},{"ruleId":"124","severity":1,"message":"148","line":11,"column":18,"nodeType":"126","messageId":"127","endLine":11,"endColumn":29},{"ruleId":"124","severity":1,"message":"139","line":12,"column":17,"nodeType":"126","messageId":"127","endLine":12,"endColumn":23},{"ruleId":"124","severity":1,"message":"141","line":12,"column":25,"nodeType":"126","messageId":"127","endLine":12,"endColumn":31},{"ruleId":"124","severity":1,"message":"149","line":17,"column":10,"nodeType":"126","messageId":"127","endLine":17,"endColumn":17},{"ruleId":"124","severity":1,"message":"150","line":17,"column":19,"nodeType":"126","messageId":"127","endLine":17,"endColumn":28},{"ruleId":"124","severity":1,"message":"151","line":18,"column":8,"nodeType":"126","messageId":"127","endLine":18,"endColumn":32},{"ruleId":"124","severity":1,"message":"152","line":19,"column":8,"nodeType":"126","messageId":"127","endLine":19,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":23,"column":11,"nodeType":"126","messageId":"127","endLine":23,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":24,"column":13,"nodeType":"126","messageId":"127","endLine":24,"endColumn":22},{"ruleId":"124","severity":1,"message":"129","line":24,"column":24,"nodeType":"126","messageId":"127","endLine":24,"endColumn":39},{"ruleId":"124","severity":1,"message":"153","line":27,"column":11,"nodeType":"126","messageId":"127","endLine":27,"endColumn":23},{"ruleId":"124","severity":1,"message":"154","line":30,"column":11,"nodeType":"126","messageId":"127","endLine":30,"endColumn":23},{"ruleId":"124","severity":1,"message":"130","line":34,"column":18,"nodeType":"126","messageId":"127","endLine":34,"endColumn":25},{"ruleId":"124","severity":1,"message":"155","line":3,"column":5,"nodeType":"126","messageId":"127","endLine":3,"endColumn":11},{"ruleId":"124","severity":1,"message":"149","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":17},{"ruleId":"124","severity":1,"message":"150","line":11,"column":19,"nodeType":"126","messageId":"127","endLine":11,"endColumn":28},{"ruleId":"124","severity":1,"message":"156","line":11,"column":48,"nodeType":"126","messageId":"127","endLine":11,"endColumn":56},{"ruleId":"124","severity":1,"message":"148","line":13,"column":18,"nodeType":"126","messageId":"127","endLine":13,"endColumn":29},{"ruleId":"124","severity":1,"message":"157","line":17,"column":5,"nodeType":"126","messageId":"127","endLine":17,"endColumn":21},{"ruleId":"124","severity":1,"message":"158","line":18,"column":5,"nodeType":"126","messageId":"127","endLine":18,"endColumn":19},{"ruleId":"124","severity":1,"message":"147","line":20,"column":17,"nodeType":"126","messageId":"127","endLine":20,"endColumn":25},{"ruleId":"124","severity":1,"message":"145","line":21,"column":18,"nodeType":"126","messageId":"127","endLine":21,"endColumn":29},{"ruleId":"124","severity":1,"message":"159","line":21,"column":31,"nodeType":"126","messageId":"127","endLine":21,"endColumn":42},{"ruleId":"124","severity":1,"message":"160","line":22,"column":8,"nodeType":"126","messageId":"127","endLine":22,"endColumn":17},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'colorMode' is assigned a value but never used.","'toggleColorMode' is assigned a value but never used.","'setData' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'setActiveCategoryProducts' is assigned a value but never used.","'Heading' is defined but never used.","'useDisclosure' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'Redirect' is defined but never used.","'HStack' is defined but never used.","'Avatar' is defined but never used.","'VStack' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'useColorMode' is defined but never used.","'AvatarBadge' is defined but never used.","'Image' is defined but never used.","'useState' is defined but never used.","'ButtonGroup' is defined but never used.","'AddIcon' is defined but never used.","'MinusIcon' is defined but never used.","'CategorizedReviewPreview' is defined but never used.","'ReviewCountPreview' is defined but never used.","'quantity_inc' is assigned a value but never used.","'quantity_dec' is assigned a value but never used.","'Center' is defined but never used.","'StarIcon' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'AvatarGroup' is defined but never used.","'SearchBar' is defined but never used.","no-global-assign","no-unsafe-negation"]



