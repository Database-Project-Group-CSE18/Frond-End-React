[{"F:\\DB_Project\\Front-end-react\\src\\index.js":"1","F:\\DB_Project\\Front-end-react\\src\\App.js":"2","F:\\DB_Project\\Front-end-react\\src\\pages\\Home.js":"3","F:\\DB_Project\\Front-end-react\\src\\pages\\SpecficProductPage.js":"4","F:\\DB_Project\\Front-end-react\\src\\pages\\CartPage.js":"5","F:\\DB_Project\\Front-end-react\\src\\pages\\FeedbackPage.js":"6","F:\\DB_Project\\Front-end-react\\src\\pages\\CategoryPage.js":"7","F:\\DB_Project\\Front-end-react\\src\\pages\\SellerDashboard.js":"8","F:\\DB_Project\\Front-end-react\\src\\components\\Navbar.js":"9","F:\\DB_Project\\Front-end-react\\src\\pages\\TrackOrder.js":"10","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerDashboard.js":"11","F:\\DB_Project\\Front-end-react\\src\\pages\\AllOrders.js":"12","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerAdress.js":"13","F:\\DB_Project\\Front-end-react\\src\\pages\\ChangePersonalDet.js":"14","F:\\DB_Project\\Front-end-react\\src\\pages\\CardDetails.js":"15","F:\\DB_Project\\Front-end-react\\src\\components\\ReviewCountPreview.js":"16","F:\\DB_Project\\Front-end-react\\src\\components\\CategorizedReviewPreview.js":"17","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBar.js":"18","F:\\DB_Project\\Front-end-react\\src\\components\\ProductCard.js":"19","F:\\DB_Project\\Front-end-react\\src\\components\\CustomerDashSideBar.js":"20","F:\\DB_Project\\Front-end-react\\src\\components\\AddAddress.js":"21","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTiles.js":"22","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddressses.js":"23","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePersonalDetForm.js":"24","F:\\DB_Project\\Front-end-react\\src\\components\\AddBankCard.js":"25","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePasswordForm.js":"26","F:\\DB_Project\\Front-end-react\\src\\components\\BankCards.js":"27","F:\\DB_Project\\Front-end-react\\src\\components\\Replys.js":"28","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTile.js":"29","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddress.js":"30","F:\\DB_Project\\Front-end-react\\src\\components\\BankCard.js":"31","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\SignIn.js":"32","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\SignUp.js":"33","F:\\DB_Project\\Front-end-react\\src\\pages\\Seller\\SellerHome.js":"34","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBarHome.js":"35","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\Footer.js":"36","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomItems.js":"37","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomFooter.js":"38","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\LogIn.js":"39","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\Register.js":"40","F:\\DB_Project\\Front-end-react\\src\\components\\Seller\\Card.js":"41","F:\\DB_Project\\Front-end-react\\src\\components\\Seller\\Middle.js":"42","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\Footer.elements.js":"43","F:\\DB_Project\\Front-end-react\\src\\globalStyles.js":"44","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\FormLogIn.js":"45","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomFooter.elements.js":"46","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\FormSignup.js":"47","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\FormSuccess.js":"48","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\useForm.js":"49","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\validateInfo.js":"50","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\validateInfo.js":"51","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\useForm.js":"52","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\Home.js":"53","F:\\DB_Project\\Front-end-react\\src\\components\\ShopNow.js":"54","F:\\DB_Project\\Front-end-react\\src\\components\\Pricing\\Pricing.js":"55","F:\\DB_Project\\Front-end-react\\src\\components\\Pricing\\Pricing.elements.js":"56","F:\\DB_Project\\Front-end-react\\src\\pages\\AwaitingDelivery.js":"57","F:\\DB_Project\\Front-end-react\\src\\pages\\NewItem.js":"58","F:\\DB_Project\\Front-end-react\\src\\pages\\OrderView.js":"59","F:\\DB_Project\\Front-end-react\\src\\pages\\AwaitingShipment.js":"60","F:\\DB_Project\\Front-end-react\\src\\components\\Deliverycard.js":"61","F:\\DB_Project\\Front-end-react\\src\\components\\ShipmentCard.js":"62","F:\\DB_Project\\Front-end-react\\src\\components\\Slider\\ImageSlider.js":"63","F:\\DB_Project\\Front-end-react\\src\\components\\Slider\\SliderData.js":"64","F:\\DB_Project\\Front-end-react\\src\\ProtectedRoute.js":"65","F:\\DB_Project\\Front-end-react\\src\\API_Service\\checkLogin.js":"66","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\FormSuccess.js":"67","F:\\DB_Project\\Front-end-react\\src\\components\\ErrorModel.js":"68","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\index.js":"69","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\App.js":"70","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\ChangePersonalDet.js":"71","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\AwaitingDelivery.js":"72","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CustomerAdress.js":"73","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\AwaitingShipment.js":"74","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\NewItem.js":"75","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CardDetails.js":"76","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\TrackOrder.js":"77","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\SellerDashboard.js":"78","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\SignUp.js":"79","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Navbar.js":"80","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\AllOrders.js":"81","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\SignIn.js":"82","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\OrderView.js":"83","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Seller\\SellerHome.js":"84","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\FeedbackPage.js":"85","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\Home.js":"86","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\SpecficProductPage.js":"87","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CustomerDashboard.js":"88","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CategoryPage.js":"89","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CartPage.js":"90","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\CustomerDashSideBar.js":"91","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Deliverycard.js":"92","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ChangePersonalDetForm.js":"93","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ChangePasswordForm.js":"94","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShipmentCard.js":"95","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SearchBar.js":"96","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShipAddressses.js":"97","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SearchBarHome.js":"98","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShopNow.js":"99","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\AddAddress.js":"100","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomItems.js":"101","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\Footer.js":"102","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomFooter.js":"103","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Slider\\SliderData.js":"104","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Slider\\ImageSlider.js":"105","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ReviewCountPreview.js":"106","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\CategorizedReviewPreview.js":"107","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Card.js":"108","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Pricing\\Pricing.js":"109","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Middle.js":"110","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\LogIn.js":"111","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\API_Service\\checkLogin.js":"112","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ProductCard.js":"113","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ErrorModel.js":"114","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\OrderTiles.js":"115","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\BankCards.js":"116","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\Register.js":"117","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShipAddress.js":"118","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Replys.js":"119","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\FormLogIn.js":"120","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\FormSuccess.js":"121","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomFooter.elements.js":"122","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Pricing\\Pricing.elements.js":"123","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\Footer.elements.js":"124","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\globalStyles.js":"125","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\AddBankCard.js":"126","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\OrderTile.js":"127","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\BankCard.js":"128","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\useForm.js":"129","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\validateInfo.js":"130","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\FormSuccess.js":"131","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\FormSignup.js":"132","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\useForm.js":"133","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\validateInfo.js":"134","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\OrderItemTile.js":"135","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\SellerAllOrders.js":"136","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\AllOrdersCard.js":"137","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CustomerStats.js":"138","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\QuarterReport.js":"139","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\ChartForSpecificProduct.js":"140","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\ReportProduct.js":"141","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ReportProd.js":"142","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\ReportCategory.js":"143"},{"size":334,"mtime":1613621446572,"results":"144","hashOfConfig":"145"},{"size":4663,"mtime":1614451434575,"results":"146","hashOfConfig":"145"},{"size":119,"mtime":1612288754563,"results":"147","hashOfConfig":"145"},{"size":11277,"mtime":1614446728819,"results":"148","hashOfConfig":"145"},{"size":12473,"mtime":1614446728817,"results":"149","hashOfConfig":"145"},{"size":4777,"mtime":1613032033445,"results":"150","hashOfConfig":"145"},{"size":4709,"mtime":1614446728817,"results":"151","hashOfConfig":"145"},{"size":2765,"mtime":1612887242049,"results":"152","hashOfConfig":"145"},{"size":4534,"mtime":1614446752173,"results":"153","hashOfConfig":"145"},{"size":1734,"mtime":1613032033446,"results":"154","hashOfConfig":"145"},{"size":7645,"mtime":1614446907186,"results":"155","hashOfConfig":"145"},{"size":8198,"mtime":1613032033359,"results":"156","hashOfConfig":"145"},{"size":7894,"mtime":1613809820714,"results":"157","hashOfConfig":"145"},{"size":2824,"mtime":1613809820713,"results":"158","hashOfConfig":"145"},{"size":6388,"mtime":1613809820713,"results":"159","hashOfConfig":"145"},{"size":2363,"mtime":1614446728815,"results":"160","hashOfConfig":"145"},{"size":1856,"mtime":1614446728813,"results":"161","hashOfConfig":"145"},{"size":620,"mtime":1612551734370,"results":"162","hashOfConfig":"145"},{"size":2252,"mtime":1614446728814,"results":"163","hashOfConfig":"145"},{"size":1864,"mtime":1613032033276,"results":"164","hashOfConfig":"145"},{"size":2506,"mtime":1613809820705,"results":"165","hashOfConfig":"145"},{"size":407,"mtime":1613032033314,"results":"166","hashOfConfig":"145"},{"size":448,"mtime":1613809820709,"results":"167","hashOfConfig":"145"},{"size":4817,"mtime":1613809820707,"results":"168","hashOfConfig":"145"},{"size":2799,"mtime":1613809820705,"results":"169","hashOfConfig":"145"},{"size":4357,"mtime":1613809820707,"results":"170","hashOfConfig":"145"},{"size":360,"mtime":1613809820706,"results":"171","hashOfConfig":"145"},{"size":923,"mtime":1613032033315,"results":"172","hashOfConfig":"145"},{"size":5550,"mtime":1613032033314,"results":"173","hashOfConfig":"145"},{"size":8719,"mtime":1613809820708,"results":"174","hashOfConfig":"145"},{"size":4421,"mtime":1613809820706,"results":"175","hashOfConfig":"145"},{"size":1179,"mtime":1614446752176,"results":"176","hashOfConfig":"145"},{"size":540,"mtime":1613621446574,"results":"177","hashOfConfig":"145"},{"size":1824,"mtime":1614446752176,"results":"178","hashOfConfig":"145"},{"size":1105,"mtime":1613621446569,"results":"179","hashOfConfig":"145"},{"size":2585,"mtime":1613032189403,"results":"180","hashOfConfig":"145"},{"size":2847,"mtime":1613621446567,"results":"181","hashOfConfig":"145"},{"size":1715,"mtime":1613032189402,"results":"182","hashOfConfig":"145"},{"size":1269,"mtime":1614446752174,"results":"183","hashOfConfig":"145"},{"size":1028,"mtime":1613809820712,"results":"184","hashOfConfig":"145"},{"size":2242,"mtime":1613032189405,"results":"185","hashOfConfig":"145"},{"size":5524,"mtime":1613032189406,"results":"186","hashOfConfig":"145"},{"size":2442,"mtime":1613032189403,"results":"187","hashOfConfig":"145"},{"size":1127,"mtime":1613032189412,"results":"188","hashOfConfig":"145"},{"size":1982,"mtime":1614446752174,"results":"189","hashOfConfig":"145"},{"size":1298,"mtime":1613032189402,"results":"190","hashOfConfig":"145"},{"size":3666,"mtime":1613809820711,"results":"191","hashOfConfig":"145"},{"size":731,"mtime":1613032189408,"results":"192","hashOfConfig":"145"},{"size":2431,"mtime":1614446752175,"results":"193","hashOfConfig":"145"},{"size":453,"mtime":1613809820711,"results":"194","hashOfConfig":"145"},{"size":1260,"mtime":1613032189409,"results":"195","hashOfConfig":"145"},{"size":1509,"mtime":1613809820712,"results":"196","hashOfConfig":"145"},{"size":922,"mtime":1614446752175,"results":"197","hashOfConfig":"145"},{"size":1302,"mtime":1613621446571,"results":"198","hashOfConfig":"145"},{"size":4684,"mtime":1613621446568,"results":"199","hashOfConfig":"145"},{"size":2200,"mtime":1613621446568,"results":"200","hashOfConfig":"145"},{"size":4101,"mtime":1613621446573,"results":"201","hashOfConfig":"145"},{"size":4565,"mtime":1613621446575,"results":"202","hashOfConfig":"145"},{"size":5657,"mtime":1613621446576,"results":"203","hashOfConfig":"145"},{"size":3861,"mtime":1613621446573,"results":"204","hashOfConfig":"145"},{"size":2548,"mtime":1613621446566,"results":"205","hashOfConfig":"145"},{"size":2393,"mtime":1613621446570,"results":"206","hashOfConfig":"145"},{"size":1188,"mtime":1613621446571,"results":"207","hashOfConfig":"145"},{"size":267,"mtime":1613621446572,"results":"208","hashOfConfig":"145"},{"size":544,"mtime":1614449375749,"results":"209","hashOfConfig":"145"},{"size":2047,"mtime":1614449557760,"results":"210","hashOfConfig":"145"},{"size":728,"mtime":1613809820709,"results":"211","hashOfConfig":"145"},{"size":954,"mtime":1614446728813,"results":"212","hashOfConfig":"145"},{"size":334,"mtime":1613807146180,"results":"213","hashOfConfig":"214"},{"size":5853,"mtime":1614795395668,"results":"215","hashOfConfig":"214"},{"size":2824,"mtime":1613807146180,"results":"216","hashOfConfig":"214"},{"size":2309,"mtime":1614756754645,"results":"217","hashOfConfig":"214"},{"size":7312,"mtime":1614768722857,"results":"218","hashOfConfig":"214"},{"size":2877,"mtime":1614768722855,"results":"219","hashOfConfig":"214"},{"size":13840,"mtime":1614768722858,"results":"220","hashOfConfig":"214"},{"size":6508,"mtime":1614768722855,"results":"221","hashOfConfig":"214"},{"size":1734,"mtime":1612982481985,"results":"222","hashOfConfig":"214"},{"size":9902,"mtime":1614756754649,"results":"223","hashOfConfig":"214"},{"size":540,"mtime":1613807132872,"results":"224","hashOfConfig":"214"},{"size":4438,"mtime":1614768714800,"results":"225","hashOfConfig":"214"},{"size":8137,"mtime":1614768722854,"results":"226","hashOfConfig":"214"},{"size":1179,"mtime":1614452061203,"results":"227","hashOfConfig":"214"},{"size":8758,"mtime":1614756754648,"results":"228","hashOfConfig":"214"},{"size":3119,"mtime":1614768714884,"results":"229","hashOfConfig":"214"},{"size":5054,"mtime":1614756754647,"results":"230","hashOfConfig":"214"},{"size":913,"mtime":1614768714833,"results":"231","hashOfConfig":"214"},{"size":14798,"mtime":1614768722859,"results":"232","hashOfConfig":"214"},{"size":7648,"mtime":1614768722857,"results":"233","hashOfConfig":"214"},{"size":4748,"mtime":1614786290250,"results":"234","hashOfConfig":"214"},{"size":14282,"mtime":1614768722856,"results":"235","hashOfConfig":"214"},{"size":2053,"mtime":1614768722852,"results":"236","hashOfConfig":"214"},{"size":2128,"mtime":1614756754644,"results":"237","hashOfConfig":"214"},{"size":4802,"mtime":1614768714797,"results":"238","hashOfConfig":"214"},{"size":3469,"mtime":1614549703815,"results":"239","hashOfConfig":"214"},{"size":2221,"mtime":1614756754645,"results":"240","hashOfConfig":"214"},{"size":620,"mtime":1612982481976,"results":"241","hashOfConfig":"214"},{"size":448,"mtime":1614549703824,"results":"242","hashOfConfig":"214"},{"size":1105,"mtime":1613807132824,"results":"243","hashOfConfig":"214"},{"size":1402,"mtime":1614768714806,"results":"244","hashOfConfig":"214"},{"size":2506,"mtime":1614549703806,"results":"245","hashOfConfig":"214"},{"size":2849,"mtime":1614768714799,"results":"246","hashOfConfig":"214"},{"size":2585,"mtime":1613194173772,"results":"247","hashOfConfig":"214"},{"size":1715,"mtime":1614625896077,"results":"248","hashOfConfig":"214"},{"size":267,"mtime":1613807132829,"results":"249","hashOfConfig":"214"},{"size":1188,"mtime":1613807132828,"results":"250","hashOfConfig":"214"},{"size":2363,"mtime":1614452105639,"results":"251","hashOfConfig":"214"},{"size":1856,"mtime":1614452105638,"results":"252","hashOfConfig":"214"},{"size":2278,"mtime":1614768714804,"results":"253","hashOfConfig":"214"},{"size":4710,"mtime":1614768714802,"results":"254","hashOfConfig":"214"},{"size":5636,"mtime":1614768714805,"results":"255","hashOfConfig":"214"},{"size":1062,"mtime":1614604217073,"results":"256","hashOfConfig":"214"},{"size":1935,"mtime":1614768714721,"results":"257","hashOfConfig":"214"},{"size":2179,"mtime":1614768722853,"results":"258","hashOfConfig":"214"},{"size":954,"mtime":1614452105638,"results":"259","hashOfConfig":"214"},{"size":408,"mtime":1614549703822,"results":"260","hashOfConfig":"214"},{"size":356,"mtime":1614549703813,"results":"261","hashOfConfig":"214"},{"size":1002,"mtime":1614604217108,"results":"262","hashOfConfig":"214"},{"size":3338,"mtime":1614768722853,"results":"263","hashOfConfig":"214"},{"size":923,"mtime":1612982481975,"results":"264","hashOfConfig":"214"},{"size":2389,"mtime":1614604217071,"results":"265","hashOfConfig":"214"},{"size":728,"mtime":1613807252351,"results":"266","hashOfConfig":"214"},{"size":1298,"mtime":1613194173330,"results":"267","hashOfConfig":"214"},{"size":2200,"mtime":1613807132798,"results":"268","hashOfConfig":"214"},{"size":2442,"mtime":1613194173597,"results":"269","hashOfConfig":"214"},{"size":1127,"mtime":1613194174813,"results":"270","hashOfConfig":"214"},{"size":3320,"mtime":1614768722851,"results":"271","hashOfConfig":"214"},{"size":6883,"mtime":1614768722853,"results":"272","hashOfConfig":"214"},{"size":3980,"mtime":1614768722851,"results":"273","hashOfConfig":"214"},{"size":1482,"mtime":1614768714806,"results":"274","hashOfConfig":"214"},{"size":453,"mtime":1613807252355,"results":"275","hashOfConfig":"214"},{"size":731,"mtime":1613194174705,"results":"276","hashOfConfig":"214"},{"size":4311,"mtime":1614604217096,"results":"277","hashOfConfig":"214"},{"size":1934,"mtime":1614604217122,"results":"278","hashOfConfig":"214"},{"size":1260,"mtime":1613194174713,"results":"279","hashOfConfig":"214"},{"size":1070,"mtime":1614768722852,"results":"280","hashOfConfig":"214"},{"size":2713,"mtime":1614756754648,"results":"281","hashOfConfig":"214"},{"size":2167,"mtime":1614756754644,"results":"282","hashOfConfig":"214"},{"size":7138,"mtime":1614768722858,"results":"283","hashOfConfig":"214"},{"size":4969,"mtime":1614768722859,"results":"284","hashOfConfig":"214"},{"size":1915,"mtime":1614768722857,"results":"285","hashOfConfig":"214"},{"size":254,"mtime":1614792634792,"results":"286","hashOfConfig":"214"},{"size":6537,"mtime":1614792632672,"results":"287","hashOfConfig":"214"},{"size":3433,"mtime":1614795328874,"results":"288","hashOfConfig":"214"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},"1n5sntt",{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"291"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"291"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"291"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"291"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"291"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"291"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"291"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"291"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"291"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"291"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"291"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"291"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"291"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"291"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"291"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"291"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"291"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"291"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"291"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"291"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"291"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"291"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"291"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"291"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"291"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"291"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"291"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"291"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"291"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"291"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"291"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"291"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"291"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"291"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"291"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"291"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"291"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"291"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"291"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"291"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"291"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"291"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"291"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"291"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"291"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"291"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"291"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"291"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"291"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},"1p0i0kg",{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"478"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"478"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"478"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"478"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"478"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"478"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"478"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"478"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"478"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"478"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"478"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"478"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"478"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"478"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"478"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"478"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"478"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"478"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"478"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"478"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"478"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"478"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"478"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"478"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"478"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"478"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"478"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"478"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"478"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"478"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"478"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"478"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"478"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"478"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"478"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"478"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"478"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"478"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"478"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"478"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"478"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"478"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"478"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"478"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"478"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"478"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"478"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"478"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"478"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"478"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"478"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"478"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"478"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"478"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"478"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"478"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"478"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\DB_Project\\Front-end-react\\src\\index.js",[],["673","674"],"F:\\DB_Project\\Front-end-react\\src\\App.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\Home.js",[],["675","676"],"F:\\DB_Project\\Front-end-react\\src\\pages\\SpecficProductPage.js",["677","678","679","680","681","682"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Heading,\r\n  HStack,\r\n  IconButton,\r\n  Image,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  SimpleGrid,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  useColorMode,\r\n  useDisclosure,\r\n  Modal\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\nimport { AddIcon, MinusIcon, StarIcon } from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport axios from \"axios\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\n\r\nimport ErrorModel from \"../components/ErrorModel\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nfunction SpecificProductPage() {\r\n  let { id } = useParams();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const [serverResponse, setServerResponse] = useState(\"\");\r\n\r\n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\r\n\r\n  const quantity_inc = () => {\r\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\r\n  };\r\n  const quantity_dec = () => {\r\n    if (currentOrder.quantity > 0)\r\n      setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\r\n  };\r\n  const [data, setData] = useState({\r\n    item_ID: \"\",\r\n    item_name: \"\",\r\n    category_name: \"\",\r\n    price: 0,\r\n    num_of_orders: 0,\r\n    description: \"\",\r\n    status: \"\",\r\n    image: \"\",\r\n    feedbacks: [\r\n      {\r\n        feedback_ID: \"\",\r\n        user_ID: \"\",\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        variant_ID: \"\",\r\n        variant_name: \"\",\r\n        image: \"\",\r\n        color: \"\",\r\n        size: \"\",\r\n        specificDetail: \"\",\r\n        quantity: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/items/specificitem/${id}`)\r\n      .then((response) => {\r\n        let data = response.data.items;\r\n        console.log(data);\r\n        setData(data);\r\n        setCurrentOrder({\r\n          ...currentOrder,\r\n          varient_id: data.variants[0].variant_id,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const HandleClickAddtoCart = () => {\r\n    if(currentOrder.quantity <= 0){\r\n      setServerResponse(\"Select the Quntitiy\");\r\n      onOpen();\r\n    }else{\r\n      axios\r\n      .post(`http://localhost:5000/items/specificitem/addtocart`, {\r\n        cart_id: \"3\",\r\n        varient_id: currentOrder.varient_id,\r\n        quantity: currentOrder.quantity,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setServerResponse(\"Item added to cart\");\r\n        onOpen();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.message);\r\n        setServerResponse(error.response.data.message.sqlMessage);\r\n        onOpen();\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n  const HandleClickBuyNow = () => {\r\n    if(currentOrder.quantity <= 0){\r\n      setServerResponse(\"Select the Quntitiy\");\r\n      onOpen();\r\n    }else{\r\n      axios\r\n      .post(`http://localhost:5000/items/specificitem/addtocart`, {\r\n        cart_id: \"3\",\r\n        varient_id: currentOrder.varient_id,\r\n        quantity: currentOrder.quantity,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setServerResponse(\"Item added to cart\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.message);\r\n        setServerResponse(error.response.data.message.sqlMessage);\r\n      });\r\n\r\n    }\r\n    \r\n  };\r\n\r\n  var imageStack = new Array(data.variants.length)\r\n    .fill(0)\r\n    .map((zero, index) => (\r\n      <Box\r\n        cursor=\"pointer\"\r\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\r\n        borderColor=\"gray.500\"\r\n        onClick={() =>\r\n          setCurrentOrder({\r\n            ...currentOrder,\r\n            varient: index,\r\n            varient_id: data.variants[index].variant_id,\r\n          })\r\n        }\r\n      >\r\n        <Image\r\n          src={`data:image/png;base64,${arrayBufferToBinaryString(\r\n            data.variants[index].image ? data.variants[index].image.data : null\r\n          )}`}\r\n          w=\"100px\"\r\n          h=\"100px\"\r\n          alt=\"image\"\r\n        />\r\n      </Box>\r\n    ));\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb=\"20px\">\r\n        <SearchBar text=\"I'm shopping for\" />\r\n      </Center>\r\n\r\n\r\n      <SimpleGrid\r\n        columns={2}\r\n        spacing={5}\r\n        minChildWidth=\"400px\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n      >\r\n\r\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\r\n          <Image\r\n            src={`data:image/png;base64,${arrayBufferToBinaryString(\r\n              data.image ? data.image.data : null\r\n            )}`}\r\n            w=\"400px\"\r\n            h=\"400px\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            {data.item_name}\r\n          </Heading>\r\n\r\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\r\n            {data.category}\r\n          </Text>\r\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < data.rating ? \"cyan.500\" : \"cyan.300\"}\r\n                />\r\n              ))}\r\n            <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n              {data.feedbacks.length} reviews &bull; {data.num_of_orders} orders\r\n            </Box>\r\n          </Box>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Varient\r\n          </Heading>\r\n          <Text mt=\"10px\" color=\"green.500\">\r\n            {data.variants[currentOrder.varient].variant_name}\r\n          </Text>\r\n          <HStack>{imageStack}</HStack>\r\n          <HStack spacing=\"40px\">\r\n            <Box>\r\n              <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n                Color\r\n              </Heading>\r\n              <Text mt=\"5px\">{data.variants[currentOrder.varient].color}</Text>\r\n            </Box>\r\n            <Box>\r\n              <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n                Size\r\n              </Heading>\r\n              <Text mt=\"5px\">{data.variants[currentOrder.varient].size}</Text>\r\n            </Box>\r\n          </HStack>\r\n\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Specific details of the variant\r\n          </Heading>\r\n          <Text mt=\"5px\">\r\n            {data.variants[currentOrder.varient].specific_detail}\r\n          </Text>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Quantity\r\n          </Heading>\r\n          <HStack mt=\"10px\">\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<AddIcon />}\r\n              onClick={quantity_inc}\r\n            />\r\n            <Text>{currentOrder.quantity}</Text>\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<MinusIcon />}\r\n              onClick={quantity_dec}\r\n            />\r\n            <Text pl=\"20px\" color=\"red.500\">\r\n              {data.variants.length === 0\r\n                ? null\r\n                : data.variants[currentOrder.varient].quantity}{\" \"}\r\n              items are available\r\n            </Text>\r\n          </HStack>\r\n          <Heading as=\"h4\" size=\"xl\" mt=\"20px\">\r\n            Price\r\n          </Heading>\r\n          <Text fontSize=\"4xl\">\r\n            Rs. {data.variants[currentOrder.varient].price}\r\n          </Text>\r\n          <HStack mt=\"20px\">\r\n            <Button onClick={HandleClickBuyNow} colorScheme=\"cyan\" color=\"white\" size=\"lg\">\r\n              Buy now\r\n            </Button>\r\n            <Button\r\n              onClick={HandleClickAddtoCart}\r\n              colorScheme=\"orange\"\r\n              size=\"lg\"\r\n              variant=\"outline\"\r\n            >\r\n              Add to cart\r\n            </Button>\r\n          </HStack>\r\n        </Box>\r\n      </SimpleGrid>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"10px\"\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          Description\r\n        </Heading>\r\n        <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\r\n          {data.description}\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"100px\"\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          Reviews\r\n        </Heading>\r\n\r\n        <ReviewCountPreview feedbacks={data.feedbacks} />\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> All\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 5\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 4\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 3\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 2\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 1\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview\r\n                feedbacks={data.feedbacks}\r\n                rating=\"all\"\r\n              />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={5} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={4} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={3} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={2} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={1} />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Modal Title</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            {serverResponse}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SpecificProductPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CartPage.js",["683","684","685","686"],"import { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Heading,\r\n  HStack,\r\n  Icon,\r\n  Img,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n  SimpleGrid,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Tfoot,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorMode,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\nimport { FaMoneyBillAlt, FaRegCreditCard } from \"react-icons/fa\";\r\nimport { SiPaypal } from \"react-icons/si\";\r\nimport { RiVisaLine } from \"react-icons/ri\";\r\n\r\nimport visa from \"payment-icons/min/flat/visa.svg\";\r\nimport mastercard from \"payment-icons/min/flat/mastercard-old.svg\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction CartPage() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const [cartItems, setCartItems] = useState([\r\n    {\r\n      item_ID: \"\",\r\n      item_name: \"\",\r\n      price: 0,\r\n      quantity: 0,\r\n      varient: \"\",\r\n      image: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [shippingAddress, setShippingAddress] = useState([\r\n    {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      street: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [card, setCard] = useState([\r\n    {\r\n      owner: \"\",\r\n      card_number: \"\",\r\n      bank_name: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [currentCard, setCurrentCard] = useState(\"none\");\r\n\r\n  const [currentShippingAddress, setCurrentShippingAddress] = useState(0);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(0);\r\n\r\n  var TotalPrice = 0;\r\n\r\n  var cardIcon = (type) => {\r\n    if (type === \"visa\") {\r\n      return <Img src={visa} w={12} h={12} />;\r\n    } else if (type === \"mastercard\") {\r\n      return <Img src={mastercard} w={12} h={12} />;\r\n    }\r\n  };\r\n\r\n  cartItems.forEach((element) => {\r\n    TotalPrice = TotalPrice + element.quantity * element.price;\r\n  });\r\n\r\n  let { customer_id } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/items/cart`)\r\n      .then((response) => {\r\n        let data = response.data.items;\r\n        console.log(data);\r\n        setCartItems(data);\r\n      });\r\n    axios.get(`http://localhost:5000/customer/addresses`).then((response) => {\r\n      let data = response.data.addresses;\r\n      console.log(data);\r\n      setShippingAddress(data);\r\n    });\r\n    axios.get(`http://localhost:5000/customer/bankCards`).then((response) => {\r\n      let data = response.data.bankCards;\r\n      console.log(data);\r\n      setCard(data);\r\n    });\r\n  }, []);\r\n\r\n  const HandleRemove = (id) => {\r\n    axios.delete(`http://localhost:5000/items/cart/${id}`).then((response) => {\r\n      console.log(id);\r\n    });\r\n    axios.get(`http://localhost:5000/items/cart`).then((response) => {\r\n      let data = response.data.items;\r\n      console.log(data);\r\n      setCartItems(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Box borderWidth=\"1px\" borderColor=\"gray.300\" p=\"50px\" mb=\"200px\">\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          <Icon as={FiShoppingCart} w={12} h={12} /> Cart\r\n        </Heading>\r\n        <Table variant=\"simple\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>Product</Th>\r\n              <Th>Product name</Th>\r\n              <Th>Varient</Th>\r\n              <Th isNumeric>Quantity</Th>\r\n              <Th isNumeric>Price(each)</Th>\r\n              <Th isNumeric>Price</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {Array(cartItems.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <Tr>\r\n                  <Td>\r\n                    <Img src={cartItems[i].image} w=\"50px\" h=\"50px\" />\r\n                  </Td>\r\n                  <Td>{cartItems[i].item_name}</Td>\r\n                  <Td>{cartItems[i].variant}</Td>\r\n                  <Td isNumeric>{cartItems[i].quantity}</Td>\r\n                  <Td isNumeric>{cartItems[i].price}</Td>\r\n                  <Td isNumeric>\r\n                    {cartItems[i].price * cartItems[i].quantity}\r\n                  </Td>\r\n                  <Td>\r\n                    <Button\r\n                      colorScheme=\"red\"\r\n                      variant=\"outline\"\r\n                      size=\"xs\"\r\n                      onClick={() => HandleRemove(cartItems[i].variant_id)}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n          </Tbody>\r\n          <Tfoot>\r\n            <Tr>\r\n              <Th fontSize=\"3xl\">Total</Th>\r\n              <Th>-</Th>\r\n              <Th>-</Th>\r\n              <Th isNumeric>-</Th>\r\n              <Th isNumeric>-</Th>\r\n              <Th isNumeric fontSize=\"3xl\">\r\n                Rs. {TotalPrice}\r\n              </Th>\r\n            </Tr>\r\n          </Tfoot>\r\n        </Table>\r\n        <Divider />\r\n        <SimpleGrid columns={2} spacing={5} mb=\"20px\" mt=\"50px\">\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\">\r\n              Shipping address\r\n            </Heading>\r\n\r\n            <Box\r\n              p=\"10px\"\r\n              borderWidth=\"1px\"\r\n              bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\r\n            >\r\n              <Heading as=\"h5\" size=\"sm\">\r\n                {shippingAddress[currentShippingAddress].first_Name}{\" \"}\r\n                {shippingAddress[currentShippingAddress].last_Name}\r\n              </Heading>\r\n\r\n              <Text>{shippingAddress[currentShippingAddress].street}</Text>\r\n              <Text>{shippingAddress[currentShippingAddress].city}</Text>\r\n              <Text>{shippingAddress[currentShippingAddress].state}</Text>\r\n              <Text>{shippingAddress[currentShippingAddress].zip}</Text>\r\n            </Box>\r\n            <Box ml=\"10px\" pt=\"10px\">\r\n              <Menu>\r\n                <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                  Address No. {currentShippingAddress + 1}\r\n                </MenuButton>\r\n                <MenuList>\r\n                  {Array(shippingAddress.length)\r\n                    .fill(\"\")\r\n                    .map((_, i) => (\r\n                      <MenuItem onClick={() => setCurrentShippingAddress(i)}>\r\n                        {\"Address No. \" +\r\n                          (i + 1) +\r\n                          \" - \" +\r\n                          shippingAddress[i].first_Name +\r\n                          \" \" +\r\n                          shippingAddress[i].last_Name +\r\n                          \", \" +\r\n                          shippingAddress[i].street +\r\n                          \", \" +\r\n                          shippingAddress[i].city +\r\n                          \", \" +\r\n                          shippingAddress[i].state +\r\n                          \", \" +\r\n                          shippingAddress[i].zip}\r\n                      </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n              </Menu>\r\n            </Box>\r\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\" mt=\"50px\">\r\n              Payment method\r\n            </Heading>\r\n\r\n            {currentCard !== \"none\" && paymentMethod === 2 ? (\r\n              <Box\r\n                p=\"10px\"\r\n                borderWidth=\"1px\"\r\n                bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\r\n              >\r\n                <HStack>\r\n                  {cardIcon(card[currentCard].card_type)}\r\n                  <Box>\r\n                    <Text>{card[currentCard].owner}</Text>\r\n                    <Text>\r\n                      XXXX XXXX XXXX{\" \"}\r\n                      {card[currentCard].card_number.substr(12, 15)}\r\n                    </Text>\r\n                  </Box>\r\n                </HStack>\r\n              </Box>\r\n            ) : null}\r\n\r\n            <HStack pt=\"10px\">\r\n              <Box pl=\"10px\">\r\n                <Menu>\r\n                  <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                    {paymentMethod === 0 ? <Text>Select method</Text> : null}\r\n                    {paymentMethod === 1 ? <Text>Cash on delivery</Text> : null}\r\n                    {paymentMethod === 2 ? <Text>Card</Text> : null}\r\n                    {paymentMethod === 3 ? <Text>Paypal</Text> : null}\r\n                  </MenuButton>\r\n                  <MenuList>\r\n                    <MenuItem\r\n                      icon={\r\n                        <Icon\r\n                          as={FaMoneyBillAlt}\r\n                          w={6}\r\n                          h={6}\r\n                          color=\"green.500\"\r\n                        />\r\n                      }\r\n                      onClick={() => setPaymentMethod(1)}\r\n                    >\r\n                      Cash on delivery\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      icon={\r\n                        <Icon\r\n                          as={FaRegCreditCard}\r\n                          w={6}\r\n                          h={6}\r\n                          color=\"cyan.500\"\r\n                        />\r\n                      }\r\n                      onClick={() => setPaymentMethod(2)}\r\n                    >\r\n                      Card\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      icon={<Icon as={SiPaypal} w={6} h={6} color=\"blue.500\" />}\r\n                      onClick={() => setPaymentMethod(3)}\r\n                    >\r\n                      paypal\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </Menu>\r\n              </Box>\r\n              <Box pl=\"10px\">\r\n                {paymentMethod === 1 ? (\r\n                  <Icon as={FaMoneyBillAlt} w={8} h={8} color=\"green.500\" />\r\n                ) : null}\r\n                {paymentMethod === 2 ? (\r\n                  <Icon as={FaRegCreditCard} w={8} h={8} color=\"cyan.500\" />\r\n                ) : null}\r\n                {paymentMethod === 3 ? (\r\n                  <Icon as={SiPaypal} w={8} h={8} color=\"blue.500\" />\r\n                ) : null}\r\n              </Box>\r\n            </HStack>\r\n\r\n            {paymentMethod === 2 ? (\r\n              <Box pl=\"10px\" pt=\"10px\">\r\n                {card.length !== 0 ? (\r\n                  <Box>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                        Select a card\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        {Array(card.length)\r\n                          .fill(\"\")\r\n                          .map((_, i) => (\r\n                            <MenuItem\r\n                              icon={cardIcon(\"visa\")}\r\n                              onClick={() => setCurrentCard(i)}\r\n                            >\r\n                              <Text>{card[i].owner}</Text>\r\n                              <Text>\r\n                                XXXX XXXX XXXX{\" \"}\r\n                                {card[i].card_number.substr(12, 15)}\r\n                              </Text>\r\n                            </MenuItem>\r\n                          ))}\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Box>\r\n                ) : (\r\n                  <Text>Please Add a card</Text>\r\n                )}\r\n              </Box>\r\n            ) : null}\r\n          </Box>\r\n          <Box mr=\"0px\" ml=\"auto\">\r\n            <Box w=\"400px\" borderWidth=\"1px\" p=\"10px\">\r\n              <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\r\n                Order Total\r\n              </Heading>\r\n              <Table>\r\n                <Tbody variant=\"simple\" size=\"md\">\r\n                  <Tr>\r\n                    <Td>Subtotal</Td>\r\n                    <Td isNumeric>{TotalPrice}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td>Shipping</Td>\r\n                    <Td isNumeric>Free</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td fontSize=\"2xl\">Total</Td>\r\n                    <Td isNumeric fontSize=\"2xl\">\r\n                      Rs. {TotalPrice}\r\n                    </Td>\r\n                  </Tr>\r\n                </Tbody>\r\n              </Table>\r\n              <Button mt=\"20px\" colorScheme=\"cyan\" w=\"100%\">\r\n                Checkout\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </SimpleGrid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\FeedbackPage.js",["687","688","689","690","691","692","693","694","695","696"],"import {\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Textarea,\r\n  Text,\r\n  useColorMode,\r\n  Badge,\r\n} from \"@chakra-ui/react\";\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\r\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  AddIcon,\r\n  MinusIcon,\r\n  ArrowForwardIcon,\r\n  StarIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction FeedbackPage(props) {\r\n  let { id } = useParams();\r\n\r\n  const [rating, setRating] = useState(2);\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"233d\",\r\n    item_name: \"Electric tooth brush\",\r\n    category: \"electronic\",\r\n    price: 200.0,\r\n    orders: 345,\r\n    description:\r\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n    status: \"Available\",\r\n    feedbacks: [\r\n      {\r\n        customer_name: \"jof hagi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"asdasds asdasd sad\",\r\n        rating: 4,\r\n        reply: [\"sfsdfsd\", \"Thank you\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 5,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"gendi gahnadi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"hgfhf dghhdgf dfgshssdd\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        varient_name: \"white 2 brushes\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n        color: \"green\",\r\n        details: \"\",\r\n        Quantity: 450,\r\n      },\r\n      {\r\n        varient_name: \"pink 2 brushes with bateries\",\r\n        image:\r\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\r\n        color: \"pink\",\r\n        details: \"\",\r\n        Quantity: 230,\r\n      },\r\n      {\r\n        varient_name: \"two heads only\",\r\n        image:\r\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\r\n        color: \"blue\",\r\n        details: \"\",\r\n        Quantity: 500,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb=\"20px\">\r\n        <SearchBar text=\"I'm shopping for\" />\r\n      </Center>\r\n      <SimpleGrid\r\n        columns={2}\r\n        spacing={5}\r\n        minChildWidth=\"400px\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n      >\r\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\r\n          <Image\r\n            src={data.variants[0].image}\r\n            w=\"auto\"\r\n            h=\"auto\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            Submit your feedback...\r\n          </Heading>\r\n\r\n          <Text fontSize=\"6xl\">{data.item_name}</Text>\r\n\r\n          <Badge variant=\"outline\" colorScheme=\"yellow\" fontSize='lg'>\r\n            {data.category}\r\n          </Badge>\r\n\r\n          <Box d=\"flex\" mt=\"10\" alignItems=\"center\">\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < rating ? \"cyan.500\" : \"cyan.100\"}\r\n                  onClick={() => setRating(i + 1)}\r\n                  boxSize=\"50px\"\r\n                  cursor=\"pointer\"\r\n                />\r\n              ))}\r\n          </Box>\r\n          <form>\r\n            <Textarea mt=\"30px\" placeholder=\"Type your comment here...\" />\r\n            <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n              <Button\r\n                loadingText=\"Submitting\"\r\n                type=\"submit\"\r\n                rightIcon={<ArrowForwardIcon />}\r\n                colorScheme=\"teal\"\r\n                variant=\"outline\"\r\n              >\r\n                Leave Feedback\r\n              </Button>\r\n            </Stack>\r\n          </form>\r\n        </Box>\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FeedbackPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CategoryPage.js",["697","698"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  useColorMode,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport axios from \"axios\";\r\n\r\nfunction CategoryPage() {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/items/categories\").then((response) => {\r\n      let data = response.data.items;\r\n      data.push(\"All Categories\");\r\n      setCategories(data);\r\n    });\r\n\r\n    axios\r\n    .get(`http://localhost:5000/items`)\r\n    .then((response) => {\r\n      let data = response.data.items;\r\n      setActiveCategoryProducts(data);\r\n\r\n    });\r\n  }, []);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const [activeCategory, setActiveCategory] = useState();\r\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([]);\r\n\r\n\r\n  var searchBarText = `Search in ${activeCategory}`;\r\n\r\n  const HandleClick = (category) => {\r\n    setActiveCategory(category);\r\n    if(category!==\"All Categories\"){\r\n      var url = `http://localhost:5000/items/search/${category}`;\r\n    }else{\r\n      var url = `http://localhost:5000/items`;\r\n    }\r\n\r\n    axios\r\n    .get(url)\r\n    .then((response) => {\r\n      let data = response.data.items;\r\n      setActiveCategoryProducts(data);\r\n\r\n    });\r\n  \r\n  };\r\n  const HandleChange = (event) => {\r\n    var value = event.target.value;\r\n    axios\r\n    .post(\"http://localhost:5000/items\",{\r\n      \"category\":`${activeCategory}`,\r\n      \"item_name\":`${value}`\r\n    })\r\n    .then((response) => {\r\n      let data = response.data.items;\r\n      setActiveCategoryProducts(data);\r\n    });\r\n  \r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", md: \"100px\" }}\r\n      pr={{ base: \"10px\", md: \"100px\" }}\r\n    >\r\n      <Center mb=\"10px\">\r\n        <SearchBar text={searchBarText} onChange={HandleChange}/>\r\n      </Center>\r\n      <Grid\r\n        templateRows=\"repeat(1, 1fr)\"\r\n        templateColumns=\"repeat(5, 1fr)\"\r\n        gap={0}\r\n        pb=\"200px\"\r\n      >\r\n        <GridItem\r\n          rowSpan={1}\r\n          colSpan={1}\r\n          bg={colorMode === \"light\" ? \"gray.200\" : \"gray.600\"}\r\n          p=\"10px\"\r\n        >\r\n          <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\r\n            Categories\r\n          </Heading>\r\n          <VStack>\r\n            {Array(categories.length)\r\n              .fill(\"\")\r\n              .map((_, i) =>\r\n                categories[i] === activeCategory ? (\r\n                  <Button\r\n                    w=\"100%\"\r\n                    variant=\"ghost\"\r\n                    colorScheme=\"cyan\"\r\n                    isActive\r\n                    onClick={() => HandleClick(categories[i])}\r\n                  >\r\n                    {categories[i]}\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    w=\"100%\"\r\n                    variant=\"ghost\"\r\n                    colorScheme=\"cyan\"\r\n                    onClick={() => HandleClick(categories[i])}\r\n                  >\r\n                    {categories[i]}\r\n                  </Button>\r\n                )\r\n              )}\r\n          </VStack>\r\n        </GridItem>\r\n        <GridItem\r\n          rowSpan={1}\r\n          colSpan={4}\r\n          borderWidth=\"1px\"\r\n          borderColor=\"gray.300\"\r\n          p=\"20px\"\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n            {activeCategory}\r\n          </Heading>\r\n          <Grid\r\n            h=\"auto\"\r\n            templateColumns={{\r\n              md: \"repeat(1, 1fr)\",\r\n              lg: \"repeat(3, 1fr)\",\r\n              xl: \"repeat(4, 1fr)\",\r\n            }}\r\n            gap={2}\r\n          >\r\n            {Array(activeCategoryProducts.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <ProductCard\r\n                  item_id = {activeCategoryProducts[i].item_id} \r\n                  title={activeCategoryProducts[i].item_name}\r\n                  imageUrl={activeCategoryProducts[i].image}\r\n                  itemName={activeCategoryProducts[i].item_name}\r\n                  category={activeCategoryProducts[i].category_name}\r\n                  price={activeCategoryProducts[i].price}\r\n                  orders={activeCategoryProducts[i].num_of_orders}\r\n                  status={activeCategoryProducts[i].status}\r\n                  rating={activeCategoryProducts[i].rating}\r\n                  reviews={activeCategoryProducts[i].reviews}\r\n                />\r\n              ))}\r\n          </Grid>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CategoryPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\SellerDashboard.js",["699","700","701","702","703","704","705","706","707","708","709"],"import {\r\n    Box,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n    Input,\r\n    Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon, MinusIcon, ArrowForwardIcon, StarIcon } from \"@chakra-ui/icons\";\r\n\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\"\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n} from \"@chakra-ui/react\"\r\nimport React, { useState } from \"react\";\r\nimport { Avatar, AvatarBadge, AvatarGroup } from \"@chakra-ui/react\"\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction SellerDashboard() {\r\n\r\n    return (\r\n        <Box\r\n            pt=\"150px\"\r\n            align='center'\r\n            pl={{ base: \"10px\", sm: \"100px\" }}\r\n            pr={{ base: \"10px\", sm: \"100px\" }}\r\n        >\r\n\r\n            <Grid\r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                gap={0}\r\n                textAlign='center'\r\n                pb='200px'\r\n                w='800px'\r\n            >\r\n                <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\r\n                    <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\" w='300px'>\r\n                        <Avatar size=\"3xl\" name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" marginTop='40px' />\r\n                    </Heading>\r\n                    <VStack>\r\n\r\n                    </VStack>\r\n                </GridItem>\r\n                <GridItem\r\n                    rowSpan={1}\r\n                    colSpan={4}\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    p=\"20px\"\r\n                >\r\n                    <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\r\n                        Account Settings\r\n            </Heading>\r\n                    <FormControl id=\"email\" mt='30px'>\r\n                        <FormLabel>Email address</FormLabel>\r\n                        <Input type=\"email\" />\r\n                        <FormLabel mt='10px'>User Name</FormLabel>\r\n                        <Input type=\"string\" />\r\n                        <FormLabel mt='10px'>Password</FormLabel>\r\n                        <Input type=\"password\" />\r\n                        <FormLabel mt='10px'>Re-Enter Password</FormLabel>\r\n                        <Input type=\"password\" />\r\n                        <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n                            <Button\r\n                                loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\r\n                                Update\r\n  </Button>\r\n                        </Stack>\r\n                    </FormControl>\r\n                </GridItem>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SellerDashboard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Navbar.js",["710","711","712","713","714","715","716"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  useColorMode,\r\n  IconButton,\r\n  ReactRouterLink,\r\n  Img,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\nimport Axios from \"axios\";\r\nimport checkLogin from \"../API_Service/checkLogin\"\r\n\r\nfunction Navbar(props) {\r\n  var his=useHistory();\r\n  const MenuItems = ({ children }) => (\r\n    <Button\r\n      mt={{ base: 4, md: 0 }}\r\n      mr={6}\r\n      display=\"block\"\r\n      colorScheme=\"teal.500\"\r\n      variant=\"link\"\r\n      color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.100\"}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n\r\n  const[isLoggedIn, setIsLoggedIn] = useState(props.isLoggedIn);\r\n  const [show, setShow] = React.useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n  // useEffect(() => {\r\n  //   Axios.get(\"http://localhost:5000/customer/login\")\r\n  //   .then((response) => {\r\n  //     console.log('is authenticated navbar?')\r\n  //     if(response.data.LoggedIn === true) {\r\n  //       // console.log(response.data)\r\n  //       setIsLoggedIn(true);\r\n  //     }else{\r\n  //       setIsLoggedIn(false);\r\n  //     }\r\n  //     });\r\n    \r\n  // }, [props.isLoggedIn])\r\n  \r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  // const isLoggedIn = checkLogin.isAuthenticated();\r\n  console.log(\"Navigation bar\")\r\n\r\n  // const logout=()=>{\r\n  //   checkLogin.clearCookie();\r\n  //   his.push('/');\r\n  // }\r\n\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      pt=\"1.0rem\"\r\n      bg={colorMode === \"light\" ? \"white\" : \"#101522\"}\r\n      color=\"white\"\r\n      position=\"fixed\"\r\n      top=\"0\"\r\n      width=\"100%\"\r\n      zIndex=\"10000\"\r\n    >\r\n      <Flex align=\"center\" mr={5}>\r\n        <Img ml=\"1.5rem\" src=\"../logo.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\r\n      </Flex>\r\n\r\n      <IconButton\r\n      display={{base:'block', md:'none'}}\r\n        variant=\"outline\"\r\n        colorScheme=\"cyan\"\r\n        icon={<HamburgerIcon />}\r\n        onClick={handleToggle}\r\n        mr='20px'\r\n      />\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\r\n        width={{ base: \"full\", md: \"auto\" }}\r\n        alignItems=\"center\"\r\n        flexGrow={1}\r\n        pl=\"20px\"\r\n      >\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/\">\r\n            Home\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/sellerhome\">\r\n            Dashboard\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/\">\r\n            About us\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/\">\r\n            Help\r\n          </Link>\r\n        </MenuItems>\r\n      </Box>\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n        mt={{ base: 4, md: 0 }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"lg\"\r\n          icon={<Icon as={FiShoppingCart} w={8} h={8}  />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n        />\r\n        <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"md\"\r\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          onClick={toggleColorMode}\r\n        />\r\n        <a href=\"/signin\">\r\n          {props.isLoggedIn ? <Button\r\n            type=\"button\"\r\n            border=\"1px\"\r\n            variant=\"ghost\"\r\n            mr=\"1.5rem\"\r\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          >\r\n            Log Out\r\n          </Button>: <Button\r\n            type=\"button\"\r\n            border=\"1px\"\r\n            variant=\"ghost\"\r\n            mr=\"1.5rem\"\r\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          >\r\n            Log In\r\n          </Button> }\r\n          \r\n        </a>\r\n      </Box>\r\n\r\n      <Box\r\n        w=\"100%\"\r\n        h=\"5px\"\r\n        b=\"0px\"\r\n        mt=\"10px\"\r\n        bg={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\TrackOrder.js",["717","718"],"import React from 'react'\r\nimport { \r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    Center,\r\n    useColorMode,\r\n    Badge,\r\n    Text\r\n        } from \"@chakra-ui/react\";\r\n\r\nconst TrackOrder = () => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n\r\n    return (\r\n        <Box \r\n            pt=\"110px\"\r\n            pl={{ base: \"10px\", sm: \"100px\" }}\r\n            pr={{ base: \"10px\", sm: \"100px\" }}\r\n        >\r\n            <Box mt='20px' mb='20px' p='3' bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\r\n                <Center><Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h3' size='md'>Track Your Order</Heading></Center>        \r\n            </Box>\r\n            <Grid\r\n                h=\"600px\"\r\n                templateRows=\"repeat(3, 1fr)\"\r\n                templateColumns=\"repeat(3, 1fr)\"\r\n                gap={4}\r\n            >\r\n                <GridItem colSpan={2}  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\r\n\r\n                <Box p='5'>\r\n                    <Badge mr='3' variant=\"outline\" fontSize='md' colorScheme=\"teal\">\r\n                    Estimated Delivery \r\n                    </Badge>\r\n                   dsdsd\r\n     \r\n                </Box>\r\n\r\n                </GridItem>\r\n\r\n                <GridItem bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\r\n\r\n                    <Box p='8'>\r\n                        xdsd\r\n                    </Box>\r\n\r\n                </GridItem>\r\n                <GridItem  rowSpan={2} colSpan={2} bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} />\r\n                <GridItem  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}/>\r\n            </Grid>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TrackOrder\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerDashboard.js",["719","720","721","722","723"],"import {\r\n  Box,\r\n  Grid,\r\n  GridItem,\r\n  Avatar,\r\n  Divider,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorMode,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport Axios from \"axios\";\r\n\r\nconst CustomerDashboard = () => {\r\n  const toast = useToast();\r\n\r\n  const [userdata, setUserdata] = useState([]);\r\n  const [orderNum, setOrderNum] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/customer/user\")\r\n      .then((Response) => {\r\n        console.log(Response.data.user[0]);\r\n        // console.log(Response.data.det);\r\n        setUserdata(Response.data.user[0]);\r\n        const det = arrangeData(Response.data.det);\r\n        setOrderNum(det);\r\n      })\r\n      .catch((err) => {\r\n        toast({\r\n          position: \"bottom-right\",\r\n          description: \"Loading Error\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const arrangeData = (data) => {\r\n    var newdata = {\r\n      Shipped: 0,\r\n      Preparing: 0,\r\n      Awaiting_Cancel: 0,\r\n      Cancelled: 0,\r\n      Delivered: 0,\r\n    };\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (data[i].Order_status === \"Shipped\") {\r\n        newdata.Shipped += 1;\r\n      } else if (data[i].Order_status === \"Preparing\") {\r\n        newdata.Preparing += 1;\r\n      } else if (data[i].Order_status === \"Awaiting_Cancel\") {\r\n        newdata.Awaiting_Cancel += 1;\r\n      } else if (data[i].Order_status === \"Cancelled\") {\r\n        newdata.Cancelled += 1;\r\n      } else if (data[i].Order_status === \"Delivered\") {\r\n        newdata.Delivered += 1;\r\n      }\r\n    }\r\n    // console.log(newdata);\r\n    return newdata;\r\n  };\r\n\r\n  // console.log(orderNum);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box\r\n      pt=\"100px\"\r\n      // pl={{ base: \"10px\", sm: \"100px\" }}\r\n      // pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Grid templateColumns=\"repeat(5, 1fr)\" templateRows=\"repeat(2, 1fr)\">\r\n        <GridItem colSpan={1} rowSpan={2}>\r\n          <CustomerDashSideBar page=\"dashboard\" />\r\n        </GridItem>\r\n\r\n        <GridItem colSpan={4} m={5} mt={8}>\r\n          <Box\r\n            width=\"auto\"\r\n            h=\"auto\"\r\n            overflow=\"hidden\"\r\n            p=\"10px\"\r\n            pb=\"5px\"\r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            borderRadius=\"10px\"\r\n          >\r\n            <Grid templateRows=\"repeat(2, 1fr)\" gap={4}>\r\n              <GridItem p=\"10px\">\r\n                <SimpleGrid columns={2} spacing={5}>\r\n                  <Box>\r\n                    <Avatar\r\n                      size=\"xl\"\r\n                      // name={userdata[0].First_Name + \" \" + userdata[0].Last_Name}\r\n                      src=\"https://images.unsplash.com/photo-1553267751-1c148a7280a1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80\"\r\n                    />\r\n                  </Box>\r\n                  <Box>\r\n                    <Heading size=\"lg\">\r\n                      {\" \"}\r\n                      Hello, {userdata.First_name +\r\n                        \" \" +\r\n                        userdata.Last_name}{\" \"}\r\n                    </Heading>\r\n                  </Box>\r\n                </SimpleGrid>\r\n              </GridItem>\r\n\r\n              <GridItem>\r\n                <Box\r\n                  bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                  borderRadius=\"md\"\r\n                  color=\"white\"\r\n                >\r\n                  <SimpleGrid columns={5} spacing={5} pt=\"10px\" pb=\"10px\">\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Preparing}{\" \"}\r\n                      </Heading>\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        Awaiting Shipment\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Shipped}{\" \"}\r\n                      </Heading>\r\n\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        Shipped\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Awaiting_Cancel}{\" \"}\r\n                      </Heading>\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        Awaiting Cancel\r\n                      </Text>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Cancelled}{\" \"}\r\n                      </Heading>\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        Cancelled\r\n                      </Text>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Delivered}{\" \"}\r\n                      </Heading>\r\n\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        Delivered\r\n                      </Text>\r\n                    </Box>\r\n                  </SimpleGrid>\r\n                </Box>\r\n              </GridItem>\r\n            </Grid>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerDashboard);\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\AllOrders.js",["724"],"\r\nimport {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    useColorMode,\r\n    Flex,\r\n    Heading,\r\n    Divider,\r\n    HStack,Spacer\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, {useState} from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport OrderTiles from \"..//components/OrderTiles\";\r\n\r\n  \r\n\r\nconst AllOrders = () => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const [orders,setOrders] = useState([\r\n        {\r\n            orderID:1,\r\n            orderStatus:'preparing',\r\n            orderedDate:'21/01',\r\n            orderItemTitle:'Purple Rose Jewelry Water Transfer Tattoo',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:5,\r\n            orderAmount:35.47,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n        {\r\n            orderID:2,\r\n            orderStatus:'shipped',\r\n            orderedDate:'13/01',\r\n            \r\n            orderItemTitle:'Marvel batman',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:2,\r\n            orderAmount:37.24,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n        {\r\n            orderID:3,\r\n            \r\n            orderStatus:'preparing',\r\n            orderedDate:'15/01',\r\n            \r\n            orderItemTitle:'sonic toy',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:3,\r\n            orderAmount:24.56,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n        {\r\n            orderID:4,\r\n            \r\n            orderStatus:'preparing',\r\n            orderedDate:'15/01',\r\n            \r\n            orderItemTitle:'sonic toy',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:3,\r\n            orderAmount:24.56,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n        {\r\n            orderID:5,\r\n            \r\n            orderStatus:'preparing',\r\n            orderedDate:'15/01',\r\n            \r\n            orderItemTitle:'sonic toy',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:3,\r\n            orderAmount:24.56,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n    ])\r\n\r\n\r\n    const countOrders = ()=>{\r\n        var prep = 0\r\n        var ship = 0\r\n        var canc = 0\r\n        var await_can = 0\r\n        var received = 0\r\n        for (var i=0;i<orders.length;i++){\r\n            if(orders[i].orderStatus==='preparing'){\r\n                prep+=1\r\n            }\r\n            else if (orders[i].orderStatus==='shipped'){\r\n                ship+=1\r\n            }\r\n            else if (orders[i].orderStatus==='cancelled'){\r\n                canc+=1\r\n            }\r\n            else if (orders[i].orderStatus==='await_cancel'){\r\n                await_can+=1\r\n            }\r\n            else if (orders[i].orderStatus==='received'){\r\n                received+=1\r\n            }\r\n        }\r\n        return {prep,ship,canc,await_can,received}\r\n    }\r\n\r\n    const getacount = countOrders()\r\n\r\n    const cancelOrder = (order_id)=>{\r\n            // console.log(order_id)\r\n            setOrders(orders.map(\r\n              (order)=>order.orderID===order_id?{...order,orderStatus:'await_cancel'}:order\r\n            ))\r\n            \r\n    }\r\n\r\n    const confirmOrder = (order_id)=>{\r\n        setOrders(orders.map(\r\n            (order)=>order.orderID===order_id?{...order,orderStatus:'received'}:order\r\n          ))\r\n    }\r\n\r\n\r\n    return (\r\n        <Box\r\n        \r\n        pt=\"100px\"\r\n        // pl={{ base: \"10px\", sm: \"100px\" }}\r\n        // pr={{ base: \"10px\", sm: \"100px\" }} \r\n        >\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid>\r\n\r\n                            <GridItem bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> All Orders </Heading> \r\n                                    </Box>\r\n                            \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                            <GridItem p='5'>\r\n                              <Grid templateColumns=\"repeat(5, 1fr)\">\r\n                                <GridItem colSpan={4}>\r\n\r\n                                    <OrderTiles orders={orders} cancelOrder={cancelOrder} confirmOrder={confirmOrder}/>\r\n\r\n                                </GridItem>\r\n                                <GridItem >\r\n                                    <Box bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} p='10px' mt='20px' color={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>\r\n                                        <Heading size='sm' textAlign='center'>Summary</Heading>\r\n                                        <Divider mt='2' mb='2'/>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Preparing </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.prep}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Shipped </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.ship}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Await Cancel </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.await_can}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Cancelled </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.canc}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Received </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.received}</Box>\r\n                                        </HStack>\r\n                                    </Box>\r\n\r\n                                </GridItem>\r\n                              </Grid>\r\n                            </GridItem>\r\n                       \r\n                             \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AllOrders\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerAdress.js",["725","726","727"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,  \r\n    Flex,\r\n    Spacer ,\r\n    Button,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalBody,\r\n    ModalContent,\r\n    ModalOverlay,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    useToast,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport ShipAddressses from \"../components/ShipAddressses\";\r\nimport AddAddress from \"../components/AddAddress\"\r\nimport Axios from \"axios\";\r\n\r\nconst CustomerAddress = () => {\r\n\r\n    const [address,setAddress] = useState([])\r\n\r\n    // {\r\n    //     id:1,\r\n    //     name:'pasan madushan',\r\n    //     tp:'07704543436',\r\n    //     street:'1234',\r\n    //     city:'abc',\r\n    //     state:'def',\r\n    //     zip:'12121'   \r\n                   \r\n    // },\r\n    // {\r\n    //     id:2,\r\n    //     name:'vimukthi madushan',\r\n    //     tp:'077238404543436',\r\n    //     street:'sdfsdf',\r\n    //     city:'sdflndsfldsnfk',\r\n    //     state:'slfnsdflnsdf',\r\n    //     zip:'1203948234121'      \r\n               \r\n    // },\r\n    // {\r\n    //     id:3,\r\n    //     name:'chalindu malshika',\r\n    //     tp:'077043543436',\r\n    //     street:'0324284',\r\n    //     city:'rathnapura',\r\n    //     state:'hdlfdfs',\r\n    //     zip:'139202121'     \r\n        \r\n         \r\n    // },\r\n    // {\r\n    //     id:4,\r\n    //     name:'chandima',\r\n    //     tp:'042342492',\r\n    //     street:'1234',\r\n    //     city:'jsdofjsdof',\r\n    //     state:'sdofjdsf',\r\n    //     zip:'12121'    \r\n                  \r\n    // },\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const toast = useToast()\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/customer/addresses\")\r\n        .then((Response)=>{\r\n            // console.log(Response.data.addresses);\r\n            setAddress(Response.data.addresses);\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error loading data\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }, [])\r\n\r\n    \r\n\r\n    //delete an addresss\r\n    const deleteAddress  = (id)=>{\r\n        Axios.delete(\"http://localhost:5000/customer/addresses\",{data:{id:id}})\r\n        .then((Response)=>{\r\n            // console.log(Response);\r\n            setAddress(address.filter(\r\n                (address)=>address.Address_ID!==id\r\n            ))\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Shipping address deleted successfully\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n\r\n        \r\n    }\r\n\r\n    //add new address\r\n    const addAddress = (Address)=>{\r\n        console.log(Address);\r\n        Axios.post(\"http://localhost:5000/customer/addresses\",{Address:Address})\r\n        .then((Response)=>{\r\n            var Address_ID = Response.data.insertId;\r\n            // console.log(Response.json());\r\n            var newAddress = {Address_ID,...Address}\r\n            // console.log(newAddress);\r\n            setAddress([...address,newAddress]);\r\n           \r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"New shipping address added successfully\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          });  \r\n\r\n    }\r\n\r\n    //update address\r\n    const updateAddress  = async(data)=>{\r\n        console.log('update address data ----------------')\r\n        console.log(data);\r\n        // setTasks(tasks.map(\r\n        //     (task)=>task.id===id?{...task,reminder:data.reminder}:task\r\n        //   ))\r\n        // await setAddress(address.map(\r\n        //     (address1)=>address1.id==data.id?{...address1,name:data.name}:address1\r\n        // ))\r\n        // // console.log(address[0])\r\n          setAddress(address.map(\r\n            (address1)=>(address1.id==data.id)?{...address1,data}:address1\r\n        ))\r\n          }\r\n\r\n\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    \r\n\r\n    return (\r\n        <Box\r\n        \r\n        pt=\"100px\"\r\n        // pl={{ base: \"10px\", sm: \"100px\" }}\r\n        // pr={{ base: \"10px\", sm: \"100px\" }} \r\n        >\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\r\n\r\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> My Shipping Address </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <Box p=\"1\">\r\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\r\n                                            Add Shipping Address\r\n                                        </Button>\r\n                    \r\n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n                                            <ModalOverlay />\r\n                                                <ModalContent>\r\n                                                    <ModalHeader>Add New Shipping Address</ModalHeader>\r\n                                                    <ModalCloseButton />\r\n                                                    <ModalBody pb='5'>\r\n                                                    <AddAddress addAddress={addAddress} trigger={onClose}/>\r\n                                                     </ModalBody>\r\n                                                    \r\n                                                </ModalContent>\r\n                                            </Modal>\r\n\r\n                                    </Box>\r\n                                 \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                       \r\n                                <ShipAddressses addresses={address} deleteAddress={deleteAddress}  updateAddress={updateAddress}  />\r\n  \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CustomerAddress\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\ChangePersonalDet.js",["728","729","730","731","732"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    useColorMode,\r\n    Flex,\r\n    Heading,\r\n    useDisclosure,\r\n    useToast,\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\r\nimport ChangePersonalDetails from \"../components/ChangePersonalDetForm\";\r\n\r\nconst ChangePersonalDet = () => { \r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const toast = useToast();\r\n\r\n        return (\r\n            <Box\r\n            \r\n            pt=\"100px\"\r\n            // pl={{ base: \"10px\", sm: \"100px\" }}\r\n            // pr={{ base: \"10px\", sm: \"100px\" }} \r\n            >\r\n                \r\n                <Grid\r\n            \r\n            templateColumns=\"repeat(5, 1fr)\"\r\n            templateRows=\"repeat(1, 1fr)\"\r\n            \r\n        >        \r\n            <GridItem  colSpan={1} rowSpan={2} >\r\n                <CustomerDashSideBar page=\"customeraddress\" />\r\n            </GridItem>\r\n        \r\n            <GridItem colSpan={4} >\r\n                <Box \r\n                    width=\"auto\"\r\n                    h=\"auto\"                   \r\n                    overflow=\"hidden\"                    \r\n                    pb=\"5px\"                      \r\n                    >\r\n                    \r\n                  </Box>\r\n\r\n                    <Grid templateColumns=\"repeat(3)\">\r\n\r\n                        <GridItem bg='cyan.900' p='10px' colSpan={3}>\r\n                            <Flex> \r\n                                <Box  p=\"3\">\r\n                                <Heading as='h3' size='md' color='white'> Change Account Details </Heading> \r\n                                </Box>\r\n                                                   \r\n                             </Flex>\r\n                        </GridItem>\r\n\r\n                        <GridItem colSpan={2}>\r\n                              <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'>         \r\n                            <ChangePersonalDetails />  \r\n                            {/* data={ personaldet } updateDetails={updateDetails}  */}\r\n                            </Box>\r\n                       </GridItem>\r\n\r\n                       <GridItem >\r\n                       <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'> \r\n                       <ChangePasswordForm />\r\n                       \r\n                       </Box>\r\n                       </GridItem>\r\n\r\n                    </Grid>\r\n            </GridItem>\r\n\r\n         \r\n        </Grid>\r\n\r\n    \r\n            </Box>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default ChangePersonalDet","F:\\DB_Project\\Front-end-react\\src\\pages\\CardDetails.js",["733","734"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,  \r\n    Flex,\r\n    Spacer ,\r\n    Button,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalBody,\r\n    ModalContent,\r\n    ModalOverlay,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    useToast,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport AddBankCard from \"../components/AddBankCard\";\r\nimport BankCards from \"../components/BankCards\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport Axios from \"axios\";\r\n\r\nconst CardDetails = () => {\r\n\r\n    const [bankCards,setBankCards] = useState([])\r\n\r\n    // {\r\n    //     Card_Number:323446453434,\r\n    //     Owner:'pasan madushan',\r\n    //     cvv:'123',\r\n    //     Exp_Date:'10/12',\r\n              \r\n    // },\r\n    // {\r\n    //     Card_Number:323446453435,\r\n    //     Owner:'vimukthi madushan',\r\n    //     cvv:'123',\r\n    //     Exp_Date:'10/12',\r\n              \r\n    // },\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const toast = useToast()\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/customer/bankCards\")\r\n        .then((Response)=>{\r\n            // console.log(Response.data.addresses);\r\n            setBankCards(Response.data.bankCards);\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error loading data\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }, [])\r\n\r\n\r\n    //delete a card\r\n    const deleteBankCard  = (cardNumber)=>{\r\n\r\n        Axios.delete(\"http://localhost:5000/customer/bankCards\",{data:{cardNumber:cardNumber}})\r\n        .then((Response)=>{\r\n            // console.log(Response);\r\n            setBankCards(bankCards.filter(\r\n                (bankCard)=>bankCard.Card_Number!==cardNumber\r\n            ))\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Bank Card deleted successfully\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }\r\n\r\n    //add new card\r\n    const addBankCard = (CardDetails)=>{\r\n\r\n        Axios.post(\"http://localhost:5000/customer/bankCards\",{CardDetails:CardDetails})\r\n        .then((Response)=>{\r\n            // console.log(Response.json());\r\n            // console.log(newAddress);\r\n            setBankCards([...bankCards,CardDetails]);\r\n           \r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"New payment method added successfully\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          });       \r\n\r\n    }\r\n\r\n   \r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    \r\n\r\n    return (\r\n        <Box   pt=\"100px\">\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\r\n\r\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> Card & Bank Details </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <Box p=\"1\">\r\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\r\n                                            Add New Payment Method\r\n                                        </Button>\r\n                    \r\n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n                                            <ModalOverlay />\r\n                                                <ModalContent>\r\n                                                    <ModalHeader>Add New Payment Method</ModalHeader>\r\n                                                    <ModalCloseButton />\r\n                                                    <ModalBody pb='5'>\r\n                                                    <AddBankCard addBankCard={addBankCard} trigger={onClose}/>\r\n                                                     </ModalBody>\r\n                                                    \r\n                                                </ModalContent>\r\n                                            </Modal>\r\n\r\n                                    </Box>\r\n                                 \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                                <BankCards bankcards={bankCards} deleteBankCard={deleteBankCard} />\r\n                                \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CardDetails\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ReviewCountPreview.js",["735","736","737","738","739","740","741","742"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n  VStack,\r\n  Progress,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction ReviewCountPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  const total_reviews = props.feedbacks.length;\r\n\r\n  var s5 = 0;\r\n  var s4 = 0;\r\n  var s3 = 0;\r\n  var s2 = 0;\r\n  var s1 = 0;\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rate === 5) {\r\n      s5 = s5 + 1;\r\n    } else if (props.feedbacks[i].rate === 4) {\r\n      s4 = s4 + 1;\r\n    } else if (props.feedbacks[i].rate === 3) {\r\n      s3 = s3 + 1;\r\n    } else if (props.feedbacks[i].rate === 2) {\r\n      s2 = s2 + 1;\r\n    } else if (props.feedbacks[i].rate === 1) {\r\n      s1 = s1 + 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          5 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s5} reviews\r\n        </Text>\r\n        <Progress value={(s5 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          4 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s4} reviews\r\n        </Text>\r\n        <Progress value={(s4 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          3 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s3} reviews\r\n        </Text>\r\n        <Progress value={(s3 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          2 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s2} reviews\r\n        </Text>\r\n        <Progress value={(s2 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          1 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s1} reviews\r\n        </Text>\r\n        <Progress value={(s1 / total_reviews) * 100} />\r\n      </Box>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default ReviewCountPreview;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\CategorizedReviewPreview.js",["743"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction CategorizedReviewPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  var stars = (rating) => {\r\n    return Array(5)\r\n      .fill(\"\")\r\n      .map((_, j) => (\r\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\r\n      ));\r\n  };\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rate === props.rating || props.rating === 'all') {\r\n      reviews.push(\r\n        <Box mb='10px'>\r\n          <HStack>\r\n            <Avatar\r\n              name={props.feedbacks[i].first_name +' ' +props.feedbacks[i].last_name}\r\n              src={props.feedbacks[i].customer_dp}\r\n            />\r\n            <Box\r\n              w=\"100%\"\r\n              borderWidth=\"2px\"\r\n              borderRadius=\"lg\"\r\n              p=\"10px\"\r\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\r\n            >\r\n              <Heading as=\"h5\" size=\"sm\">\r\n                {props.feedbacks[i].first_name +' ' +props.feedbacks[i].last_name}\r\n              </Heading>\r\n              <Text>{props.feedbacks[i].comment}</Text>\r\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n                {stars(props.feedbacks[i].rate)}\r\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n                  {props.feedbacks[i].rate}/5\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </HStack>\r\n          <Replys replys={[]} />\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (reviews.length === 0) {\r\n    reviews.push(<Text>No reviews</Text>);\r\n  }\r\n\r\n  return <>{reviews}</>;\r\n}\r\n\r\nexport default CategorizedReviewPreview;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBar.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ProductCard.js",["744","745","746"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Badge,\r\n  Link,\r\n  ReactRouterLink\r\n} from \"@chakra-ui/react\";\r\nimport { encode } from \"base64-arraybuffer\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nfunction ProductCard(props) {\r\n  return (\r\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\r\n      <Image\r\n        src={`data:image/png;base64,${arrayBufferToBinaryString(props.imageUrl ? props.imageUrl.data : '')}`}\r\n        alt=\"product image\"\r\n        w=\"200px\"\r\n        h=\"200px\"\r\n      />\r\n      <Box p=\"6\">\r\n        <Badge\r\n          borderRadius=\"full\"\r\n          px=\"2\"\r\n          colorScheme=\"yellow\"\r\n          variant=\"outline\"\r\n          fontSize=\"9px\"\r\n        >\r\n          {props.category}\r\n        </Badge>\r\n        <Box\r\n          fontWeight=\"semibold\"\r\n          as=\"h4\"\r\n          lineHeight=\"tight\"\r\n          fontSize=\"xl\"\r\n          isTruncated\r\n        >\r\n          <Link href={`/productpage/${props.item_id}`}>{props.title}</Link>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Text color=\"gray.600\" fontSize=\"3xl\">\r\n            Rs. {props.price}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\r\n          <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\r\n          >\r\n            {props.status}\r\n          </Badge>\r\n          <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n            ml=\"2\"\r\n          >\r\n            {props.orders} Orders\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n          {Array(5)\r\n            .fill(\"\")\r\n            .map((_, i) => (\r\n              <StarIcon\r\n                key={i}\r\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\r\n              />\r\n            ))}\r\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n            {props.reviews} reviews\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\CustomerDashSideBar.js",["747","748","749","750","751","752"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,\r\n    Text,\r\n    Divider,\r\n    Link,\r\n    Button,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\n\r\n\r\nconst CustomerDashSideBar = ({page}) => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const sidebarButton = {\r\n        width:'80%',   \r\n        marginTop:'7px',\r\n        marginBottom:'7px',\r\n        marginLeft:'10%',\r\n        marginRight:'10%'\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            width=\"auto\"\r\n            height={window.innerHeight-100}\r\n            // height=\"100%\"\r\n            overflow=\"hidden\"\r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            pt='5'  \r\n           \r\n                    \r\n        >                   \r\n                <Link href='/customerdashboard'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Dashboard </Button> </Link>     \r\n          \r\n                <Link href='/allorders'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> My Orders  </Button> </Link>     \r\n         \r\n                <Link href='/carddetails'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Card & Bank Details  </Button></Link>     \r\n            \r\n                <Link href='/shippingaddress'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Shipping Address </Button></Link>     \r\n         \r\n                <Link href='/changepersonaldet'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Change Account Details </Button></Link>     \r\n           \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CustomerDashSideBar\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\AddAddress.js",["753"],"import { useState } from 'react';\r\nimport{\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    useToast\r\n\r\n} from \"@chakra-ui/react\";\r\n\r\nconst AddAddress = ({addAddress,trigger}) => {\r\n    const [First_Name,setFirstName] = useState('')\r\n    const [Last_Name,setLastName] = useState('')\r\n    const [Street,setStreet] = useState('')\r\n    const [City,setCity] = useState('')\r\n    const [State,setState] = useState('')\r\n    const [ZIP,setZip] = useState('')\r\n\r\n    const toast = useToast()\r\n\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!First_Name || !Last_Name || !Street || !City || !State || !ZIP){\r\n            alert('Empty Field')\r\n            return\r\n        }\r\n        \r\n        addAddress({First_Name,Last_Name,Street,City,State,ZIP})\r\n\r\n        setFirstName('')\r\n        setLastName('')\r\n        setStreet('')\r\n        setCity('')\r\n        setState('')\r\n        setZip('')\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={onSubmit} >\r\n            <FormControl>\r\n                <FormLabel>First Name</FormLabel>\r\n                <Input type=\"text\" placeholder='Name' value={First_Name} onChange={(e)=>setFirstName(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Last Name</FormLabel>\r\n                <Input type=\"text\" placeholder='Telephone' value={Last_Name} onChange={(e)=>setLastName(e.target.value)}  />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Street</FormLabel>\r\n                <Input type=\"text\" placeholder='Street' value={Street} onChange={(e)=>setStreet(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>City</FormLabel>\r\n                <Input type=\"text\" placeholder='City' value={City} onChange={(e)=>setCity(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>State</FormLabel>\r\n                <Input type=\"text\" placeholder='State' value={State} onChange={(e)=>setState(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Zip</FormLabel>\r\n                <Input type=\"text\" placeholder='Zip' value={ZIP} onChange={(e)=>setZip(e.target.value)} />\r\n            </FormControl>\r\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Address' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddAddress\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTiles.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddressses.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ChangePersonalDetForm.js",["754"],"import {\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    Heading,\r\n    Input,\r\n    useToast\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport { useState,useEffect } from 'react';\r\nimport Axios from \"axios\";\r\n\r\nconst ChangePersonalDetForm = () => {\r\n    const [UserID,setUserID] = useState('')\r\n    const [firstname,setFirstName] = useState('')\r\n    const [lastname,setLastName] = useState('')\r\n    const [telephone,setTelephone] = useState('')\r\n    const [Email,setEmail] = useState('')\r\n   \r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/customer/user\")\r\n        .then((Response)=>{\r\n            console.log(Response.data);\r\n            setFirstName(Response.data.user[0].First_name);\r\n            setLastName(Response.data.user[0].Last_name);\r\n            setTelephone(Response.data.user[0].Phone_No);\r\n            setEmail(Response.data.user[0].Email);\r\n            setUserID(Response.data.user[0].UserID);\r\n            \r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error loading data\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }, [])\r\n\r\n    \r\n    const toast = useToast()\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(telephone.length!==10){\r\n            alert(\"Invalid Mobile Number\")\r\n            return\r\n        }\r\n\r\n\r\n        Axios.put('http://localhost:5000/customer/user',{UserID,firstname,lastname,telephone,Email})\r\n        .then((Response)=>{\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Successfully Updated the Personal Data\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          });  \r\n    }\r\n\r\n    console.log(firstname,lastname,telephone,Email)\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Heading size='lg' mb='5'>Change Personal Details</Heading>\r\n            <form onSubmit={onSubmit} >\r\n                <FormControl id=\"firstname\" mb='8'>\r\n                    <FormLabel>First Name</FormLabel>\r\n                                \r\n                        <Input   \r\n                            type='text'  \r\n                            placeholder='First Name'       \r\n                            defaultValue={firstname}\r\n                            name='firstname'\r\n                            onChange={(e)=>setFirstName(e.target.value)}\r\n                            required\r\n                        />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"lastname\" mb='8'>\r\n                    <FormLabel>Last Name</FormLabel>\r\n                                \r\n                        <Input \r\n                            type='text'  \r\n                            placeholder='Last Name'  \r\n                            defaultValue={lastname} \r\n                            name='lastname'\r\n                            onChange={(e)=>setLastName(e.target.value)}\r\n                            required\r\n                        />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"email\" mb='8'>\r\n                    <FormLabel>Email</FormLabel>\r\n                                \r\n                        <Input   \r\n                            type='email'\r\n                            placeholder='Email'  \r\n                            defaultValue={Email} \r\n                            name='Email'\r\n                            onChange={(e)=>setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"tel\" mb='8'>\r\n                    <FormLabel>Telephone Number</FormLabel>\r\n                                \r\n                        <Input   \r\n                            type='number'\r\n                            placeholder='Telephone Number'       \r\n                            defaultValue={telephone}\r\n                            name='telephone'\r\n                            onChange={(e)=>setTelephone(e.target.value)}\r\n                            required\r\n                        />\r\n                </FormControl>\r\n\r\n                <Input mt='2' mb='2'  type=\"submit\" value='Update Details' className='btn btn-block' bg=\"teal.600\" color='white'  />\r\n                            \r\n\r\n\r\n\r\n\r\n\r\n            </form>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangePersonalDetForm\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\AddBankCard.js",["755","756"],"import { useState } from 'react';\r\nimport{\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    useToast\r\n\r\n} from \"@chakra-ui/react\";\r\n\r\nconst AddBankCard = ({addBankCard,trigger}) => {\r\n    const [Card_Number,setCardNumber] = useState('')\r\n    const [Owner,setOwner] = useState('')\r\n    const [CVV,setCvv] = useState('')\r\n    const [Exp_Date,setExpDate] = useState('')\r\n    const [Bank_Name,setBankName] = useState('')\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!Card_Number || !Owner || !CVV || !Exp_Date || !Bank_Name){\r\n            alert('Empty Field')\r\n            return\r\n        }\r\n\r\n        if(Card_Number.toString().length!==12){\r\n            alert('Invalid Card Number')\r\n            return\r\n        }\r\n    \r\n        var givenDate = new Date(Exp_Date);\r\n        var today = new Date();\r\n        if (givenDate.getFullYear() < today.getFullYear()) {\r\n            alert('card is expired')\r\n            return\r\n        }\r\n        else if (givenDate.getFullYear() == today.getFullYear()){\r\n            if(givenDate.getMonth() < today.getMonth()){\r\n                alert('card is expired')\r\n                return\r\n            }\r\n        }\r\n    \r\n        \r\n        addBankCard({Card_Number,Owner,CVV,Exp_Date,Bank_Name})\r\n\r\n        setCardNumber('')\r\n        setOwner('')\r\n        setCvv('')\r\n        setExpDate('')\r\n        setBankName('')\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={onSubmit} >\r\n            <FormControl>\r\n                <FormLabel>Bank Number</FormLabel>\r\n                <Input type=\"text\" placeholder='Bank Name' value={Bank_Name} onChange={(e)=>setBankName(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Card Number</FormLabel>\r\n                <Input type=\"number\" placeholder='Card Number' value={Card_Number} onChange={(e)=>setCardNumber(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Owner</FormLabel>\r\n                <Input type=\"text\" placeholder='Owner' value={Owner} onChange={(e)=>setOwner(e.target.value)}  />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>CVV</FormLabel>\r\n                <Input type=\"number\" placeholder='CVV' value={CVV} onChange={(e)=>setCvv(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Exp Date</FormLabel>\r\n                <Input type=\"month\" placeholder='Exp Date' value={Exp_Date} onChange={(e)=>setExpDate(e.target.value)} />\r\n            </FormControl>\r\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Card Details' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddBankCard\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePasswordForm.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\BankCards.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\Replys.js",["757"],"import {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nfunction Replys(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const dp = \"\";\r\n\r\n  var replys = [];\r\n  for (var i = 0; i < props.replys.length; i++) {\r\n    replys.push(\r\n      <HStack spacing=\"10px\" w=\"100%\">\r\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\r\n        <Box\r\n          w=\"100%\"\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          p=\"10px\"\r\n          mt=\"20px\"\r\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\r\n        >\r\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\r\n          <Text>{props.replys[i]}</Text>\r\n        </Box>\r\n      </HStack>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box ml=\"100px\" mt='10px'>\r\n      <VStack w=\"100%\">{replys}</VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Replys;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTile.js",["758","759","760"],"\r\nimport {\r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    useColorMode,\r\n    SimpleGrid,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    HStack,\r\n    Badge,\r\n    Button,\r\n    VStack,\r\n    Link,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverArrow,\r\n    PopoverBody,\r\n    PopoverCloseButton,\r\n    PopoverFooter,\r\n    ButtonGroup\r\n  } from \"@chakra-ui/react\";\r\n\r\nconst OrderTile = ({order,cancelOrder,confirmOrder}) => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n// try with normal functions\r\n    const StatusBadge = ({status})=>{\r\n        if(status==='shipped'){\r\n            return (<Badge colorScheme=\"green\">Shipped</Badge>)\r\n        }\r\n        else if (status==='preparing'){\r\n            return (<Badge colorScheme=\"yellow\">Preparing</Badge>)\r\n        }\r\n        else if (status==='cancelled'){\r\n            return (<Badge colorScheme=\"red\">Cancelled</Badge>)\r\n        }\r\n        else if (status==='received'){\r\n            return (<Badge colorScheme=\"gray.100\">received</Badge>)\r\n        }\r\n        else if (status==='await_cancel'){\r\n            return  (<Badge colorScheme=\"yellow\">Await Cancel</Badge>)\r\n        }\r\n        else{\r\n            return <div></div>\r\n        }\r\n    }    \r\n\r\n    const OrderActions = ({status})=>{\r\n        if(status=='shipped'){\r\n            return (<VStack>\r\n                <Link href={\"https://parcelsapp.com/en/tracking/\"+order.trackingNumber} isExternal><Button colorScheme='teal' size='xs'>Track Order</Button></Link>\r\n                <Button colorScheme='teal' size='xs' onClick={()=>{confirmOrder(order.orderID)}}>Confirm Received</Button>\r\n            </VStack>)\r\n        }\r\n        else if (status=='preparing'){\r\n            return (\r\n            <Box>\r\n                \r\n                <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme='teal' size='xs'  >Cancel Order</Button>\r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader textAlign='left' fontWeight=\"semibold\">Cancel the order</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody textAlign='center'>\r\n                            Are you really want to cancel the order\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{cancelOrder(order.orderID)}}>Cancel Order</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                  \r\n                </Box>\r\n            )\r\n        }\r\n        else{\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  m='5' color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\r\n            <Grid>\r\n                <GridItem p='2' bg={colorMode === \"light\" ? \"teal.500\" : \"teal.50\"} color={colorMode === \"light\" ? \"teal.50\" : \"teal.500\"} >\r\n                    <SimpleGrid columns={3} textAlign='center'>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order ID</Heading>\r\n                            <Text>{order.orderID}</Text>\r\n                        </Box>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order Date</Heading>\r\n                            <Text>{order.orderedDate}</Text>\r\n                        </Box>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order Amount</Heading>\r\n                            <Text>{order.orderAmount}</Text>\r\n                        </Box>\r\n                    </SimpleGrid>\r\n\r\n                </GridItem>\r\n                <GridItem p='2'  color={colorMode === \"light\" ? \"teal.800\" : \"teal.50\"} >\r\n\r\n                    <SimpleGrid columns={3} p='2'>\r\n                        <HStack>\r\n                            <Image\r\n                                boxSize=\"80px\"\r\n                                objectFit=\"cover\"\r\n                                src={order.orderItemImage}\r\n                                alt={order.orderItemImage}\r\n                            />\r\n                            <Heading as='h6' size='xs'>{order.orderItemTitle}</Heading>\r\n                        </HStack>\r\n                        <Box textAlign='center'>\r\n                           <StatusBadge  status={order.orderStatus}/>\r\n                        </Box>\r\n                        <Box textAlign='center'>\r\n                            {/* {order.status==='shipped'?(\r\n                       <Box>    {console.log(\"shipped\")}\r\n             <Button colorScheme='teal' size='xs'>Track Order</Button>\r\n                <Button colorScheme='teal' size='xs'>Confirm Received</Button>\r\n                                </Box>\r\n            ):(<Box><Button colorScheme='teal' size='xs'  onClick={()=>{cancelOrder(order.orderID)}}>Cancel Order</Button></Box>)} */}\r\n                             <OrderActions status={order.orderStatus}/> \r\n                           \r\n                        </Box>\r\n                    </SimpleGrid>\r\n\r\n                </GridItem>\r\n             \r\n\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default OrderTile\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddress.js",["761","762","763","764","765","766","767"],"import {React, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    GridItem,\r\n    useColorMode,\r\n    useDisclosure,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    ButtonGroup,\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\r\n\r\n\r\nconst ShipAddress = ({address,deleteAddress,updateAddress}) => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    // const [data, setData] = useState({\r\n    //     id: address.Address_ID,\r\n    //     name: address.First_Name + address.Last_Name,\r\n    //     tp: address.tp,\r\n    //     street: address.Street,\r\n    //     city: address.City,\r\n    //     state: address.State,\r\n    //     zip: address.ZIP,\r\n    // })\r\n    \r\n    // const handleSubmit = (e)=>{\r\n    //     e.preventDefault()\r\n    //     // console.log('---------handlesubmit data--------')\r\n    //     // console.log(data)\r\n    //     updateAddress(data)\r\n        \r\n    //     // updateAddress(address.id)\r\n    // }\r\n\r\n    // const handleChange =  (event) => {\r\n    //     var value = event.target.value;\r\n    //     var name = event.target.name;\r\n\r\n    //     setData({ ...data, [event.target.name]: value })\r\n    //     // console.log(data)\r\n    // };\r\n\r\n\r\n    return(\r\n        <GridItem>\r\n        <Box  \r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            borderRadius='md'\r\n            border='1px'\r\n            borderColor='cyan.600'\r\n            p='6'\r\n            m='4'\r\n            pb='3'\r\n           \r\n            >\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                    <ImUser />\r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"lg\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        { address.First_Name +\" \" +  address.Last_Name }\r\n                    </Box>\r\n                </Box> \r\n                {/* <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                \r\n                    <ImPhone color='cyan.600'/>\r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        { address.tp }\r\n                    </Box>\r\n                </Box>  */}\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" mt='2' mb='5'>\r\n                \r\n                    <ImLocation m='3'/>\r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        <Box>{ address.Street }</Box>\r\n                        <Box>{ address.City }</Box>\r\n                        <Box>{ address.State }</Box>\r\n                        <Box>{ address.ZIP }</Box>\r\n                    </Box>\r\n                </Box> \r\n               \r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n\r\n                    {/* Delete Address */}\r\n                \r\n                    <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader fontWeight=\"semibold\">Delete Shipping Address</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody>\r\n                            Are you sure you want to delete the shipping address?\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteAddress(address.Address_ID)}}>Delete</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                   \r\n                </Box>\r\n\r\n        </Box>\r\n        </GridItem>\r\n    )\r\n}\r\n\r\nexport default ShipAddress\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {/* {/* Edit Address \r\n\r\n                     <Button colorScheme=\"teal\" size=\"xs\" mr='2' onClick={onOpen} >\r\n                        Edit\r\n                    </Button> \r\n                    {/* Edit modal */}\r\n                    // <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n                    //     <ModalOverlay />\r\n                    //     <ModalContent>\r\n                    //         <ModalHeader>Edit shipping address</ModalHeader>\r\n                    //             <ModalCloseButton />\r\n                           \r\n                        // <form onSubmit={handleSubmit}>\r\n                        //     <ModalBody>\r\n                            \r\n                        //     <FormControl id=\"name\" > */}\r\n                        //         <FormLabel>Name</FormLabel>\r\n                                \r\n                        //         <Input   \r\n                        //         placeholder='Name'       \r\n                        //         value={data.name}\r\n                        //         name='name'\r\n                        //         onChange={(event) => handleChange(event)}\r\n                        //         />\r\n                        //     </FormControl>\r\n\r\n                        //     <FormControl id=\"tp\" >\r\n                        //         <FormLabel>Telephone</FormLabel>\r\n                        //         <Input \r\n                        //         placeholder=\"Telephone\" \r\n                            //     value={data.tp}\r\n                            //     name='tp'\r\n                            //     onChange={(event) => handleChange(event)}  />\r\n                            // </FormControl>\r\n\r\n                            // <FormControl id=\"street\" >\r\n                            //     <FormLabel>Street</FormLabel>\r\n                            //     <Input \r\n                            //     placeholder=\"street\" \r\n                            //     value={data.street}\r\n                            //     name='street'\r\n                            //     onChange={(event) => handleChange(event)} />\r\n                            // </FormControl>\r\n                            // <FormControl id=\"city\" >\r\n                            //     <FormLabel>City</FormLabel>\r\n                            //     <Input placeholder=\"city\" \r\n                            //     value={data.city}\r\n                            //     name='city'\r\n                            //     onChange={(event) => handleChange(event)} />\r\n                            // </FormControl>\r\n                            // <FormControl id=\"state\" >\r\n                            //     <FormLabel>State</FormLabel>\r\n                    //             <Input placeholder=\"state\" \r\n                    //             value={data.state}\r\n                    //             name='state'\r\n                    //             onChange={(event) => handleChange(event)}\r\n                    //             />\r\n                    //         </FormControl>\r\n                    //         <FormControl id=\"zip\" >\r\n                    //             <FormLabel>Zip</FormLabel>\r\n                    //             <Input placeholder=\"zip\" \r\n                    //             value={data.zip}\r\n                    //             name='zip'\r\n                    //             onChange={(event) => handleChange(event)}\r\n                    //             />\r\n                    //         </FormControl>\r\n                           \r\n                               \r\n                    //         </ModalBody>\r\n                    //         <ModalFooter>\r\n                    //         <Input mt='2' mb='2'  type=\"submit\" value='Update' className='btn btn-block' bg=\"teal.400\" color='white' onClick={onClose} />\r\n                    //             {/* <Button colorScheme=\"green\"  onClick={trigger} >Update</Button>                               */}\r\n                    //         </ModalFooter>\r\n                    //     </form>\r\n                    //     </ModalContent>\r\n                    // </Modal> */}\r\n\r\n    ","F:\\DB_Project\\Front-end-react\\src\\components\\BankCard.js",["768","769","770","771","772","773","774","775"],"import {React, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    GridItem,\r\n    useColorMode,\r\n    useDisclosure,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    ButtonGroup,\r\n    Heading,\r\n    HStack,\r\n    Spacer,\r\n    Image\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\r\n\r\n\r\nconst BankCard = ({bankcard,deleteBankCard}) => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    \r\n\r\n    // const [data, setData] = useState({\r\n    //     cardNumber:bankcard.card_number,\r\n    //     owner:bankcard.owner,\r\n    //     cvv:bankcard.cvv,\r\n    //     expDate:bankcard.expDate\r\n    // })\r\n    \r\n\r\n    // const handleChange =  (event) => {\r\n    //     var value = event.target.value;\r\n    //     var name = event.target.name;\r\n\r\n    //     setData({ ...data, [event.target.name]: value })\r\n    //     // console.log(data)\r\n    // };\r\n\r\n\r\n    return(\r\n        <GridItem>\r\n        <Box  \r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            borderRadius='md'\r\n            border='1px'\r\n            borderColor='cyan.600'\r\n            p='6'\r\n            m='4'\r\n            pb='3'\r\n           \r\n            >\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                    \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"lg\"       \r\n                        ml=\"2\"\r\n                    >\r\n                       <Heading size='lg'> x x x x  x x x x {bankcard.Card_Number.toString().substr(8,13)} </Heading>\r\n                    </Box>\r\n                </Box> \r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                \r\n                   \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                       \r\n                    >\r\n                        { bankcard.Owner }\r\n                    </Box>\r\n                </Box> \r\n               \r\n               <HStack mb='4'>\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        {bankcard.Exp_Date}\r\n                    </Box>\r\n                </Box> \r\n                <Spacer />\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                <Image\r\n                    width='70px'\r\n                    src=\"../visa.png\"\r\n                    />\r\n                </Box> \r\n                </HStack>\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n\r\n                 \r\n                    {/* Delete Address */}\r\n                \r\n                    <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader fontWeight=\"semibold\">Delete Card Details</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody>\r\n                            Are you sure you want to delete card details?\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteBankCard(bankcard.Card_Number)}}>Delete</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                   \r\n                </Box>\r\n\r\n        </Box>\r\n        </GridItem>\r\n    )\r\n}\r\n\r\nexport default BankCard\r\n\r\n\r\n\r\n    ","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\SignIn.js",["776","777","778"],"import React, { useEffect } from \"react\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport SearchBarHome from \"../../components/SearchBarHome\";\r\nimport LogIn from \"../../components/SignIn/LogIn\";\r\nimport service from \"../../API_Service/checkLogin\";\r\nimport Axios from \"axios\";\r\n\r\nfunction SignIn(props) {\r\n\r\n  // const [isAuthorized, setIsAuthorized] = useState(false);\r\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // const [LoggedIn, setLoggedIn] = useState(false);\r\n  // checkAuthorization(response => {\r\n  //   setIsAuthorized(response);\r\n  // })\r\n  // checkAuthentication(response => {\r\n  //   setIsAuthenticated(response);\r\n  // })\r\n\r\n  // if (isAuthorized === isAuthenticated) {\r\n  //   setLoggedIn(true);\r\n  // } else {\r\n  //   setLoggedIn(false);\r\n  // }\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <SearchBarHome />\r\n\r\n      <LogIn setSignInClicked={props.setSignInClicked}/>\r\n      <BottomItems />\r\n      <Footer />\r\n      <BottomFooter shopName=\"Electrica\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\SignUp.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\Seller\\SellerHome.js",["779","780","781"],"import React from \"react\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport SearchBarHome from \"../../components/SearchBarHome\";\r\nimport Middle from \"../../components/Seller/Middle\";\r\nimport Card from \"../../components/Seller/Card\";\r\nimport { Box, Flex, Skeleton, Stack } from \"@chakra-ui/react\";\r\nimport { AiFillExperiment } from \"react-icons/ai\";\r\n\r\nfunction SellerHome() {\r\n  console.log(\"SellerHome\")\r\n  return (\r\n    <>\r\n    <SearchBarHome />\r\n      <Middle />\r\n      <Stack mb='25px' p='10px'>\r\n                <Skeleton height=\"40px\" />\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"10px\" />\r\n              </Stack>\r\n      <div className=\"buttons\" p=\"10px\">\r\n        <Card\r\n          imageUrl=\"./img/svg-1.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"Awaiting Shipment Orders\"\r\n          count=\"34 new orders received today\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-5.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"Awaiting Delivery Orders \"\r\n          count=\"20 orders waiting for delivery\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-2.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"All Orders\"\r\n          count=\"5100 total orders\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-8.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"My Items\"\r\n          count=\"You have listed 20 items\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-6.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"List New Item\"\r\n          count=\"\"\r\n        />\r\n      </div>\r\n      <BottomItems />\r\n      <Footer />\r\n      <BottomFooter shopName=\"Electrica\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SellerHome;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBarHome.js",["782","783"],"import { SearchIcon } from \"@chakra-ui/icons\";\r\nimport React from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  IconButton,\r\n  Box,\r\n  Flex,\r\n  Center,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction SearchBarHome(props) {\r\n  const {colorMode, toggleColorMode} = useColorMode();\r\n\r\n  return (\r\n    <Flex\r\n      marginTop=\"110px\"\r\n\r\n      borderBottom='5px solid #E8E8E8'\r\n      bg={colorMode === 'light' ? '#E8E8E8' : '#101522'}\r\n    >\r\n      <Box w=\"500px\" padding=\"15px\" marginLeft=\"30%\" >\r\n        <InputGroup bg='white' rounded='50px' border='blue'>\r\n          <InputRightElement >\r\n            <IconButton\r\n              colorScheme={colorMode === 'light' ? 'blue' : 'red'}\r\n              aria-label=\"Search database\"\r\n              icon={<SearchIcon  />}\r\n            />\r\n          </InputRightElement>\r\n\r\n          <Input\r\n            placeholder={props.text}\r\n            name=\"search\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </InputGroup>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SearchBarHome;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\Footer.js",["784","785","786","787","788","789","790","791","792"],"import React from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport {\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaYoutube,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  FooterContainer,\r\n  FooterSubscription,\r\n  FooterSubText,\r\n  FooterSubHeading,\r\n  Form,\r\n  FormInput,\r\n  FooterLinksContainer,\r\n  FooterLinksWrapper,\r\n  FooterLinkItems,\r\n  FooterLinkTitle,\r\n  FooterLink,\r\n} from \"./Footer.elements\";\r\nimport BottomFooter from \"./BottomFooter\";\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <FooterContainer>\r\n        <FooterSubscription>\r\n          <FooterSubHeading>\r\n            Join us and have the best items at best prices!\r\n          </FooterSubHeading>\r\n          <FooterSubText>Start shopping today and experience the premium shopping</FooterSubText>\r\n          \r\n        </FooterSubscription>\r\n        <FooterLinksContainer>\r\n          <FooterLinksWrapper>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>About Us</FooterLinkTitle>\r\n              <FooterLink to=\"/sign-up\">How it works</FooterLink>\r\n              <FooterLink to=\"/\">Testimonials</FooterLink>\r\n              <FooterLink to=\"/\">Careers</FooterLink>\r\n              <FooterLink to=\"/\">Investors</FooterLink>\r\n              <FooterLink to=\"/\">Terms of Service</FooterLink>\r\n            </FooterLinkItems>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Contact Us</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Contact</FooterLink>\r\n              <FooterLink to=\"/\">Support</FooterLink>\r\n              <FooterLink to=\"/\">Destinations</FooterLink>\r\n              <FooterLink to=\"/\">Sponsorships</FooterLink>\r\n            </FooterLinkItems>\r\n          </FooterLinksWrapper>\r\n          <FooterLinksWrapper>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Videos</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Submit Video</FooterLink>\r\n              <FooterLink to=\"/\">Ambassadors</FooterLink>\r\n              <FooterLink to=\"/\">Agency</FooterLink>\r\n              <FooterLink to=\"/\">Influencer</FooterLink>\r\n            </FooterLinkItems>\r\n            <FooterLinkItems>\r\n              <FooterLinkTitle>Social Media</FooterLinkTitle>\r\n              <FooterLink to=\"/\">Instagram</FooterLink>\r\n              <FooterLink to=\"/\">Facebook</FooterLink>\r\n              <FooterLink to=\"/\">Youtube</FooterLink>\r\n              <FooterLink to=\"/\">Twitter</FooterLink>\r\n            </FooterLinkItems>\r\n          </FooterLinksWrapper>\r\n        </FooterLinksContainer>\r\n      </FooterContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomItems.js",["793","794","795","796"],"import { Box, Center, Icon, SimpleGrid, useColorMode } from \"@chakra-ui/react\";\r\nimport { CardGiftcard, CreditCardRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { GiTruck } from \"react-icons/gi\";\r\nimport {\r\n  MdAttachMoney,\r\n  MdCreditCard,\r\n  MdSecurity,\r\n  MdSettings,\r\n} from \"react-icons/md\";\r\nexport default function BottomItems() {\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    // Passing `columns={[2, null, 3]}` and `columns={{sm: 2, md: 3}}`\r\n    // will have the same effect.\r\n\r\n    <SimpleGrid columns={[2, null, 4]} spacing=\"0px\">\r\n      <Box\r\n        bg={colorMode === 'light' ? 'white' : '#101522' }\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <Icon as={MdAttachMoney} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center fontWeight=\"BOLD\">\r\n            Great Value\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          We offer competitive prices on our 1000 plus product range.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg={colorMode === 'light' ? 'white' : '#101522' }\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <Icon as={MdCreditCard} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center fontWeight=\"BOLD\">\r\n            Safe Payment\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          Pay with the world’s most popular and secure payment methods.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg={colorMode === 'light' ? 'white' : '#101522' }\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <Icon as={MdSecurity} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center fontWeight=\"BOLD\">\r\n            Shop with Confidence\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          Our Buyer Protection covers your purchase from click to delivery.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg={colorMode === 'light' ? 'white' : '#101522' }\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <GiTruck size=\"80px\" width=\"20px\" />\r\n        </Center>\r\n        <Box>\r\n          <Center fontWeight=\"BOLD\">\r\n            Country Wide Delivery\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          Pay with the world’s most popular and secure payment methods.\r\n        </Box>\r\n      </Box>\r\n    </SimpleGrid>\r\n  );\r\n}\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomFooter.js",["797"],"import React from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport {\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaYoutube,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  FooterContainer,\r\n  SocialMedia,\r\n  SocialMediaWrap,\r\n  SocialLogo,\r\n  SocialIcon,\r\n  WebsiteRights,\r\n  SocialIcons,\r\n  SocialIconLink,\r\n} from \"./BottomFooter.elements\";\r\n\r\nfunction BottomFooter(props) {\r\n  return (\r\n    <FooterContainer>\r\n      <SocialMedia>\r\n        <SocialMediaWrap>\r\n          <SocialLogo to=\"/\">\r\n            <SocialIcon />\r\n            {props.shopName}\r\n          </SocialLogo>\r\n          <WebsiteRights>Designed By University of Moratuwa | All Rights Resserved, © 2021</WebsiteRights>\r\n          <SocialIcons>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Facebook\">\r\n              <FaFacebook />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Instagram\">\r\n              <FaInstagram />\r\n            </SocialIconLink>\r\n            <SocialIconLink\r\n              href={\r\n                \"//www.youtube.com/\"\r\n              }\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              aria-label=\"Youtube\"\r\n            >\r\n              <FaYoutube />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Twitter\">\r\n              <FaTwitter />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"LinkedIn\">\r\n              <FaLinkedin />\r\n            </SocialIconLink>\r\n          </SocialIcons>\r\n        </SocialMediaWrap>\r\n      </SocialMedia>\r\n    </FooterContainer>\r\n  );\r\n}\r\n\r\nexport default BottomFooter;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\LogIn.js",["798","799","800"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./LogIn.css\";\r\nimport FormLogIn from \"./FormLogIn\";\r\nimport FormSuccess from \"./FormSuccess\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction LogIn(props) {\r\n\r\n  \r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  // Axios.defaults.withCredentials = true;\r\n  // useEffect(() => {\r\n  //   Axios.get(\"http://localhost:5000/customer/login\").then((response) => {\r\n  //     console.log(response);\r\n  //   })\r\n  // }, [])\r\n\r\n  return (\r\n    <>\r\n      {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n    background-size: cover !important; <Redirect to='/' />*/}\r\n      <div className=\"login-container\">\r\n        <div className=\"login-content-left\">\r\n          <img className=\"login-img\" src=\"img/svg-2.svg\" alt=\"Security\" />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormLogIn submitForm={submitForm} setSignInClicked={props.setSignInClicked}/>\r\n        ) : (\r\n          <Redirect to='/' />\r\n        )}\r\n        {/* <FormLogIn submitForm={submitForm} /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\Register.js",["801","802"],"import React, { useState } from 'react';\r\nimport './Register.css';\r\nimport FormSignup from './FormSignup';\r\nimport FormSuccess from './FormSuccess';\r\nimport Axios from \"axios\";\r\nimport useForm from \"./FormSignup\";\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n    console.log(\"Hello\")\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n    background-size: cover !important; <Redirect to='/' />*/}\r\n      <div className='form-container'>\r\n\r\n        <div className='form-content-left'>\r\n          <img className='form-img' src='img/svg-2.svg' alt='Security' />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormSignup submitForm={submitForm} />\r\n        ) : (\r\n          \r\n          <FormSuccess />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Seller\\Card.js",["803","804"],"import React from 'react';\r\nimport {\r\n  Box,\r\n  Image,\r\n  Badge,\r\n  Grid,\r\n  GridItem,\r\n  Center,\r\n  Button,\r\n  Heading,\r\n} from '@chakra-ui/react';\r\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\r\nimport {  MdSend, MdZoomIn } from 'react-icons/md';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <Box\r\n      width=\"auto\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      overflow=\"hidden\"\r\n      p=\"10px\"\r\n      mb=\"10px\"\r\n      ml=\"20px\"\r\n      mr=\"20px\"\r\n    >\r\n      <Grid\r\n        h=\"auto\"\r\n        templateColumns=\"repeat(8, 1fr)\"\r\n        templateRows=\"repeat(3, 1fr)\"\r\n        gap={4}\r\n      >\r\n        <GridItem\r\n          colSpan={{ base: 8, md: 2 }}\r\n          rowSpan={{ base: 1, md: 3 }}\r\n          pt=\"12px\"\r\n        >\r\n          <Center>\r\n            <Image\r\n              src={props.imageUrl}\r\n              alt={props.imageAlt}\r\n              borderRadius=\"full\"\r\n              boxSize=\"190px\"\r\n            />\r\n          </Center>\r\n        </GridItem>\r\n\r\n        <GridItem colSpan={{ base: 8, md: 5 }} rowSpan={{ base: 1, md: 3 }}>\r\n          <Box p=\"6\">\r\n            <Box d=\"flex\" alignItems=\"baseline\">\r\n              <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                Secured\r\n              </Badge>\r\n            </Box>\r\n\r\n            <Box\r\n              mt=\"1\"\r\n              fontWeight=\"semibold\"\r\n              as=\"h4\"\r\n              lineHeight=\"tight\"\r\n            >\r\n              <Heading as=\"h5\" size=\"2xl\">\r\n                {props.type}\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n              <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n                {props.count}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem\r\n          colSpan={{ base: 8, md: 1 }}\r\n          rowSpan={{ base: 1, md: 3 }}\r\n          pt=\"50px\"\r\n        >\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"teal\"\r\n            variant=\"outline\"\r\n            size=\"lg\"\r\n            rightIcon={<MdSend/>}\r\n          >\r\n            Check\r\n          </Button>\r\n          \r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Seller\\Middle.js",["805","806","807"],"import React from \"react\";\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Text,\r\n  IconButton,\r\n  Tooltip,\r\n  Avatar,\r\n  Center,\r\n  Badge,\r\n  Progress\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { AvatarBadge } from \"@chakra-ui/react\";\r\nimport \"./Middle.css\";\r\nimport { FaDollarSign } from \"react-icons/fa\";\r\nimport { Money, MoneyOff } from \"@material-ui/icons\";\r\nimport { GiCartwheel, GiShoppingBag, GiShoppingCart } from \"react-icons/gi\";\r\nimport { FiUserPlus } from \"react-icons/fi\";\r\n\r\nfunction Middle() {\r\n  return (\r\n    <>\r\n      <div className=\"dashboard\">\r\n        <Box\r\n          borderStyle=\"solid\"\r\n          borderColor=\"gray.800\"\r\n          boarderRadius=\"200px\"\r\n          mt=\"0px\"\r\n          pl=\"20px\"\r\n          pr=\"20px\"\r\n          pt=\"150px\"\r\n          h=\"700px\"\r\n          mb=\"20px\"\r\n          bg=\"linear-gradient( blue -80%, white 100%);\"\r\n        >\r\n          <Box\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.200\"\r\n            borderWidth=\"2px\"\r\n            p=\"10px\"\r\n            pt=\"30px\"\r\n            mt=\"-120px\"\r\n            borderRadius=\"20px\"\r\n          >\r\n            <Center mb=\"5px\" mt=\"10px\">\r\n              <Avatar bg=\"red.500\">\r\n                <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\r\n              </Avatar>\r\n            </Center>\r\n\r\n            <Box h=\"50px\" mb=\"70px\">\r\n              <Center>\r\n                <Text color=\"black\">C.P.Amarasena</Text>\r\n              </Center>\r\n              <Progress\r\n                colorScheme=\"green\"\r\n                size=\"xs\"\r\n                mr=\"45%\"\r\n                ml=\"45%\"\r\n                mb=\"5px\"\r\n                isIndeterminate\r\n              />\r\n              <Center mb=\"10px\">\r\n                <Badge variant=\"solid\" colorScheme=\"green\">\r\n                  Online\r\n                </Badge>\r\n              </Center>\r\n              \r\n            </Box>\r\n\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              mt=\"100px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Total Revenue\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.900\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    variant=\"outline\"\r\n                    colorScheme=\"blue\"\r\n                    aria-label=\"\"\r\n                    icon={<FaDollarSign />}\r\n                  />\r\n                  Total Revenue : 15000$\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Today Revenue\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.900\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    colorScheme=\"green\"\r\n                    aria-label=\"\"\r\n                    variant=\"outline\"\r\n                    icon={<Money />}\r\n                  />\r\n                  Today Revenue : 440$\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Today Orders\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    colorScheme=\"red\"\r\n                    aria-label=\"\"\r\n                    variant=\"outline\"\r\n                    icon={<GiShoppingCart size=\"20px\" />}\r\n                  />\r\n                  Today Orders : 1500\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Awaiting for shipment orders\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    colorScheme=\"black\"\r\n                    aria-label=\"\"\r\n                    variant=\"outline\"\r\n                    icon={<GiShoppingBag size=\"20px\" />}\r\n                  />\r\n                  Awaiting for shipment : 120\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Today New Users\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    colorScheme=\"cyan\"\r\n                    aria-label=\"\"\r\n                    variant=\"outline\"\r\n                    icon={<FiUserPlus size=\"20px\" />}\r\n                  />\r\n                  Today New Users : 60\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Middle;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\Footer.elements.js",["808"],"import styled from 'styled-components';\r\nimport { FaMagento } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const FooterContainer = styled.div`\r\n  background-color: #E8E8E8;\r\n  padding: 4rem 0 2rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterSubscription = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  margin-bottom: 24px;\r\n  padding: 24px;\r\n  color: #fff;\r\n`;\r\n\r\nexport const FooterSubHeading = styled.p`\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\r\n    'Lucida Sans', Arial, sans-serif;\r\n  margin-bottom: 24px;\r\n  font-size: 24px;\r\n  color: black;\r\n`;\r\n\r\nexport const FooterSubText = styled.p`\r\n  margin-bottom: 24px;\r\n  font-size: 20px;\r\n  color: black;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    flex-direction: column;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  padding: 10px 20px;\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 16px;\r\n  border: 1px solid #fff;\r\n\r\n  &::placeholder {\r\n    color: #242424;\r\n  }\r\n\r\n  @media screen and (max-width: 820px) {\r\n    width: 100%;\r\n    margin: 0 0 16px 0;\r\n  }\r\n`;\r\n\r\nexport const FooterLinksContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  display: flex;\r\n  justify-content: center;\r\n  color: black;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    padding-top: 32px;\r\n  }\r\n`;\r\n\r\nexport const FooterLinksWrapper = styled.div`\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 820px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const FooterLinkItems = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin: 16px;\r\n  text-align: left;\r\n  width: 160px;\r\n  box-sizing: border-box;\r\n  color: black;\r\n\r\n  @media screen and (max-width: 420px) {\r\n    margin: 0;\r\n    padding: 10px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const FooterLinkTitle = styled.h2`\r\n  margin-bottom: 16px;\r\n  font-size: 20px;\r\n  \r\n`;\r\n\r\nexport const FooterLink = styled(Link)`\r\n  color: #fff;\r\n  text-decoration: none;\r\n  margin-bottom: 0.5rem;\r\n  color: black;\r\n  &:hover {\r\n    color: #0467fb;\r\n    transition: 0.3s ease-out;\r\n  }\r\n`;\r\n\r\n","F:\\DB_Project\\Front-end-react\\src\\globalStyles.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\FormLogIn.js",["809","810","811","812"],"import React, { useEffect } from \"react\";\r\nimport validate from \"./validateInfo\";\r\nimport useForm from \"./useForm\";\r\nimport \"./LogIn.css\";\r\n// Promise based HTTP client for the node.js\r\nimport Axios from \"axios\";\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\nfunction FormLogIn(props){\r\n\r\n  const { handleChange, handleSubmit,  values, errors, loginStatus } = useForm(\r\n    props.submitForm,\r\n    validate,\r\n    props.setSignInClicked\r\n  );\r\n  \r\n  \r\n  return (\r\n    <div className=\"login-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\r\n        <h1>\r\n          Welcome!!!\r\n          <br />\r\n          Sign in to continue shopping!\r\n          <br />\r\n          <br />\r\n          \r\n        </h1>\r\n        <h1 className=\"login-status\"> </h1> \r\n        {/* <Button color='red' onClick={userAuthenticated}>Check if</Button> */}\r\n        <div className=\"login-inputs\">\r\n          <label className=\"login-label\">Email</label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"login-inputs\">\r\n          <label className=\"login-label\">Password</label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        \r\n        <button className=\"login-input-btn\" type=\"submit\">\r\n          Sign In\r\n        </button>\r\n        <span className=\"login-input-login\">\r\n          Don't have an account? Sign up <a href=\"signup\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormLogIn;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Footer\\BottomFooter.elements.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\FormSignup.js",["813"],"import React from \"react\";\r\nimport validate from \"./validateInfo\";\r\nimport useForm from \"./useForm\";\r\nimport \"./Register.css\";\r\n// Promise based HTTP client for the node.js\r\nimport Axios from \"axios\";\r\n\r\nconst FormSignup = ({ submitForm }) => {\r\n\r\n  const { handleChange, handleSubmit, values, errors } = useForm(\r\n    submitForm,\r\n    validate\r\n  );\r\n  \r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\r\n        <h1>\r\n          Get started and have a premium shopping experience!\r\n          <br />\r\n          Create your account by filling out the information below.\r\n        </h1>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">First Name</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            placeholder=\"Enter your first name\"\r\n            value={values.firstname}\r\n            onChange={handleChange}\r\n          />\r\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\r\n          {errors.firstname && <p>{errors.firstname}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Last Name</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder=\"Enter your last name\"\r\n            value={values.lastname}\r\n            onChange={handleChange}\r\n          />\r\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\r\n          {errors.lastname && <p>{errors.lastname}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Phone Number</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"tel\"\r\n            name=\"phonenumber\"\r\n            placeholder=\"Enter your phone number\"\r\n            value={values.phonenumber}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.phonenumber && <p>{errors.phonenumber}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Email</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Confirm Password</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            placeholder=\"Confirm your password\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        <button className=\"form-input-btn\" type=\"submit\" >\r\n          Sign up\r\n        </button>\r\n        <span className=\"form-input-login\">\r\n          Already have an account? Login <a href=\"signin\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignup;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\FormSuccess.js",["814","815"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Button, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./Register.css\";\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <h1 className=\"form-success\">\r\n        You have successfully registered!\r\n        <br />\r\n        Now Log In{\" \"}\r\n        <a href=\"signin\">\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"red\"\r\n            variant=\"outline\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </a>\r\n      </h1>\r\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\useForm.js",["816","817","818"],"import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\n//custom hook\r\n\r\nconst useForm = (callback, validate, setSignInClicked) => {\r\n  Axios.defaults.withCredentials = true;\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n\r\n  const email = values.email;\r\n  const password = values.password;\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n    if (Object.keys(errors).length === 0) {\r\n      Axios.post(\"http://localhost:5000/customer/login\", {\r\n        email: email,\r\n        password: password,\r\n      }).then((response) => {\r\n        if (!response.data.auth) {\r\n          console.log(response);\r\n          setLoginStatus(false);\r\n          \r\n        } else {\r\n          // console.log(response.data);\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          // Store user in localstorage\r\n          // localStorage.setItem(\"user2\", response.data.result[0]);\r\n          // Cookies.set('user', response.data.result[0], { expires: 1 })\r\n          setLoginStatus(true);\r\n          setSignInClicked(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\nconst userAuthenticated = () => {\r\n    Axios.get(\"http://localhost:5000/customer/isUserAuth\", {\r\n    headers: {\r\n      \"x-access-token\": localStorage.getItem(\"token\")},\r\n    }).then(response => {\r\n      console.log(response.status);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Axios.get(\"http://localhost:5000/customer/login\").then((response) => {\r\n    //   if(response.data.LoggedIn === true) {\r\n    //         setLoginStatus(response.data.user[0].First_name + \" \" + response.data.user[0].Last_name);\r\n    //   }\r\n      \r\n    // });\r\n    \r\n    //If there are no errors and submitted it wil call submitForm function(callback())\r\n    //response.data is an array. message is a attribute of it\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n     }\r\n  }, [errors]);\r\n\r\n  return { handleChange, handleSubmit, values, errors, loginStatus };\r\n};\r\n\r\nexport default useForm;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\validateInfo.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\validateInfo.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\SignUp\\useForm.js",["819"],"import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n//custom hook\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    phonenumber: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const firstName = values.firstname;\r\n  const lastName = values.lastname;\r\n  const email = values.email;\r\n  const phoneNumber = values.phonenumber;\r\n  const password = values.password;\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n    if (Object.keys(errors).length === 0) {\r\n      Axios.post(\"http://localhost:5000/customer/register\", {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        phoneNumber: phoneNumber,\r\n        password: password,\r\n      }).then((response) => {\r\n        console.log(response);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //If there are no errors and submitted it wil call submitForm function(callback())\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\Customer\\Home.js",["820"],"import React from \"react\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport ShopNow from \"../../components/ShopNow\";\r\nimport Pricing from \"../../components/Pricing/Pricing\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\nimport SearchBarHome from \"../../components/SearchBarHome\";\r\nimport ImageSlider from \"../../components/Slider/ImageSlider\";\r\nimport { SliderData } from \"../../components/Slider/SliderData\";\r\n// import checkLogin from \"./checkLogin\";\r\nimport { useHistory } from 'react-router'\r\nfunction Home() {\r\nconsole.log(\"Home page\")\r\n  return (\r\n    <>\r\n    <SearchBarHome />\r\n    <ShopNow />\r\n    \r\n      \r\n      <ImageSlider slides={SliderData} />;\r\n      <Pricing heading=''/>\r\n      <BottomItems />\r\n      <Footer />\r\n      <BottomFooter shopName=\"Electrica\"/>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ShopNow.js",["821","822","823","824","825","826"],"import {\r\n  Button,\r\n  ReactRouterLink,\r\n  Link,\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { GiShoppingCart } from \"react-icons/gi\";\r\n\r\nimport \"./ShopNow.css\";\r\n\r\nfunction ShopNow() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <Flex>\r\n        <video src=\"/videos/shop.mp4\" autoPlay loop muted />\r\n      </Flex>\r\n      <Heading as=\"h1\" size=\"4xl\">\r\n        LOTS OF FANCY ITEMS\r\n      </Heading>\r\n\r\n      <p>What are you waiting for?</p>\r\n      <div>\r\n        <a href=\"#\">\r\n          <Box\r\n            as=\"button\"\r\n            p={4}\r\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"15px\"\r\n            bgGradient={colorMode === \"light\" ? \"linear(to-r, black, blue.600)\" : \"linear(to-r, white, blue.600)\"}\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red, white)\",\r\n            }}\r\n          >\r\n            SHOP NOW\r\n          </Box>\r\n        </a>\r\n        <GiShoppingCart\r\n          className=\"cart-icon\"\r\n          size=\"100px\"\r\n          color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShopNow;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Pricing\\Pricing.js",["827","828","829","830","831","832","833","834","835","836","837","838","839","840"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport { AiFillThunderbolt } from \"react-icons/ai\";\r\nimport {\r\n  GiAllForOne,\r\n  GiArtificialIntelligence,\r\n  GiCartwheel,\r\n  GiCrystalBars,\r\n  GiDeliveryDrone,\r\n  GiNewBorn,\r\n  GiShoppingBag,\r\n  GiShoppingCart,\r\n} from \"react-icons/gi\";\r\nimport { GiCutDiamond, GiRock } from \"react-icons/gi\";\r\nimport { GiFloatingCrystal } from \"react-icons/gi\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport {\r\n  PricingSection,\r\n  PricingWrapper,\r\n  PricingHeading,\r\n  PricingContainer,\r\n  PricingCard,\r\n  PricingCardInfo,\r\n  PricingCardIcon,\r\n  PricingCardPlan,\r\n  PricingCardCost,\r\n  PricingCardLength,\r\n  PricingCardFeatures,\r\n  PricingCardFeature,\r\n} from \"./Pricing.elements\";\r\nimport { Box, Flex, Text, useColorMode } from \"@chakra-ui/react\";\r\n\r\nfunction Pricing(props) {\r\n  const { colorMode } = useColorMode();\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  function handleChange(x) {\r\n    setIsDark(x);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Update isDark according to the color\r\n    {\r\n      colorMode === \"light\" ? handleChange(false) : handleChange(true);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <IconContext.Provider value={{ color: \"#a9b3c1\", size: 64 }}>\r\n      {/**colorMode === \"light\" ? \"white\" : \"black\"**/}\r\n      <Flex\r\n        p=\"10px 0 160px\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        justifyContent=\"center\"\r\n        bg={colorMode === \"light\" ? \"white\" : \"#101522\"}\r\n      >\r\n        <PricingWrapper>\r\n          <PricingHeading>{props.heading} </PricingHeading>\r\n          <PricingContainer>\r\n            <PricingCard to=\"/\">\r\n              <PricingCardInfo>\r\n                <PricingCardIcon>\r\n                  <GiShoppingBag\r\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\r\n                  />\r\n                </PricingCardIcon>\r\n\r\n                <PricingCardPlan>All Categories</PricingCardPlan>\r\n                <PricingCardCost>6+</PricingCardCost>\r\n                <PricingCardLength>categories</PricingCardLength>\r\n                <PricingCardFeatures>\r\n                  <PricingCardFeature>\r\n                    100+ New Users Everyday\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>\r\n                    Best Store in Sri Lanka\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>Trending Items</PricingCardFeature>\r\n                </PricingCardFeatures>\r\n                <Button primary>Check Out</Button>\r\n              </PricingCardInfo>\r\n            </PricingCard>\r\n\r\n            <PricingCard to=\"/\">\r\n              <PricingCardInfo>\r\n                <PricingCardIcon>\r\n                  <GiNewBorn\r\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\r\n                  />\r\n                </PricingCardIcon>\r\n                <PricingCardPlan>New Arrivals</PricingCardPlan>\r\n                <PricingCardCost>150+</PricingCardCost>\r\n                <PricingCardLength>arrivals per day</PricingCardLength>\r\n                <PricingCardFeatures>\r\n                  <PricingCardFeature>\r\n                    Trending shop in the country\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>Premium Shopping</PricingCardFeature>\r\n                  <PricingCardFeature>Buy and Feel It</PricingCardFeature>\r\n                </PricingCardFeatures>\r\n                <Button primary>Check Out</Button>\r\n              </PricingCardInfo>\r\n            </PricingCard>\r\n\r\n            <PricingCard to=\"/\">\r\n              <PricingCardInfo>\r\n                <PricingCardIcon>\r\n                  <GiCutDiamond\r\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\r\n                  />\r\n                </PricingCardIcon>\r\n                <PricingCardPlan>Most Ordered Items</PricingCardPlan>\r\n                <PricingCardCost>500+</PricingCardCost>\r\n                <PricingCardLength>orders per day</PricingCardLength>\r\n                <PricingCardFeatures>\r\n                  <PricingCardFeature>\r\n                    You will experience the difference\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>\r\n                    Best Prices for Best Products\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>24/7 Support</PricingCardFeature>\r\n                </PricingCardFeatures>\r\n                <Button primary>Check Out</Button>\r\n              </PricingCardInfo>\r\n            </PricingCard>\r\n          </PricingContainer>\r\n        </PricingWrapper>\r\n      </Flex>\r\n    </IconContext.Provider>\r\n  );\r\n}\r\nexport default Pricing;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Pricing\\Pricing.elements.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\AwaitingDelivery.js",["841","842","843"],"import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useState } from \"react\";\r\n  import Deliverycard from \"../components/Deliverycard\";\r\n  import SearchBar from \"../components/SearchBar\";\r\n\r\n  \r\n  function AwaitingDelivery() {\r\n    \r\n    const [orderlist, setActiveCategoryProducts] = useState([ \r\n      {\r\n        Order_ID: \"233-5145-789a\",\r\n        Varient_ID: \"1111\",\r\n        item_name: \"Electric tooth brush\",\r\n        payment: 200.0,\r\n        Date_paid: \"2021/2/8\",\r\n        Date_shipped: \"2021/2/9\",\r\n        Quantity :\"2\",\r\n        F_name: \"Rahal\",\r\n        L_name: \"Athukorala\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      },\r\n      {\r\n        Order_ID: \"233-5145-789b\",\r\n        Varient_ID: \"2222\",\r\n        item_name: \"Electric Toilet brush\",\r\n        payment: 100.0,\r\n        Date_paid: \"2021/2/6\",\r\n        Date_shipped: \"2021/2/9\",\r\n        Quantity :\"1\",\r\n        F_name: \"Ganesh\",\r\n        L_name: \"Sirisena\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      },\r\n      {\r\n        Order_ID: \"233-5145-789c\",\r\n        Varient_ID: \"3333\",\r\n        item_name: \"Electric pen\",\r\n        payment: 1500.0,\r\n        Date_paid: \"2021/2/7\",\r\n        Date_shipped: \"2021/2/9\",\r\n        Quantity :\"3\",\r\n        F_name: \"Sirimali\",\r\n        L_name: \"Godahewa\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      },\r\n      {\r\n        Order_ID: \"233-5145-789d\",\r\n        Varient_ID: \"4444\",\r\n        item_name: \"Electric grass cutter\",\r\n        payment: 200.0,\r\n        Date_paid: \"2021/1/28\",\r\n        Date_shipped: \"2021/2/9\",\r\n        Quantity :\"2\",\r\n        F_name: \"James\",\r\n        L_name: \"Vince\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      },\r\n      {\r\n        Order_ID: \"233-5145-789e\",\r\n        Varient_ID: \"5555\",\r\n        item_name: \"Electric machine gun\",\r\n        payment: 20000.0,\r\n        Date_paid: \"2021/2/8\",\r\n        Date_shipped: \"2021/2/9\",\r\n        Quantity :\"1\",\r\n        F_name: \"Xavier\",\r\n        L_name: \"Dhorty\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      }\r\n    ]);\r\n  \r\n    const searchBarText = `Search in Awaiting Deliveries`;\r\n  \r\n\r\n  \r\n    return (\r\n      <Box\r\n        pt=\"150px\"\r\n        pl={{ base: \"10px\", sm: \"100px\" }}\r\n        pr={{ base: \"10px\", sm: \"100px\" }}\r\n      >\r\n        <Center mb='10px'>\r\n          <SearchBar text={searchBarText} />\r\n        </Center>\r\n        <Grid\r\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\r\n        >\r\n          <GridItem  bg=\"gray.300\" p=\"10px\">\r\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\r\n              Awaiting Delivery\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem \r\n          \r\n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\r\n            \r\n            \r\n              {Array(orderlist.length)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n                  <Deliverycard \r\n                    Order_ID={orderlist[i].Order_ID}\r\n                    Varient_ID= {orderlist[i].Varient_ID}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].payment}\r\n                    Date_paid={orderlist[i].Date_paid}\r\n                    Date_shipped={orderlist[i].Date_shipped}\r\n                    Quantity={orderlist[i].Quantity}\r\n                    F_name= {orderlist[i].F_name}\r\n                    L_name= {orderlist[i].L_name}\r\n                    \r\n                  />\r\n                ))}\r\n           \r\n          </GridItem>\r\n          \r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export default AwaitingDelivery;\r\n  ","F:\\DB_Project\\Front-end-react\\src\\pages\\NewItem.js",["844","845","846","847","848"],"import { AddIcon } from '@chakra-ui/icons';\r\nimport { Box, Button,Input,Stack, VStack,Heading,Form,\r\n    Select, HStack,NumberInputField ,NumberInputStepper,\r\n    NumberDecrementStepper,NumberIncrementStepper,\r\n    Flex,Slider,SliderTrack,SliderFilledTrack,SliderThumb,NumberInput} from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nfunction NewItem(){\r\n   const  [value, setValue] = React.useState(0);\r\n   const  handleChange = (value) => setValue(value);\r\n   const state={\r\n      selectedFile: null\r\n  }\r\n    \r\n  const fileSelectedHandler =event=>{\r\n      this.setState({\r\n          selectedFile: event.target.files[0]\r\n    })\r\n       // console.log(event.target.files[0]);\r\n  }\r\n\r\n  const fileUploadHandler=()=>{\r\n      const fd= new FormData();\r\n      fd.append('image',this.state.selectedFile,this.state.selectedFile.name);\r\n      axios.post(\"gs://front-end-react100.appspot.com\",fd)\r\n      .then(res=>{console.log(res)});\r\n\r\n  }\r\n  const Varientmaker=()=>{\r\n\r\n  }\r\n    \r\n\r\n \r\n    return(\r\n        \r\n<Box\r\n        pt=\"150px\"\r\n        pl={{ base: \"10px\", sm: \"100px\" }}\r\n        pr={{ base: \"10px\", sm: \"100px\" }}\r\n        \r\n      >\r\n<form method=\"POST\" >\r\n <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\" bg=\"gray.300\" p=\"10px\">\r\n              List a New Item\r\n</Heading>\r\n   <Stack spacing={1} >\r\n    <b><>Title :</></b><Input name=\"title\"  backgroundColor=\"yellow.100\" placeholder=\"Enter title here\" size=\"md\" />\r\n\r\n    <b><>Category:</></b>\r\n            <Select name=\"category\" borderColor=\"yellow.300\" placeholder=\"Select Category\" w=\"40%\" bg=\"yellow.100\">\r\n  <option w=\"40%\"value=\"Portable Audio & Headphones\">Portable Audio & Headphones</option>\r\n  <option w=\"40%\"value=\"Vintage Electronics\">Vintage Electronics</option>\r\n  <option w=\"40%\"value=\"Vehicle Electronics & GPS\">Vehicle Electronics & GPS</option>\r\n  <option w=\"40%\"value=\"Radio Communication\">Radio Communication</option>\r\n  <option w=\"40%\"value=\"Circuit Items\">Circuit Items </option>\r\n  <option w=\"40%\"value=\"Surveillance & Smart Home Electronics & GPS\">Surveillance & Smart Home Electronics & GPS</option>\r\n  <option w=\"40%\"value=\"Multipurpose Batteries & Power\">Multipurpose Batteries & Power</option>\r\n  <option w=\"40%\"value=\"Cameras & Photos\">Cameras & Photos</option>\r\n  <option w=\"40%\"value=\"Other Consumer Electronics\">Other Consumer Electronics</option>\r\n            </Select>\r\n<b><>Varient :</></b>\r\n\r\n<Box bg=\"yellow.100\" w=\"33%\" borderRadius=\"2xl\" borderColor=\"yellow.300\" borderWidth=\"5px\">\r\n    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\"> \r\n    <b><>Varient Name :</></b>\r\n  <Input name=\"varientname\" backgroundColor=\"yellow.100\" placeholder=\"Enter Varient Here\" placeholderColor=\"red\" size=\"md\" />\r\n           \r\n    </Box>\r\n\r\n    <Box ml=\"2%\" mr=\"2%\">\r\n    <b><>Quantity :</></b>\r\n    <Flex>\r\n      <NumberInput name=\"quantity\"  maxW=\"100px\" mr=\"2rem\" value={value} onChange={handleChange} borderColor=\"yellow.300\">\r\n        <NumberInputField  borderColor=\"yellow.300\"/>\r\n        <NumberInputStepper borderColor=\"yellow.300\">\r\n          <NumberIncrementStepper />\r\n          <NumberDecrementStepper />\r\n        </NumberInputStepper>\r\n      </NumberInput>\r\n      <Slider  flex=\"1\" focusThumbOnChange={false} value={value} onChange={handleChange}>\r\n        <SliderTrack bg=\"blue.200\">\r\n          <SliderFilledTrack bg=\"yellow.400\" />\r\n        </SliderTrack>\r\n        <SliderThumb borderColor=\"black\" fontSize=\"sm\" boxSize=\"32px\" children={value} />\r\n      </Slider>\r\n    </Flex>\r\n      \r\n    </Box>\r\n    <HStack>\r\n    <Box w=\"50%\" ml=\"2%\" mb=\"2%\" >\r\n    <b><>Image:</></b>\r\n    <input name=\"image\" type=\"file\" onChange={fileSelectedHandler}/>\r\n\r\n    </Box> \r\n    <Box w=\"100%\" borderColor=\"yellow.300\" mr=\"2%\" mb=\"2%\">\r\n    <b><>Price:(LKR)</></b><Input name=\"price\" backgroundColor=\"yellow.100\" placeholder=\"Enter Price here\" size=\"md\" />\r\n    </Box>\r\n    </HStack>\r\n</Box>\r\n\r\n\r\n<Button w=\"33%\" ml=\"40%\" horizontalAlign=\"true\" textColor=\"Black\" bg=\"yellow.100\"  _hover={{ bg: \"yellow.300\" ,transform: \"scale(1.01)\" }} onClick={Varientmaker}><><b>+</b></>Add Varient</Button>\r\n\r\n\r\n\r\n    <b><>Discription:</></b><Input backgroundColor=\"yellow.100\" placeholder=\"Enter Discription here\" size=\"md\" />\r\n\r\n  </Stack>\r\n\r\n\r\n            \r\n<br/>\r\n\r\n    <Button Align=\"middle\" ml=\"40%\" horizontalAlign=\"true\" textColor=\"Black\" bg=\"blue.100\"  _hover={{ bg: \"blue.300\" ,transform: \"scale(1.01)\" }} onClick={fileUploadHandler}>Submit & Create Listing</Button>\r\n\r\n</form>\r\n</Box>\r\n    );    \r\n    \r\n}\r\nexport default NewItem;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\OrderView.js",["849","850","851","852","853","854","855"],"import {\r\n    Box,\r\n    Text,\r\n    Img,\r\n    Button,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n    HStack,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useState } from \"react\";\r\n  import Deliverycard from \"../components/Deliverycard\";\r\n \r\n\r\n  \r\n  function OrderView() {\r\n\r\n\r\n    const order_number=\"233-5145-789e\";\r\n    const Shipping_method=\"Economy International Shipping\"\r\n    const Tracking =\"Add tracking\"\r\n    const Ship_to=\"Rahal Athukorala\"\r\n    const Street=\"562/B Walgama/Malwana\"\r\n    const City= \"Biyagama\"\r\n    const State_province=\"Western\"\r\n    const Zip_code=\"11670\"\r\n    const Country_region=\"Sri Lanka\"\r\n    const Phone=\"+94 716565834\"\r\n    const Buyer=\"Rahal Athukorala\"\r\n    const E_mail=\"rahalathukorala@gmail.com\"\r\n    const Date_sold=\"Feb 17, 2021\"\r\n    const Date_paid=\"Feb 17, 2021\"\r\n    const image=\"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\"\r\n    const title=\"Electric Tooth Brush\"\r\n    const feedback=\"Positive\"\r\n    const Sold_for=5000\r\n    const Quantity=5\r\n\r\n    \r\n    return (\r\n  <Box\r\n        pt=\"120px\"\r\n        pl={{ base: \"5px\", sm: \"100px\" }}\r\n        pr={{ base: \"5px\", sm: \"100px\" }}>\r\n <Heading as=\"h3\" size=\"base\" color=\"gray.600\" mb=\"5px\" bg=\"gray.300\" p=\"5px\">\r\n    <HStack><Box>Order Details :</Box><Box size=\"xs\" color=\"red.600\">{order_number}</Box></HStack>\r\n  </Heading>     \r\n      <Box height=\"80px\">\r\n          <HStack><b size=\"base\">Ship by {Date_sold} Sri Lanka Time</b>\r\n              <Box><Button  ml=\"60px\"  _hover={{ bg: \"blue.300\" ,transform: \"scale(1.01)\" }}>Print Shipping Lable</Button>\r\n              </Box>\r\n          </HStack>\r\n\r\n\r\n              <p>Make sure you ship your order within the handling time you specified in the listing.\r\nEstimated delivery date shown to buyer: {Date_sold} - {Date_sold}</p>\r\n      </Box>\r\n               \r\n            \r\n<Box width=\"100%\">\r\n    <HStack>\r\n        \r\n    <Box width=\"100%\">\r\n    <Heading as=\"h3\" size=\"base\" color=\"gray.600\" mb=\"5px\" bg=\"gray.300\" p=\"5px\">\r\n              Purchase Details\r\n            </Heading>\r\n            <Box height=\"250px\">\r\n          <Grid  templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n        <GridItem fontWeight=\"bold\">Buyer</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Buyer}</GridItem>\r\n        <GridItem fontWeight=\"bold\">E-mail</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{E_mail}</GridItem>\r\n        <GridItem fontWeight=\"bold\">Phone</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Phone}</GridItem>\r\n        <GridItem fontWeight=\"bold\">Date sold</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Date_sold}</GridItem>\r\n        <GridItem fontWeight=\"bold\">Date paid</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Date_paid}</GridItem>\r\n        \r\n          </Grid>  \r\n                \r\n            </Box>\r\n\r\n\r\n    </Box>\r\n\r\n\r\n    <Box width=\"100%\"><Heading as=\"h3\" size=\"base\" color=\"gray.600\" mb=\"5px\" bg=\"gray.300\" p=\"5px\">\r\n              Shipping Details\r\n            </Heading>\r\n            \r\n            <Box height=\"250px\">\r\n\r\n            <Grid  templateColumns=\"repeat(2, 1fr)\" gap={2}>\r\n        <GridItem fontWeight=\"bold\">Tracking</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Tracking}</GridItem>\r\n        <GridItem fontWeight=\"bold\">Ship_to</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Buyer}</GridItem>\r\n        <GridItem fontWeight=\"bold\">Street</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Street}</GridItem>\r\n        <GridItem fontWeight=\"bold\">City</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{City}</GridItem>\r\n        <GridItem fontWeight=\"bold\">State</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{State_province}</GridItem>\r\n        <GridItem fontWeight=\"bold\">Zip Code</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Zip_code}</GridItem>\r\n        <GridItem fontWeight=\"bold\">Country</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Country_region}</GridItem>\r\n        <GridItem fontWeight=\"bold\">Phone</GridItem>\r\n        <GridItem fontWeight=\"semibold\">{Phone}</GridItem>\r\n          </Grid>\r\n\r\n            </Box>\r\n            </Box>\r\n        \r\n    </HStack>\r\n\r\n    <Box width=\"100%\">\r\n    <Heading as=\"h3\" size=\"base\" color=\"gray.600\" mb=\"5px\" bg=\"gray.300\" p=\"5px\">\r\n              Items\r\n    </Heading>\r\n    <Box height=\"100px\">\r\n\r\n\r\n      \r\n\r\n      <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={image} alt={\"picture\"} w='100px' h='100px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box fontWeight=\"bold\"><Text color=\"red.600\"   fontSize=\"lg\">\r\n            {title}\r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{Quantity}</b>\r\n          </Text></Box>\r\n        \r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {Sold_for}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n            Total: {Sold_for*Quantity}\r\n          </Text>\r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n      \r\n    </Box>\r\n    </Box>\r\n    </Box>\r\n\r\n    </Box>\r\n  \r\n    );\r\n  }\r\n  \r\n  export default OrderView;\r\n  ","F:\\DB_Project\\Front-end-react\\src\\pages\\AwaitingShipment.js",["856","857","858"],"import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useState } from \"react\";\r\n  \r\n  import SearchBar from \"../components/SearchBar\";\r\n  import ShipmentCard from \"../components/ShipmentCard\";\r\n  \r\n  function AwaitingShipment() {\r\n    \r\n    const [orderlist, setActiveCategoryProducts] = useState([ \r\n      {\r\n        Order_ID: \"233-5145-789a\",\r\n        Varient_ID: \"1111\",\r\n        item_name: \"Electric tooth brush\",\r\n        payment: 200.0,\r\n        Date_paid: \"2021/2/8\",\r\n        Quantity :\"2\",\r\n        F_name: \"Rahal\",\r\n        L_name: \"Athukorala\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      },\r\n      {\r\n        Order_ID: \"233-5145-789b\",\r\n        Varient_ID: \"2222\",\r\n        item_name: \"Electric Toilet brush\",\r\n        payment: 100.0,\r\n        Date_paid: \"2021/2/6\",\r\n        Quantity :\"1\",\r\n        F_name: \"Ganesh\",\r\n        L_name: \"Sirisena\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      },\r\n      {\r\n        Order_ID: \"233-5145-789c\",\r\n        Varient_ID: \"3333\",\r\n        item_name: \"Electric pen\",\r\n        payment: 1500.0,\r\n        Date_paid: \"2021/2/7\",\r\n        Quantity :\"3\",\r\n        F_name: \"Sirimali\",\r\n        L_name: \"Godahewa\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      },\r\n      {\r\n        Order_ID: \"233-5145-789d\",\r\n        Varient_ID: \"4444\",\r\n        item_name: \"Electric grass cutter\",\r\n        payment: 200.0,\r\n        Date_paid: \"2021/1/28\",\r\n        Quantity :\"2\",\r\n        F_name: \"James\",\r\n        L_name: \"Vince\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      },\r\n      {\r\n        Order_ID: \"233-5145-789e\",\r\n        Varient_ID: \"5555\",\r\n        item_name: \"Electric machine gun\",\r\n        payment: 20000.0,\r\n        Date_paid: \"2021/2/8\",\r\n        Quantity :\"1\",\r\n        F_name: \"Xavier\",\r\n        L_name: \"Dhorty\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n      }\r\n    ]);\r\n  \r\n    const searchBarText = `Search in Awaiting Shipments`;\r\n  \r\n\r\n  \r\n    return (\r\n      <Box\r\n        pt=\"150px\"\r\n        pl={{ base: \"10px\", sm: \"100px\" }}\r\n        pr={{ base: \"10px\", sm: \"100px\" }}\r\n      >\r\n        <Center mb='10px'>\r\n          <SearchBar text={searchBarText} />\r\n        </Center>\r\n        <Grid\r\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\r\n        >\r\n          <GridItem  bg=\"gray.300\" p=\"10px\">\r\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\r\n              Awaiting Shipment\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem \r\n          \r\n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\r\n            \r\n            \r\n              {Array(orderlist.length)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n                  <ShipmentCard \r\n                    Order_ID={orderlist[i].Order_ID}\r\n                    Varient_ID= {orderlist[i].Varient_ID}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].payment}\r\n                    Date_paid={orderlist[i].Date_paid}\r\n                    Quantity={orderlist[i].Quantity}\r\n                    F_name= {orderlist[i].F_name}\r\n                    L_name= {orderlist[i].L_name}\r\n                    \r\n                  />\r\n                ))}\r\n           \r\n          </GridItem>\r\n          \r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export default AwaitingShipment;","F:\\DB_Project\\Front-end-react\\src\\components\\Deliverycard.js",["859","860","861","862","863","864","865","866","867"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\n/*                  Order_ID={orderlist[i].Order_ID}\r\n                    Varient_ID= {orderlist[i].Varient_ID}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].payment}\r\n                    Date_paid={orderlist[i].Date_paid}\r\n                    Quantity={orderlist[i].Quantity}\r\n                    F_name= {orderlist[i].F_name}\r\n                    L_name= {orderlist[i].L_name}*/\r\n\r\nfunction Deliverycard(props) {\r\n  return (\r\n \r\n    <Box maxW=\"parent\"  _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }}  borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box fontWeight=\"bold\"><Text color=\"red.600\"   fontSize=\"lg\">\r\n            {props.Order_ID}\r\n          </Text></Box>\r\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\r\n            {props.F_name} {props.L_name}\r\n          </Text></Box>\r\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\r\n            {props.item_name} \r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{props.Quantity}</b>\r\n          </Text></Box>\r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\r\n        Varient: <b>{props.Varient_ID} </b>\r\n          </Text></Box>\r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {props.payment}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   >\r\n            <Box>\r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n           Paid On: {props.Date_paid}\r\n          </Text></Box> \r\n          <Box> <Text color=\"gray.600\" fontSize=\"lg\">\r\n           Shipped On: {props.Date_shipped}\r\n          </Text></Box> \r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Deliverycard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ShipmentCard.js",["868","869","870","871","872","873","874","875","876"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\n/*                  Order_ID={orderlist[i].Order_ID}\r\n                    Varient_ID= {orderlist[i].Varient_ID}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].payment}\r\n                    Date_paid={orderlist[i].Date_paid}\r\n                    Quantity={orderlist[i].Quantity}\r\n                    F_name= {orderlist[i].F_name}\r\n                    L_name= {orderlist[i].L_name}*/\r\n\r\nfunction ShipmentCard(props) {\r\n  return (\r\n \r\n    <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box fontWeight=\"bold\"><Text color=\"red.600\"   fontSize=\"lg\">\r\n            {props.Order_ID}\r\n          </Text></Box>\r\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\r\n            {props.F_name} {props.L_name}\r\n          </Text></Box>\r\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\r\n            {props.item_name} \r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{props.Quantity}</b>\r\n          </Text></Box>\r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\r\n        Varient: <b>{props.Varient_ID} </b>\r\n          </Text></Box>\r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {props.payment}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n            Paid On: {props.Date_paid}\r\n          </Text>\r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ShipmentCard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Slider\\ImageSlider.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\Slider\\SliderData.js",[],"F:\\DB_Project\\Front-end-react\\src\\ProtectedRoute.js",["877","878"],"F:\\DB_Project\\Front-end-react\\src\\API_Service\\checkLogin.js",["879","880"],"F:\\DB_Project\\Front-end-react\\src\\components\\SignIn\\FormSuccess.js",["881","882"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Button, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./LogIn.css\";\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <h1 className=\"form-success\">\r\n        You have successfully registered!\r\n        <br />\r\n        Now Log In{\" \"}\r\n        <a href=\"signin\">\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"red\"\r\n            variant=\"outline\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </a>\r\n      </h1>\r\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ErrorModel.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\index.js",[],["883","884"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\App.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\ChangePersonalDet.js",["885","886","887","888","889"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\AwaitingDelivery.js",["890","891","892","893","894"],"import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useState,useEffect } from \"react\";\r\n  import axios from \"axios\";\r\n  import Deliverycard from \"../components/Deliverycard\";\r\n  import SearchBar from \"../components/SearchBar\";\r\n\r\n  \r\n  function AwaitingDelivery() {\r\n    \r\n    var [orderlist, setorderlist] = useState([{}])\r\n  \r\n\r\n\r\n  \r\n    useEffect(() => {\r\n      axios\r\n        .get(`http://localhost:5000/orders/awaitingdeliveries`)\r\n        .then((response) => {\r\n          console.log(response.data.orders)\r\n          setorderlist(response.data.orders)\r\n        });\r\n  \r\n    }, []);\r\n  \r\n    const searchBarText = `Search in Awaiting Deliveries`;\r\n    \r\n    return (\r\n      <Box\r\n        pt=\"150px\"\r\n        pl={{ base: \"10px\", sm: \"100px\" }}\r\n        pr={{ base: \"10px\", sm: \"100px\" }}\r\n      >\r\n        \r\n        <Grid\r\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\r\n        >\r\n          <GridItem  bg=\"gray.300\" p=\"10px\">\r\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\r\n              Awaiting Delivery\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem \r\n          \r\n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\r\n            \r\n            \r\n              {Array(orderlist.length)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n                  <Deliverycard \r\n                    \r\n\r\n                    Order_ID={orderlist[i].order_id}\r\n                    Variant_Name= {orderlist[i].variant_name}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].price*orderlist[i].quantity}\r\n                    Date_paid={orderlist[i].ordered_date}\r\n                    Date_shipped={orderlist[i].ordered_date}\r\n                    Quantity={orderlist[i].quantity}\r\n                    F_name= {orderlist[i].first_name}\r\n                    L_name= {orderlist[i].last_name}\r\n                    Order_status={orderlist[i].order_status}\r\n                    \r\n                  />\r\n                ))}\r\n           \r\n          </GridItem>\r\n          \r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export default AwaitingDelivery;\r\n  ","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CustomerAdress.js",["895","896","897"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,  \r\n    Flex,\r\n    Spacer ,\r\n    Button,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalBody,\r\n    ModalContent,\r\n    ModalOverlay,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    useToast,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport ShipAddressses from \"../components/ShipAddressses\";\r\nimport AddAddress from \"../components/AddAddress\"\r\nimport Axios from \"axios\";\r\n\r\nconst CustomerAddress = () => {\r\n\r\n    const [address,setAddress] = useState([])\r\n\r\n    // {\r\n    //     id:4,\r\n    //     name:'chandima',\r\n    //     tp:'042342492',\r\n    //     street:'1234',\r\n    //     city:'jsdofjsdof',\r\n    //     state:'sdofjdsf',\r\n    //     zip:'12121'    \r\n                  \r\n    // },\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const toast = useToast()\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/customer/addresses\")\r\n        .then((Response)=>{\r\n            // console.log(Response.data.addresses);\r\n            setAddress(Response.data.addresses);\r\n            \r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error loading data\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }, [])\r\n\r\n    console.log(\"rendered addresses\",address)\r\n    \r\n\r\n    //delete an addresss\r\n    const deleteAddress  = (id)=>{\r\n        // console.log(id);\r\n        Axios.delete(\"http://localhost:5000/customer/addresses\",{data:{id:id}})\r\n        .then((Response)=>{\r\n            // console.log(Response);\r\n            setAddress(address.filter(\r\n                (address)=>address.address_id!==id\r\n            ))\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Shipping address deleted successfully\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n\r\n        \r\n    }\r\n\r\n    //add new address\r\n    const addAddress = (Address)=>{\r\n        // console.log(Address);\r\n        Axios.post(\"http://localhost:5000/customer/addresses\",{Address:Address})\r\n        .then((Response)=>{\r\n            // console.log(\"add address response\",Response)\r\n            var address_id = Response.data.insertId;\r\n            // console.log(\"address_id\",address_id);\r\n            var newAddress = {address_id,...Address}\r\n            // console.log(newAddress);\r\n            setAddress([...address,newAddress]);\r\n           \r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"New shipping address added successfully\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          });  \r\n\r\n    }\r\n\r\n    //update address\r\n    const updateAddress  = async(data)=>{\r\n        console.log('update address data ----------------')\r\n        console.log(data);\r\n        // setTasks(tasks.map(\r\n        //     (task)=>task.id===id?{...task,reminder:data.reminder}:task\r\n        //   ))\r\n        // await setAddress(address.map(\r\n        //     (address1)=>address1.id==data.id?{...address1,name:data.name}:address1\r\n        // ))\r\n        // // console.log(address[0])\r\n          setAddress(address.map(\r\n            (address1)=>(address1.id==data.id)?{...address1,data}:address1\r\n        ))\r\n          }\r\n\r\n\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    \r\n\r\n    return (\r\n        <Box\r\n        \r\n        pt=\"100px\"\r\n        // pl={{ base: \"10px\", sm: \"100px\" }}\r\n        // pr={{ base: \"10px\", sm: \"100px\" }} \r\n        >\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\r\n\r\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> My Shipping Address </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <Box p=\"1\">\r\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\r\n                                            Add Shipping Address\r\n                                        </Button>\r\n                    \r\n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n                                            <ModalOverlay />\r\n                                                <ModalContent>\r\n                                                    <ModalHeader>Add New Shipping Address</ModalHeader>\r\n                                                    <ModalCloseButton />\r\n                                                    <ModalBody pb='5'>\r\n                                                    <AddAddress addAddress={addAddress} trigger={onClose}/>\r\n                                                     </ModalBody>\r\n                                                    \r\n                                                </ModalContent>\r\n                                            </Modal>\r\n\r\n                                    </Box>\r\n                                 \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                       \r\n                                <ShipAddressses addresses={address} deleteAddress={deleteAddress}  updateAddress={updateAddress}  />\r\n  \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CustomerAddress\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\AwaitingShipment.js",["898","899","900","901"],"import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    useToast,\r\n    VStack,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useEffect, useState } from \"react\";\r\n  import axios from \"axios\";\r\n  import SearchBar from \"../components/SearchBar\";\r\n  import ShipmentCard from \"../components/ShipmentCard\";\r\n  \r\n  function AwaitingShipment() {\r\n\r\n  var [orderlist, setorderlist] = useState([{}])\r\n  const toast = useToast();\r\n  var toast_type1 = (success, message) =>\r\n  toast({\r\n    position: \"bottom-right\",\r\n    title: success ? \"Success\" : \"Failed\",\r\n    description: message,\r\n    status: success ? \"success\" : \"error\",\r\n    duration: 5000,\r\n    isClosable: true,\r\n\r\n  });\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/orders/awaitingshipments`)\r\n      .then((response) => {\r\n        console.log(response.data.orders)\r\n        setorderlist(response.data.orders)\r\n      });\r\n\r\n  }, []);\r\n    \r\n  const MarkasShipped=(id)=>{\r\n    axios\r\n      .post(`http://localhost:5000/orders/markasshipped`,{order_id:id})\r\n      .then((response) => {\r\n        toast_type1(true,\"order dispatched\")\r\n        setorderlist(orderlist.filter(\r\n          (order)=>order.order_id!==id\r\n        ))\r\n        console.log(\"Dsfsdgfnfjbn\",orderlist)\r\n      }\r\n      ).catch((err)=>{\r\n        toast_type1(false,\"server error\")\r\n      });\r\n  } \r\n    \r\n  \r\n\r\n  \r\n    return (\r\n      <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n      >\r\n        \r\n        <Grid\r\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\r\n        >\r\n          <GridItem  bg=\"gray.300\" p=\"10px\">\r\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\r\n              Awaiting Shipment\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem \r\n          \r\n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\r\n            \r\n            \r\n              {Array(orderlist.length)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n            <ShipmentCard \r\n                    Order_ID={orderlist[i].order_id}\r\n                    Variant_Name= {orderlist[i].variant_name}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].price*orderlist[i].quantity}\r\n                    Date_paid={orderlist[i].ordered_date}\r\n                    Quantity={orderlist[i].quantity}\r\n                    F_name= {orderlist[i].first_name}\r\n                    L_name= {orderlist[i].last_name}\r\n                    Order_status={orderlist[i].order_status}\r\n                    MarkasShipped={MarkasShipped}\r\n                  />\r\n                ))}\r\n           \r\n          </GridItem>\r\n          \r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export default AwaitingShipment;","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\NewItem.js",["902","903","904","905"],"import { AddIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Input,\r\n  Stack,\r\n  VStack,\r\n  Heading,\r\n  Form,\r\n  Select,\r\n  HStack,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberDecrementStepper,\r\n  NumberIncrementStepper,\r\n  Flex,\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  NumberInput,\r\n  Text,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction NewItem() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChangeQuantity = (value) => {\r\n    setValue(value);\r\n    setVariantData({ ...variantData, quantity: value });\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    item_name: \"\",\r\n    catagory: \"\",\r\n    description: \"\",\r\n    status: \"Available\",\r\n    price: 0,\r\n    image: \"\",\r\n    variants: [],\r\n  });\r\n\r\n  const [variantData, setVariantData] = useState({\r\n    variant_name: \"\",\r\n    price: \"\",\r\n    color: \"\",\r\n    size: \"\",\r\n    specific_detail: \"\",\r\n    quantity: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const addVariant = () => {\r\n    var newVariantsList = data.variants;\r\n    newVariantsList.push(variantData);\r\n\r\n    setData({ ...data, variants: newVariantsList });\r\n  };\r\n\r\n  const handleChangeVariant = (event) => {\r\n    var value = event.target.value;\r\n    var name = event.target.name;\r\n    console.log(name, value);\r\n    setVariantData({ ...variantData, [name]: value });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    var value = event.target.value;\r\n    var name = event.target.name;\r\n    console.log(name, value);\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const fileToDataUri = (file) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        resolve(event.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n\r\n  const onChangevariant = (file) => {\r\n    if (!file) {\r\n      setVariantData({ ...variantData, image: \"\" });\r\n      return;\r\n    }\r\n\r\n    fileToDataUri(file).then((dataUri) => {\r\n      setVariantData({ ...variantData, image: dataUri });\r\n      console.log(dataUri);\r\n    });\r\n  };\r\n\r\n  const onChange = (file) => {\r\n    if (!file) {\r\n      setData({ ...data, image: \"\" });\r\n      return;\r\n    }\r\n\r\n    fileToDataUri(file).then((dataUri) => {\r\n      setData({ ...data, image: dataUri });\r\n      console.log(dataUri);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(data)\r\n    axios\r\n      .post(`http://localhost:5000/items/newitem`, data)\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <form>\r\n        <Heading\r\n          as=\"h3\"\r\n          size=\"xl\"\r\n          color=\"gray.600\"\r\n          mb=\"10px\"\r\n          bg=\"gray.300\"\r\n          p=\"10px\"\r\n        >\r\n          List a New Item\r\n        </Heading>\r\n        <Stack spacing={1}>\r\n          <b>\r\n            <>Title :</>\r\n          </b>\r\n          <Input\r\n            name=\"item_name\"\r\n            backgroundColor=\"yellow.100\"\r\n            placeholder=\"Enter title here\"\r\n            size=\"md\"\r\n            onChange={(event) => handleChange(event)}\r\n          />\r\n\r\n          <b>\r\n            <>Category:</>\r\n          </b>\r\n\r\n          <Select\r\n            name=\"catagory\"\r\n            borderColor=\"yellow.300\"\r\n            placeholder=\"Select Category\"\r\n            w=\"40%\"\r\n            bg=\"yellow.100\"\r\n            onChange={(event) => handleChange(event)}\r\n          >\r\n            <option w=\"40%\" value=\"Mobile phones\">\r\n              Mobile phones\r\n            </option>\r\n            <option w=\"40%\" value=\"Other Consumer Electronics\">\r\n              Computer Accessories\r\n            </option>\r\n            <option w=\"40%\" value=\"Portable Audio & Headphones\">\r\n              Portable Audio & Headphones\r\n            </option>\r\n            <option w=\"40%\" value=\"Vintage Electronics\">\r\n              Vintage Electronics\r\n            </option>\r\n            <option w=\"40%\" value=\"Vehicle Electronics & GPS\">\r\n              Vehicle Electronics & GPS\r\n            </option>\r\n            <option w=\"40%\" value=\"Radio Communication\">\r\n              Radio Communication\r\n            </option>\r\n            <option w=\"40%\" value=\"Circuit Items\">\r\n              Circuit Items{\" \"}\r\n            </option>\r\n            <option w=\"40%\" value=\"Surveillance & Smart Home Electronics & GPS\">\r\n              Surveillance & Smart Home Electronics & GPS\r\n            </option>\r\n            <option w=\"40%\" value=\"Multipurpose Batteries & Power\">\r\n              Multipurpose Batteries & Power\r\n            </option>\r\n            <option w=\"40%\" value=\"Cameras & Photos\">\r\n              Cameras & Photos\r\n            </option>\r\n            <option w=\"40%\" value=\"Other Consumer Electronics\">\r\n              Other Consumer Electronics\r\n            </option>\r\n          </Select>\r\n\r\n          <b>\r\n            <>Main Image:</>\r\n          </b>\r\n          <img width=\"200\" height=\"200\" src={data.image} alt=\"MainImage\" />\r\n          <input\r\n            type=\"file\"\r\n            onChange={(event) => onChange(event.target.files[0] || null)}\r\n          />\r\n\r\n          <b>\r\n            <>Variant :</>\r\n          </b>\r\n          <HStack>\r\n            <Box\r\n              bg=\"yellow.100\"\r\n              w=\"400px\"\r\n              borderRadius=\"2xl\"\r\n              borderColor=\"yellow.300\"\r\n              borderWidth=\"5px\"\r\n            >\r\n              <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                <b>\r\n                  <>Variant Name :</>\r\n                </b>\r\n                <Input\r\n                  name=\"variant_name\"\r\n                  backgroundColor=\"yellow.100\"\r\n                  placeholder=\"Enter Varient Here\"\r\n                  placeholderColor=\"red\"\r\n                  size=\"md\"\r\n                  onChange={handleChangeVariant}\r\n                />\r\n              </Box>\r\n              <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                <b>\r\n                  <>Color :</>\r\n                </b>\r\n                <Input\r\n                  name=\"color\"\r\n                  backgroundColor=\"yellow.100\"\r\n                  placeholder=\"Enter Varient Here\"\r\n                  placeholderColor=\"red\"\r\n                  size=\"md\"\r\n                  onChange={handleChangeVariant}\r\n                />\r\n              </Box>\r\n              <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                <b>\r\n                  <>Size:</>\r\n                </b>\r\n                <Input\r\n                  name=\"size\"\r\n                  backgroundColor=\"yellow.100\"\r\n                  placeholder=\"Enter Varient Here\"\r\n                  placeholderColor=\"red\"\r\n                  size=\"md\"\r\n                  onChange={handleChangeVariant}\r\n                />\r\n              </Box>\r\n\r\n              <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                <b>\r\n                  <>Specific details:</>\r\n                </b>\r\n                <Textarea\r\n                  name=\"specific_detail\"\r\n                  backgroundColor=\"yellow.100\"\r\n                  placeholder=\"Enter Varient Here\"\r\n                  placeholderColor=\"red\"\r\n                  size=\"md\"\r\n                  onChange={handleChangeVariant}\r\n                />\r\n              </Box>\r\n\r\n              <Box ml=\"2%\" mr=\"2%\">\r\n                <b>\r\n                  <>Quantity :</>\r\n                </b>\r\n                <Flex>\r\n                  <NumberInput\r\n                    name=\"quantity\"\r\n                    maxW=\"100px\"\r\n                    mr=\"2rem\"\r\n                    value={value}\r\n                    onChange={handleChangeQuantity}\r\n                    borderColor=\"yellow.300\"\r\n                  >\r\n                    <NumberInputField borderColor=\"yellow.300\" />\r\n                    <NumberInputStepper borderColor=\"yellow.300\">\r\n                      <NumberIncrementStepper />\r\n                      <NumberDecrementStepper />\r\n                    </NumberInputStepper>\r\n                  </NumberInput>\r\n                  <Slider\r\n                    flex=\"1\"\r\n                    focusThumbOnChange={false}\r\n                    onChange={handleChangeQuantity}\r\n                    value={value}\r\n                  >\r\n                    <SliderTrack bg=\"blue.200\">\r\n                      <SliderFilledTrack bg=\"yellow.400\" />\r\n                    </SliderTrack>\r\n                    <SliderThumb\r\n                      borderColor=\"black\"\r\n                      fontSize=\"sm\"\r\n                      boxSize=\"32px\"\r\n                      children={value}\r\n                    />\r\n                  </Slider>\r\n                </Flex>\r\n              </Box>\r\n              <img\r\n                width=\"200\"\r\n                height=\"200\"\r\n                src={variantData.image}\r\n                alt=\"VariantImage\"\r\n              />\r\n              <HStack>\r\n                <Box w=\"50%\" ml=\"2%\" mb=\"2%\">\r\n                  <b>\r\n                    <>Image:</>\r\n                  </b>\r\n                  <input\r\n                    name=\"image\"\r\n                    type=\"file\"\r\n                    onChange={(event) =>\r\n                      onChangevariant(event.target.files[0] || null)\r\n                    }\r\n                  />\r\n                </Box>\r\n                <Box w=\"100%\" borderColor=\"yellow.300\" mr=\"2%\" mb=\"2%\">\r\n                  <b>\r\n                    <>Price:(LKR)</>\r\n                  </b>\r\n                  <Input\r\n                    name=\"price\"\r\n                    backgroundColor=\"yellow.100\"\r\n                    placeholder=\"Enter Price here\"\r\n                    size=\"md\"\r\n                    onChange={handleChangeVariant}\r\n                  />\r\n                </Box>\r\n              </HStack>\r\n            </Box>\r\n\r\n            {Array(data.variants.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <Box>\r\n                  <Box\r\n                    bg=\"yellow.100\"\r\n                    w=\"100%\"\r\n                    borderRadius=\"2xl\"\r\n                    borderColor=\"yellow.300\"\r\n                    borderWidth=\"5px\"\r\n                  >\r\n                    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                      <b>\r\n                        <>Variant Name :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">\r\n                        {data.variants[i].variant_name}\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                      <b>\r\n                        <>Color :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">{data.variants[i].color}</Text>\r\n                    </Box>\r\n\r\n                    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                      <b>\r\n                        <>Size :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">{data.variants[i].size}</Text>\r\n                    </Box>\r\n                    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\">\r\n                      <b>\r\n                        <>Specific details :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">\r\n                        {data.variants[i].specific_detail}\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box ml=\"2%\" mr=\"2%\">\r\n                      <b>\r\n                        <>Quantity :</>\r\n                      </b>\r\n                      <Text fontSize=\"3xl\">{data.variants[i].quantity}</Text>\r\n                    </Box>\r\n                    <HStack>\r\n                      <Box w=\"50%\" ml=\"2%\" mb=\"2%\">\r\n                        <b>\r\n                          <>Image:</>\r\n                        </b>\r\n                        <img\r\n                          width=\"200\"\r\n                          height=\"200\"\r\n                          src={data.variants[i].image}\r\n                          alt=\"MainImage\"\r\n                        />\r\n                      </Box>\r\n                      <Box w=\"100%\" borderColor=\"yellow.300\" mr=\"2%\" mb=\"2%\">\r\n                        <b>\r\n                          <>Price:(LKR)</>\r\n                        </b>\r\n                        <Text>{data.variants[i].price}</Text>\r\n                      </Box>\r\n                    </HStack>\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n          </HStack>\r\n\r\n          <Button\r\n            w=\"33%\"\r\n            ml=\"40%\"\r\n            horizontalAlign=\"true\"\r\n            textColor=\"Black\"\r\n            bg=\"yellow.100\"\r\n            _hover={{ bg: \"yellow.300\", transform: \"scale(1.01)\" }}\r\n            onClick={addVariant}\r\n          >\r\n            <>\r\n              <b>+</b>\r\n            </>\r\n            Add Varient\r\n          </Button>\r\n\r\n          <b>\r\n            <>Discription:</>\r\n          </b>\r\n          <Textarea\r\n            name=\"description\"\r\n            height=\"200px\"\r\n            backgroundColor=\"yellow.100\"\r\n            placeholder=\"Enter Discription here\"\r\n            size=\"md\"\r\n            onChange={(event) => handleChange(event)}\r\n          />\r\n        </Stack>\r\n\r\n        <br />\r\n\r\n        <Button\r\n          Align=\"middle\"\r\n          ml=\"40%\"\r\n          horizontalAlign=\"true\"\r\n          textColor=\"Black\"\r\n          bg=\"blue.100\"\r\n          _hover={{ bg: \"blue.300\", transform: \"scale(1.01)\" }}\r\n          onClick={(e)=>handleSubmit(e)}\r\n        >\r\n          Submit & Create Listing\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\nexport default NewItem;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CardDetails.js",["906","907"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,  \r\n    Flex,\r\n    Spacer ,\r\n    Button,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalBody,\r\n    ModalContent,\r\n    ModalOverlay,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    useToast,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport AddBankCard from \"../components/AddBankCard\";\r\nimport BankCards from \"../components/BankCards\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport Axios from \"axios\";\r\n\r\nconst CardDetails = () => {\r\n\r\n    const [bankCards,setBankCards] = useState([])\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const toast = useToast()\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/customer/bankCards\")\r\n        .then((Response)=>{\r\n            // console.log(Response.data.addresses);\r\n            setBankCards(Response.data.bankCards);\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error loading data\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }, [])\r\n\r\n\r\n    //delete a card\r\n    const deleteBankCard  = (card_id)=>{\r\n\r\n        Axios.delete(\"http://localhost:5000/customer/bankCards\",{data:{card_id:card_id}})\r\n        .then((Response)=>{\r\n            // console.log(Response);\r\n            setBankCards(bankCards.filter(\r\n                (bankCard)=>bankCard.card_id!==card_id\r\n            ))\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Bank Card deleted successfully\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }\r\n\r\n    //add new card\r\n    const addBankCard = (CardDetails)=>{\r\n\r\n        Axios.post(\"http://localhost:5000/customer/bankCards\",{CardDetails:CardDetails})\r\n        .then((Response)=>{\r\n            \r\n            if (Response.data.success===true){\r\n                \r\n                var card_id = Response.data.insertId;\r\n                var newCard = {card_id,...CardDetails}\r\n                setBankCards([...bankCards,newCard]);\r\n           \r\n                toast({\r\n                    position: \"bottom-right\",    \r\n                    description: \"New payment method added successfully\",\r\n                    status: \"success\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n            }\r\n            else{\r\n\r\n                toast({\r\n                    position: \"bottom-right\",    \r\n                    description: \"Card Number Already Exists\",\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n\r\n            }\r\n            \r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          });       \r\n\r\n    }\r\n\r\n   \r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    \r\n\r\n    return (\r\n        <Box   pt=\"100px\">\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\r\n\r\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> Card & Bank Details </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <Box p=\"1\">\r\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\r\n                                            Add New Payment Method\r\n                                        </Button>\r\n                    \r\n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n                                            <ModalOverlay />\r\n                                                <ModalContent>\r\n                                                    <ModalHeader>Add New Payment Method</ModalHeader>\r\n                                                    <ModalCloseButton />\r\n                                                    <ModalBody pb='5'>\r\n                                                    <AddBankCard addBankCard={addBankCard} trigger={onClose}/>\r\n                                                     </ModalBody>\r\n                                                    \r\n                                                </ModalContent>\r\n                                            </Modal>\r\n\r\n                                    </Box>\r\n                                 \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                                <BankCards bankcards={bankCards} deleteBankCard={deleteBankCard} />\r\n                                \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CardDetails\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\TrackOrder.js",["908","909"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\SellerDashboard.js",["910"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n    Input,\r\n    Stack,\r\n    useToast\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { useState, useEffect } from 'react';\r\nimport Axios from \"axios\";\r\nimport { Button } from \"@chakra-ui/react\"\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n} from \"@chakra-ui/react\"\r\nimport { Avatar } from \"@chakra-ui/react\"\r\n\r\n\r\nfunction SellerDashboard() {\r\n    const [user_id, setUserID] = useState('')\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const [phone_number, setTelephone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const [oldpwd, setOldPwd] = useState('')\r\n    const [newpwd, setNewPwd] = useState('')\r\n    const [confnewpwd, setConfNewPwd] = useState('')\r\n\r\n    const toast = useToast()\r\n\r\n/**################################################################\r\n                          Get All Seller Details\r\n ################################################################# */\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/seller/changeSellerDetails\")\r\n            .then((Response) => {\r\n                console.log(Response.data);\r\n                setFirstName(Response.data.user[0].first_name);\r\n                setLastName(Response.data.user[0].last_name);\r\n                setTelephone(Response.data.user[0].phone_number);\r\n                setEmail(Response.data.user[0].email);\r\n                setUserID(Response.data.user[0].user_id);\r\n\r\n            })\r\n            .catch((err) => {\r\n                toast({\r\n                    position: \"bottom-right\",\r\n                    description: \"Error loading data\",\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n            });\r\n    }, [])\r\n\r\n/**################################################################\r\n                Put new sellerdetails to the database\r\n ################################################################# */\r\n \r\n    const onSubmitdetail = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (phone_number.length !== 10) {\r\n            alert(\"Invalid Mobile Number\")\r\n            return\r\n        }\r\n\r\n        Axios.put('http://localhost:5000/seller/changeSellerDetails', { user_id, first_name, last_name, phone_number, email })\r\n            .then((Response) => {\r\n                toast({\r\n                    position: \"bottom-right\",\r\n                    description: \"Successfully Updated the Personal Data\",\r\n                    status: \"success\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                toast({\r\n                    position: \"bottom-right\",\r\n                    description: \"Internal Server Error. Try again later\",\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n            });\r\n    }\r\n\r\n/**################################################################\r\n                    Put new password to the database\r\n ################################################################# */\r\n \r\n    const onSubmitpassword = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newpwd !== confnewpwd) {\r\n            alert(\"password doesn't match\");\r\n            return\r\n        }\r\n        else {\r\n            Axios.put(\"http://localhost:5000/seller/changeSellerPassword\", { newpwd: newpwd, oldpwd: oldpwd })\r\n                .then((Response) => {\r\n                    toast({\r\n                        position: \"bottom-right\",\r\n                        description: \"Password update successful\",\r\n                        status: \"success\",\r\n                        duration: 5000,\r\n                        isClosable: true,\r\n                    })\r\n                    setOldPwd('')\r\n                    setNewPwd('')\r\n                    setConfNewPwd('')\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"error\", err)\r\n                    toast({\r\n                        position: \"bottom-right\",\r\n                        description: \"Wrong Password\",\r\n                        status: \"error\",\r\n                        duration: 5000,\r\n                        isClosable: true,\r\n                    })\r\n                    setOldPwd('')\r\n                    setNewPwd('')\r\n                    setConfNewPwd('')\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            pt=\"150px\"\r\n            align='center'\r\n            pl={{ base: \"10px\", sm: \"100px\" }}\r\n            pr={{ base: \"10px\", sm: \"100px\" }}\r\n        >\r\n\r\n            <Grid\r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                gap={0}\r\n                textAlign='center'\r\n                pb='200px'\r\n                w='800px'\r\n            >\r\n                <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\r\n                    <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\" w='300px'>\r\n                        <Avatar size=\"3xl\" name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" marginTop='90px' />\r\n                    </Heading>\r\n                    <VStack>\r\n\r\n                    </VStack>\r\n                </GridItem>\r\n                <GridItem\r\n                    rowSpan={1}\r\n                    colSpan={4}\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    p=\"20px\"\r\n                >\r\n                    <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\r\n                        Update Seller Details\r\n            </Heading>\r\n                    <form onSubmit={onSubmitdetail} >\r\n                        <FormControl id=\"details\" mt='30px'>\r\n                            <FormLabel>Email address</FormLabel>\r\n                            <Input type=\"email\"\r\n                                placeholder='Email Address'\r\n                                defaultValue={email}\r\n                                name='emailaddress'\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required />\r\n                            <FormLabel mt='10px'>First Name</FormLabel>\r\n                            <Input type='text'\r\n                                placeholder='First Name'\r\n                                defaultValue={first_name}\r\n                                name='firstname'\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                                required />\r\n                            <FormLabel mt='10px'>Last Name</FormLabel>\r\n                            <Input type='text'\r\n                                placeholder='Last Name'\r\n                                defaultValue={last_name}\r\n                                name='lastname'\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                                required />\r\n                            <FormLabel>Phone Number</FormLabel>\r\n                            <Input type=\"number\"\r\n                                placeholder='Phone Number'\r\n                                defaultValue={phone_number}\r\n                                name='emailaddress'\r\n                                onChange={(e) => setTelephone(e.target.value)}\r\n                                required />\r\n\r\n                            <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n                                <Button\r\n                                    loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\r\n                                    Update\r\n                                </Button>\r\n                            </Stack>\r\n                        </FormControl>\r\n                    </form>\r\n                    <form onSubmit={onSubmitpassword} >\r\n                        <FormControl id=\"emailpassword\" mt='30px'>\r\n\r\n\r\n                            <FormLabel>Old Password</FormLabel>\r\n                            <Input\r\n                                placeholder='Old Password'\r\n                                name='oldpword'\r\n                                type='password'\r\n                                onChange={(e) => setOldPwd(e.target.value)}\r\n                                required />\r\n                            <FormLabel>New Password</FormLabel>\r\n                            <Input\r\n                                placeholder='New Password'\r\n                                name='newpword'\r\n                                type='password'\r\n                                onChange={(e) => setNewPwd(e.target.value)}\r\n                                required\r\n                            />\r\n                            <FormLabel>Confirm New Password</FormLabel>\r\n                            <Input\r\n                                placeholder='Confirm New Password'\r\n                                name='confnewpword'\r\n                                type='password'\r\n                                onChange={(e) => setConfNewPwd(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n                                <Button\r\n                                    loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\r\n                                    Update\r\n                                </Button>\r\n                            </Stack>\r\n                        </FormControl>\r\n                    </form>\r\n                </GridItem>\r\n            </Grid>\r\n        </Box>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SellerDashboard;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\SignUp.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Navbar.js",["911","912","913"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Button,\r\n  useColorMode,\r\n  IconButton,\r\n  ReactRouterLink,\r\n  Img,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Navbar(props) {\r\n  var his=useHistory();\r\n  const MenuItems = ({ children }) => (\r\n    <Button\r\n      mt={{ base: 4, md: 0 }}\r\n      mr={6}\r\n      display=\"block\"\r\n      colorScheme=\"teal.500\"\r\n      variant=\"link\"\r\n      color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.100\"}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n  \r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  \r\n  function handleLogOut() {\r\n    Axios.get(\"http://localhost:5000/customer/logout\").then((response) => {\r\n      return <Redirect to='/' />\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      pt=\"1.0rem\"\r\n      bg={colorMode === \"light\" ? \"white\" : \"#101522\"}\r\n      color=\"white\"\r\n      position=\"fixed\"\r\n      top=\"0\"\r\n      width=\"100%\"\r\n      zIndex=\"10000\"\r\n    > \r\n      \r\n      <Flex align=\"center\" mr={5}>\r\n        <Img ml=\"1.5rem\" src=\"../logo.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\r\n      </Flex>\r\n\r\n      <IconButton\r\n      display={{base:'block', md:'none'}}\r\n        variant=\"outline\"\r\n        colorScheme=\"cyan\"\r\n        icon={<HamburgerIcon />}\r\n        onClick={handleToggle}\r\n        mr='20px'\r\n      />\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\r\n        width={{ base: \"full\", md: \"auto\" }}\r\n        alignItems=\"center\"\r\n        flexGrow={1}\r\n        pl=\"20px\"\r\n      >\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/\">\r\n            Home\r\n          </Link>\r\n        </MenuItems>\r\n        <MenuItems>\r\n        {props.Auth.userID === 1 ? <Link as={ReactRouterLink} to=\"/sellerdashboard/1\">\r\n            Dashboard\r\n          </Link> : <Link as={ReactRouterLink} to=\"/customerdashboard\">\r\n            Dashboard\r\n          </Link>}\r\n        </MenuItems>\r\n        <MenuItems>\r\n        {props.Auth.userID === 1 ? <Link as={ReactRouterLink} to=\"/sellerHome\">\r\n            Seller Home\r\n          </Link> : <Link as={ReactRouterLink} to=\"/\">\r\n            About Us\r\n          </Link>}\r\n        </MenuItems>\r\n        <MenuItems>\r\n          <Link as={ReactRouterLink} to=\"/\">\r\n            Help\r\n          </Link>\r\n        </MenuItems>\r\n      </Box>\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n        mt={{ base: 4, md: 0 }}\r\n      >\r\n      {props.Auth.userID === 1 || !props.Auth.isLoggedIn ?null: \r\n          <Link  as={ReactRouterLink} to=\"/cart\">\r\n          <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"lg\"\r\n          icon={<Icon as={FiShoppingCart} w={8} h={8}  />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n        /></Link>\r\n        }\r\n        \r\n        <IconButton\r\n          aria-label=\"Call Segun\"\r\n          size=\"md\"\r\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n          mr={{ base: \"5px\", md: \"20px\" }}\r\n          variant=\"ghost\"\r\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          onClick={toggleColorMode}\r\n        />\r\n        <a href=\"/signin\">\r\n          {props.Auth.isLoggedIn ? <Button\r\n            type=\"button\"\r\n            border=\"1px\"\r\n            variant=\"ghost\"\r\n            mr=\"1.5rem\"\r\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n            onClick= {handleLogOut}\r\n          >\r\n            Log Out\r\n          </Button>: <Button\r\n            type=\"button\"\r\n            border=\"1px\"\r\n            variant=\"ghost\"\r\n            mr=\"1.5rem\"\r\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n          >\r\n            Log In\r\n          </Button> }\r\n          \r\n        </a>\r\n      </Box>\r\n\r\n      <Box\r\n        w=\"100%\"\r\n        h=\"5px\"\r\n        b=\"0px\"\r\n        mt=\"10px\"\r\n        bg={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\AllOrders.js",["914","915","916"],"\r\nimport {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    useColorMode,\r\n    Flex,\r\n    Heading,\r\n    Divider,\r\n    HStack,Spacer, useToast\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport OrderTiles from \"..//components/OrderTiles\";\r\nimport Axios from \"axios\";\r\n  \r\n\r\nconst AllOrders = () => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const toast = useToast();\r\n\r\n    const [orderStats, setOrderStats] = useState([])\r\n\r\n    const [orders,setOrders] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/customer/allorders\")\r\n        .then((Response)=>{\r\n            // console.log(Response.data.orders);        \r\n            setOrders(Response.data.orders);\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error loading data\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }, [])\r\n\r\n    const mapStats = (list)=>{\r\n        var prep = 0\r\n        var shipped = 0\r\n        var cancelled = 0\r\n        var delivered = 0\r\n         \r\n        for (var i=0;i<list.length;i++){\r\n            if(list[i].order_status==='paid'){\r\n                prep= list[i].Count\r\n            }\r\n            else if (list[i].order_status==='shipped'){\r\n                shipped= list[i].Count\r\n            }\r\n            else if (list[i].order_status==='cancelled'){\r\n                cancelled= list[i].Count\r\n            }\r\n            else if (list[i].order_status==='delivered'){\r\n                delivered= list[i].Count\r\n            }\r\n        }\r\n       \r\n        return [prep,shipped,cancelled,delivered]\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/customer/allorders/stats\")\r\n        .then((Response)=>{\r\n            // console.log(\"stats\",Response.data.stats);\r\n            const stats = mapStats(Response.data.stats)\r\n            console.log(\"mapped stats\",stats)\r\n            setOrderStats(stats)\r\n            // console.log(orderStats)\r\n\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error loading summary\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }, [])\r\n\r\n\r\n    const cancelOrder = (order_id)=>{\r\n        Axios.put(\"http://localhost:5000/customer/allorders\",{Order_ID:order_id, Order_status:'cancelled'})\r\n        .then((Response)=>{\r\n            // console.log(\"Orders\",orders)\r\n            setOrders(orders.map(\r\n                (order)=>order.order_id===order_id?{...order,order_status:'cancelled'}:order\r\n              ))\r\n              toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Successfully cancelled the order \",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error Order Cancellation. Please try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n    })    \r\n            \r\n    }\r\n\r\n    const confirmOrder = (order_id)=>{\r\n        Axios.put(\"http://localhost:5000/customer/allorders\",{Order_ID:order_id, Order_status:'delivered'})\r\n        .then((Response)=>{\r\n            // console.log(Response)\r\n            setOrders(orders.map(\r\n                (order)=>order.order_id===order_id?{...order,order_status:'delivered'}:order\r\n              ))\r\n              toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Succesfully marked as received\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error Order Confirmation. Please try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n    })\r\n    }\r\n\r\n    return (\r\n        <Box\r\n        \r\n        pt=\"100px\"\r\n        // pl={{ base: \"10px\", sm: \"100px\" }}\r\n        // pr={{ base: \"10px\", sm: \"100px\" }} \r\n        >\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid>\r\n\r\n                            <GridItem bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> All Orders </Heading> \r\n                                    </Box>\r\n                            \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                            <GridItem p='5'>\r\n                              <Grid templateColumns=\"repeat(5, 1fr)\">\r\n                                <GridItem colSpan={4}>\r\n\r\n                                    <OrderTiles orders={orders} cancelOrder={cancelOrder} confirmOrder={confirmOrder}/>\r\n\r\n                                </GridItem>\r\n                                <GridItem >\r\n                                    <Box bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} p='10px' mt='20px' color={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>\r\n                                        <Heading size='sm' textAlign='center'>Summary</Heading>\r\n                                        <Divider mt='2' mb='2'/>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Preparing </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{orderStats[0]}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Shipped </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{orderStats[1]}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Await Cancel </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{orderStats[3]}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Cancelled </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{orderStats[2]}</Box>\r\n                                        </HStack>\r\n                    \r\n                                    </Box>\r\n\r\n                                </GridItem>\r\n                              </Grid>\r\n                            </GridItem>\r\n                       \r\n                             \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AllOrders\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\SignIn.js",["917","918","919"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\OrderView.js",["920","921","922"],"import {\r\n  Box,\r\n  Text,\r\n  Img,\r\n  Button,\r\n  Center,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  VStack,\r\n  HStack,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Deliverycard from \"../components/Deliverycard\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction OrderView() {\r\n  let { id } = useParams();\r\n\r\n  const [data, setData] = useState({ orderitems: [] });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/orders/orderdetails/${id}`)\r\n      .then((response) => {\r\n        setData(response.data.order[0]);\r\n      });\r\n  }, []);\r\n\r\n  console.log(data);\r\n\r\n  const arrMax = (arr) => Math.max(...arr);\r\n\r\n  var delivery_times = [];\r\n\r\n  data.orderitems.forEach((item) => {\r\n    delivery_times.push(item.delivery_time);\r\n  });\r\n\r\n  var maximum_delivery_time = arrMax(delivery_times);\r\n\r\n  return (\r\n    <Box\r\n      pt=\"120px\"\r\n      pl={{ base: \"5px\", sm: \"100px\" }}\r\n      pr={{ base: \"5px\", sm: \"100px\" }}\r\n    >\r\n      <Heading\r\n        as=\"h3\"\r\n        size=\"base\"\r\n        color=\"gray.600\"\r\n        mb=\"5px\"\r\n        bg=\"gray.300\"\r\n        p=\"5px\"\r\n      >\r\n        <HStack>\r\n          <Box>Order Details :</Box>\r\n          <Box size=\"xs\" color=\"red.600\">\r\n            {data.order_id}\r\n          </Box>\r\n        </HStack>\r\n      </Heading>\r\n      <Box height=\"80px\">\r\n        <HStack>\r\n          <b size=\"base\">\r\n            Deliver within {maximum_delivery_time} days from ordered date{\" \"}\r\n            {data.order_date}\r\n          </b>\r\n          <Box>\r\n            <Button\r\n              ml=\"60px\"\r\n              _hover={{ bg: \"blue.300\", transform: \"scale(1.01)\" }}\r\n            >\r\n              Print Shipping Lable\r\n            </Button>\r\n          </Box>\r\n        </HStack>\r\n\r\n        <p>\r\n          Make sure you ship your order within the handling time you specified\r\n          in the listing. Estimated delivery date shown to buyer:{\" \"}\r\n          {maximum_delivery_time} days from ordered date\r\n        </p>\r\n      </Box>\r\n\r\n      <Box width=\"100%\">\r\n        <HStack>\r\n          <Box width=\"100%\">\r\n            <Heading\r\n              as=\"h3\"\r\n              size=\"base\"\r\n              color=\"gray.600\"\r\n              mb=\"5px\"\r\n              bg=\"gray.300\"\r\n              p=\"5px\"\r\n            >\r\n              Purchase Details\r\n            </Heading>\r\n            <Box height=\"250px\">\r\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n                <GridItem fontWeight=\"bold\">Buyer</GridItem>\r\n                <GridItem fontWeight=\"semibold\">\r\n                  {data.firstname} {data.lastname}\r\n                </GridItem>\r\n                <GridItem fontWeight=\"bold\">E-mail</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.email}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Phone</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.phone_number}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Date sold</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.order_date}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Date paid</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.order_date}</GridItem>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box width=\"100%\">\r\n            <Heading\r\n              as=\"h3\"\r\n              size=\"base\"\r\n              color=\"gray.600\"\r\n              mb=\"5px\"\r\n              bg=\"gray.300\"\r\n              p=\"5px\"\r\n            >\r\n              Shipping Details\r\n            </Heading>\r\n\r\n            <Box height=\"250px\">\r\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={2}>\r\n                <GridItem fontWeight=\"bold\">Tracking</GridItem>\r\n                <GridItem fontWeight=\"semibold\">\r\n                  {data.tracking_number}\r\n                </GridItem>\r\n                <GridItem fontWeight=\"bold\">Ship_to</GridItem>\r\n                <GridItem fontWeight=\"semibold\">\r\n                  {data.address_firstname} {data.address_lastname}\r\n                </GridItem>\r\n                <GridItem fontWeight=\"bold\">Street</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.street}</GridItem>\r\n                <GridItem fontWeight=\"bold\">City</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.city}</GridItem>\r\n                <GridItem fontWeight=\"bold\">State</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.state}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Zip Code</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.zip}</GridItem>\r\n                <GridItem fontWeight=\"bold\">Country of origin</GridItem>\r\n                <GridItem fontWeight=\"semibold\">Sri Lanka</GridItem>\r\n                <GridItem fontWeight=\"bold\">Phone</GridItem>\r\n                <GridItem fontWeight=\"semibold\">{data.phone_number}</GridItem>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </HStack>\r\n\r\n        <Box width=\"100%\">\r\n          <Heading\r\n            as=\"h3\"\r\n            size=\"base\"\r\n            color=\"gray.600\"\r\n            mb=\"5px\"\r\n            bg=\"gray.300\"\r\n            p=\"5px\"\r\n          >\r\n            Items\r\n          </Heading>\r\n          <Box height=\"auto\" pb=\"100px\">\r\n            {Array(data.orderitems.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <Box\r\n                  w=\"100%\"\r\n                  _hover={{ bg: \"yellow.100\", transform: \"scale(1.01)\" }}\r\n                  borderRadius=\"lg\"\r\n                  overflow=\"hidden\"\r\n                  mb=\"5px\"\r\n                  borderWidth=\"1px\"\r\n                >\r\n                  <HStack>\r\n                    <Box width=\"50%\" fontWeight=\"semibold\" height=\"80px\">\r\n                      <Box>\r\n                        <Img\r\n                          src={`data:image/png;base64,${arrayBufferToBinaryString(\r\n                            data.orderitems[i].image.data\r\n                          )}`}\r\n                          alt={\"picture\"}\r\n                          w=\"100px\"\r\n                          h=\"100px\"\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n\r\n                    <Box width=\"100%\" fontWeight=\"semibold\" height=\"80px\">\r\n                      <Box fontWeight=\"bold\">\r\n                        <Text color=\"red.600\" fontSize=\"lg\">\r\n                          {data.orderitems[i].item_name}\r\n                        </Text>\r\n                      </Box>\r\n                    </Box>\r\n                    <VStack>\r\n                      <Box width=\"200px\" fontWeight=\"semibold\" height=\"40px\">\r\n                        <Box>\r\n                          <Text color=\"gray.600\" fontSize=\"lg\">\r\n                            Variant: <b>{data.orderitems[i].variant_name}</b>\r\n                          </Text>\r\n                        </Box>\r\n                      </Box>\r\n                      <Box width=\"200px\" fontWeight=\"semibold\" height=\"40px\">\r\n                        <Box>\r\n                          <Text color=\"gray.600\" fontSize=\"lg\">\r\n                            Quantity:{\" \"}\r\n                            <b>{data.orderitems[i].ordered_quantity}</b>\r\n                          </Text>\r\n                        </Box>\r\n                      </Box>\r\n                    </VStack>\r\n\r\n                    <Box\r\n                      width=\"50%\"\r\n                      height=\"80px\"\r\n                      fontWeight=\"semibold\"\r\n                      textAlign=\"center\"\r\n                    >\r\n                      <Text color=\"blue.700\" fontSize=\"2lg\">\r\n                        Rs. {data.orderitems[i].price}\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box width=\"80%\" fontWeight=\"semibold\" height=\"80px\">\r\n                      <Text color=\"gray.600\" fontSize=\"lg\">\r\n                        Total:{\" \"}\r\n                        {data.orderitems[i].price *\r\n                          data.orderitems[i].ordered_quantity}\r\n                      </Text>\r\n                    </Box>\r\n                  </HStack>\r\n                </Box>\r\n              ))}\r\n            <Box\r\n              borderRadius=\"lg\"\r\n              overflow=\"hidden\"\r\n              mb=\"5px\"\r\n              borderWidth=\"1px\"\r\n              p=\"50px\"\r\n            >\r\n              <HStack spacing='50px'>\r\n                <Text fontSize=\"2xl\">\r\n                  Order Total: \r\n                </Text>\r\n                <Heading fontSize=\"4xl\">\r\n                  Rs. {data.order_total}\r\n                </Heading>\r\n              </HStack>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default OrderView;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Seller\\SellerHome.js",["923","924","925","926","927","928"],"import React, { useEffect, useState } from \"react\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport SearchBarHome from \"../../components/SearchBarHome\";\r\nimport Middle from \"../../components/Seller/Middle\";\r\nimport Card from \"../../components/Seller/Card\";\r\nimport { Box, Flex, Skeleton, Stack } from \"@chakra-ui/react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nfunction SellerHome() {\r\n  const [user, setUser] = useState({ firstName: \"\", lastName: \"\" });\r\n  const [overview, setOverview] = useState({\r\n    userCount: 0,\r\n    todayRevenue: 0,\r\n    totalRevenue: 0,\r\n    awaitingShipment: 0,\r\n    awaitingDelivery: 0,\r\n  });\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/customer/login\").then((response) => {\r\n      setUser({\r\n        firstName: response.data.user.first_name,\r\n        lastName: response.data.user.last_name,\r\n      });\r\n    });\r\n    Axios.post(\"http://localhost:5000/seller/overview\").then((response) => {\r\n      if(response.data.auth === false) {\r\n        Axios.get(\"http://localhost:5000/customer/logout\").then((response) => {\r\n    })\r\n      } else {\r\n        setOverview({\r\n          userCount: response.data.result.userCount,\r\n          todayRevenue: response.data.result.todayRevenue,\r\n          totalRevenue: response.data.result.totalRevenue,\r\n          awaitingShipment: response.data.result.awaitingShipment,\r\n          awaitingDelivery: response.data.result.awaitingDelivery,\r\n        })\r\n      }\r\n      \r\n      \r\n    });\r\n  }, []);\r\n  // console.log(\"SellerHome\");\r\n\r\n  return (\r\n    <>\r\n      <Middle user={user} overview={overview}/>\r\n      <Stack mb=\"25px\" p=\"10px\" pt=\"90px\">\r\n        {/* <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"10px\" /> */}\r\n      </Stack>\r\n      <div className=\"buttons\" p=\"10px\">\r\n        <Card\r\n          imageUrl=\"./img/svg-1.svg\"\r\n          imageAlt=\"User\"\r\n          url=\"/awaitingshipment\"\r\n          type=\"Awaiting Shipment Orders\"\r\n          count=\"34 new orders received today\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-5.svg\"\r\n          imageAlt=\"User\"\r\n          url=\"/awaitingdelivery\"\r\n          type=\"Awaiting Delivery Orders \"\r\n          count=\"20 orders waiting for delivery\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-2.svg\"\r\n          imageAlt=\"User\"\r\n          url=\"/allorders\"\r\n          type=\"All Orders\"\r\n          count=\"5100 total orders\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-8.svg\"\r\n          imageAlt=\"User\"\r\n          url=\"/sellerhome\"\r\n          type=\"My Items\"\r\n          count=\"You have listed 20 items\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-6.svg\"\r\n          imageAlt=\"User\"\r\n          url=\"/\"\r\n          type=\"List New Item\"\r\n          count=\"\"\r\n        />\r\n      </div>\r\n      <BottomItems />\r\n      <Footer />\r\n      <BottomFooter shopName=\"Electrica\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SellerHome;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\FeedbackPage.js",["929","930","931","932","933","934","935","936","937"],"import {\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Textarea,\r\n  Text,\r\n  useColorMode,\r\n  Badge,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\r\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";import { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\n\r\n\r\nimport {\r\n  AddIcon,\r\n  MinusIcon,\r\n  ArrowForwardIcon,\r\n  StarIcon,\r\n  \r\n} from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction FeedbackPage(props) {\r\n  let { item_id } = useParams();\r\n  let { order_id } = useParams();\r\n\r\n  const toast = useToast()\r\n\r\n  // var Order_ID = 1;\r\n  // var Item_ID = 1;\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"\",\r\n    item_name: \"\",\r\n    category_name: \"\",\r\n    price: 0,\r\n    num_of_orders: 0,\r\n    description: \"\",\r\n    status: \"\",\r\n    image: \"\",\r\n    feedbacks: [\r\n      {\r\n        feedback_ID: \"\",\r\n        user_ID: \"\",\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        variant_ID: \"\",\r\n        variant_name: \"\",\r\n        image: \"\",\r\n        color: \"\",\r\n        size: \"\",\r\n        specificDetail: \"\",\r\n        quantity: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  //get item details from DB\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/items/specificitem/${item_id}`)\r\n      .then((response) => {\r\n        let data = response.data.items;\r\n        console.log(data);\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  const [Rating, setRating] = useState('')\r\n  const [Comment, setComment] = useState('')\r\n\r\n  //add feedback\r\n  const addFeedback = (Order_ID, Item_ID, Rating, Comment) => {\r\n    console.log(Item_ID, Order_ID);\r\n    axios.post(\"http://localhost:5000/orders/feedback\", {Order_ID: Order_ID, Item_ID: Item_ID, Rating: Rating, Comment: Comment })\r\n      .then((Response) => {\r\n        toast({\r\n          position: \"bottom-right\",\r\n          description: \"Feedback Submitted Successfully\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        toast({\r\n          position: \"bottom-right\",\r\n          description: \"Internal Server Error. Try again later\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        })\r\n      });\r\n\r\n  }\r\n\r\n  const onSubmit = (e)=>{\r\n    e.preventDefault()\r\n\r\n    if(!Rating || !Comment){\r\n        alert('Empty Field')\r\n        return\r\n    }\r\n    \r\n    addFeedback(order_id, item_id, Rating, Comment)\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb=\"20px\">\r\n        <SearchBar text=\"I'm shopping for\" />\r\n      </Center>\r\n      <SimpleGrid\r\n        columns={2}\r\n        spacing={5}\r\n        minChildWidth=\"400px\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n      >\r\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\r\n          <Image\r\n            src={`data:image/png;base64,${arrayBufferToBinaryString(\r\n              data.image ? data.image.data : null\r\n            )}`}\r\n            w=\"auto\"\r\n            h=\"auto\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            Submit your feedback...\r\n          </Heading>\r\n\r\n          <Text fontSize=\"6xl\">{data.item_name}</Text>\r\n\r\n          <Badge variant=\"outline\" colorScheme=\"yellow\" fontSize='lg'>\r\n            {data.category}\r\n          </Badge>\r\n          <form onSubmit={onSubmit}>\r\n            <Box d=\"flex\" mt=\"10\" alignItems=\"center\">\r\n              {Array(5)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n                  <StarIcon\r\n                    key={i}\r\n                    color={i < Rating ? \"cyan.500\" : \"cyan.100\"}\r\n                    onClick={() => setRating(i + 1)}\r\n                    boxSize=\"50px\"\r\n                    cursor=\"pointer\"\r\n                  />\r\n                ))}\r\n            </Box>\r\n\r\n            <Textarea mt=\"30px\" placeholder=\"Type your comment here...\" value={Comment} onChange={(e)=>setComment(e.target.value)}/>\r\n            <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n              <Button\r\n                loadingText=\"Submitting\"\r\n                type=\"submit\"\r\n                rightIcon={<ArrowForwardIcon />}\r\n                colorScheme=\"teal\"\r\n                variant=\"outline\"\r\n              >\r\n                Leave Feedback\r\n              </Button>\r\n            </Stack>\r\n          </form>\r\n        </Box>\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FeedbackPage;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\Home.js",["938"],"import React from \"react\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport ShopNow from \"../../components/ShopNow\";\r\nimport Pricing from \"../../components/Pricing/Pricing\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\nimport SearchBarHome from \"../../components/SearchBarHome\";\r\nimport ImageSlider from \"../../components/Slider/ImageSlider\";\r\nimport { SliderData } from \"../../components/Slider/SliderData\";\r\n// import checkLogin from \"./checkLogin\";\r\nimport { useHistory } from \"react-router\";\r\nfunction Home() {\r\n  // console.log(\"Home page\");\r\n  return (\r\n    <>\r\n      <SearchBarHome />\r\n      <ShopNow />\r\n      <ImageSlider slides={SliderData} />;\r\n      <Pricing heading=\"\" />\r\n      <BottomItems />\r\n      <Footer />\r\n      <BottomFooter shopName=\"Electrica\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\SpecficProductPage.js",["939","940","941","942","943"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Heading,\r\n  HStack,\r\n  IconButton,\r\n  Image,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  SimpleGrid,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  useColorMode,\r\n  useDisclosure,\r\n  Modal,\r\n  useToast,\r\n  MenuButton,\r\n  Menu,\r\n  MenuList,\r\n  MenuItem,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  AddIcon,\r\n  ChevronDownIcon,\r\n  Icon,\r\n  MinusIcon,\r\n  StarIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport axios from \"axios\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\n\r\nfunction SpecificProductPage() {\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const toast = useToast();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [currentUser, setCurrentUser] = useState({\r\n    isLoggedIn: false,\r\n    user: 0,\r\n  });\r\n\r\n  const [serverResponse, setServerResponse] = useState({\r\n    success: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0});\r\n\r\n  const [isMainCity, setIsMainCity] = useState(0);\r\n\r\n  const quantity_inc = () => {\r\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\r\n  };\r\n  const quantity_dec = () => {\r\n    if (currentOrder.quantity > 0)\r\n      setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\r\n  };\r\n\r\n  const calculateDeliveryTime = () =>{\r\n    let time = 0\r\n    if(data.variants[currentOrder.varient].quantity === 0){time = time + 3}\r\n    if(isMainCity === 1){\r\n      time = time + 5\r\n    }else if (isMainCity === 2){\r\n      time = time + 7\r\n    }\r\n    return time\r\n  }\r\n\r\n  var toast_type1 = (success, message) =>\r\n    toast({\r\n      position: \"bottom-right\",\r\n      title: success ? \"Success\" : \"Failed\",\r\n      description: message,\r\n      status: success ? \"success\" : \"error\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"\",\r\n    item_name: \"\",\r\n    category_name: \"\",\r\n    price: 0,\r\n    num_of_orders: 0,\r\n    description: \"\",\r\n    status: \"\",\r\n    image: \"\",\r\n    feedbacks: [\r\n      {\r\n        feedback_ID: \"\",\r\n        user_ID: \"\",\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        variant_ID: \"\",\r\n        variant_name: \"\",\r\n        image: \"\",\r\n        color: \"\",\r\n        size: \"\",\r\n        specificDetail: \"\",\r\n        quantity: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.defaults.withCredentials = true;\r\n    axios.get(`http://localhost:5000/customer/login`).then((response) => {\r\n      console.log(response);\r\n      if (response.data.LoggedIn)\r\n        setCurrentUser({ isLoggedIn: true, user: response.data.user.user_id });\r\n    });\r\n    axios\r\n      .get(`http://localhost:5000/items/specificitem/${id}`)\r\n      .then((response) => {\r\n        let data = response.data.items;\r\n        console.log(data);\r\n        setData(data);\r\n        setCurrentOrder({\r\n          ...currentOrder,\r\n          varient_id: data.variants[0].variant_id,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const validateData = () => {\r\n    if (currentOrder.quantity <= 0) {\r\n      toast_type1(false, \"Please Select the Quantity\")\r\n      return false;\r\n    } else if (isMainCity === 0) {\r\n      toast_type1(false, \"Please select the city\");\r\n      return false;\r\n    }else if (!currentUser.isLoggedIn) {\r\n      toast_type1(false, \"Please Log in to your account\");\r\n      return false;\r\n    }  \r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const HandleClickAddtoCart = () => {\r\n    if(validateData()){\r\n      axios\r\n        .post(`http://localhost:5000/items/specificitem/addtocart`, {\r\n          cart_id: currentUser.user,\r\n          varient_id: currentOrder.varient_id,\r\n          quantity: currentOrder.quantity,\r\n          delivery_time:calculateDeliveryTime()\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          toast_type1(true, \"Item Added to the cart successfully\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Add to cart server error : \" + error.response.data.message\r\n          );\r\n          setServerResponse({ success: false, message: \"Server error\" });\r\n          toast_type1(false, \"Server error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const HandleClickBuyNow = () => {\r\n    if(validateData()){\r\n      axios\r\n        .post(`http://localhost:5000/items/specificitem/addtocart`, {\r\n          cart_id: currentUser.user,\r\n          varient_id: currentOrder.varient_id,\r\n          quantity: currentOrder.quantity,\r\n          delivery_time:calculateDeliveryTime()\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          history.push(\"/cart\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Add to cart server error : \" + JSON.stringify(error.response.data.message)\r\n          );\r\n          setServerResponse({ success: false, message: \"Server error\" });\r\n          toast_type1(false, \"Server error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  var imageStack = new Array(data.variants.length)\r\n    .fill(0)\r\n    .map((zero, index) => (\r\n      <Box\r\n        cursor=\"pointer\"\r\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\r\n        borderColor=\"gray.500\"\r\n        onClick={() =>\r\n          setCurrentOrder({\r\n            ...currentOrder,\r\n            varient: index,\r\n            varient_id: data.variants[index].variant_id,\r\n          })\r\n        }\r\n      >\r\n        <Image\r\n          src={arrayBufferToBinaryString(\r\n            data.variants[index].image ? data.variants[index].image.data : null\r\n          )}\r\n          w=\"100px\"\r\n          h=\"100px\"\r\n          alt=\"image\"\r\n        />\r\n      </Box>\r\n    ));\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb=\"20px\">\r\n        <SearchBar text=\"I'm shopping for\" />\r\n      </Center>\r\n\r\n      <SimpleGrid\r\n        columns={2}\r\n        spacing={5}\r\n        minChildWidth=\"400px\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n      >\r\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\r\n          <Image\r\n            src={arrayBufferToBinaryString(\r\n              data.image ? data.image.data : null\r\n            )}\r\n            w=\"400px\"\r\n            h=\"400px\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            {data.item_name}\r\n          </Heading>\r\n\r\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\r\n            {data.category}\r\n          </Text>\r\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < data.rating ? \"cyan.500\" : \"cyan.300\"}\r\n                />\r\n              ))}\r\n            <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n              {data.feedbacks.length} reviews &bull; {data.num_of_orders} orders\r\n            </Box>\r\n          </Box>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Varient\r\n          </Heading>\r\n          <Text mt=\"10px\" color=\"green.500\">\r\n            {data.variants[currentOrder.varient].variant_name}\r\n          </Text>\r\n          <HStack>{imageStack}</HStack>\r\n          <HStack spacing=\"40px\">\r\n            <Box>\r\n              <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n                Color\r\n              </Heading>\r\n              <Text mt=\"5px\">{data.variants[currentOrder.varient].color}</Text>\r\n            </Box>\r\n            <Box>\r\n              <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n                Size\r\n              </Heading>\r\n              <Text mt=\"5px\">{data.variants[currentOrder.varient].size}</Text>\r\n            </Box>\r\n          </HStack>\r\n\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Specific details of the variant\r\n          </Heading>\r\n          <Text mt=\"5px\">\r\n            {data.variants[currentOrder.varient].specific_detail}\r\n          </Text>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Quantity\r\n          </Heading>\r\n          <HStack mt=\"10px\">\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<AddIcon />}\r\n              onClick={quantity_inc}\r\n            />\r\n            <Text>{currentOrder.quantity}</Text>\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<MinusIcon />}\r\n              onClick={quantity_dec}\r\n            />\r\n            <Text pl=\"20px\" color=\"red.500\">\r\n              {data.variants.length === 0\r\n                ? null\r\n                : data.variants[currentOrder.varient].quantity}{\" \"}\r\n              items are available\r\n            </Text>\r\n          </HStack>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Delivery to\r\n          </Heading>\r\n          <Menu>\r\n            <MenuButton mt='10px' mb=\"10px\" as={Button} rightIcon={<ChevronDownIcon />}>\r\n              {isMainCity === 0 ? <Text>Select option</Text> : null}\r\n              {isMainCity === 1 ? <Text>Main city</Text> : null}\r\n              {isMainCity === 2 ? <Text>Not a main city</Text> : null}\r\n            </MenuButton>\r\n            <MenuList>\r\n              <MenuItem onClick={() => setIsMainCity(1)}>Main City</MenuItem>\r\n              <MenuItem onClick={() => setIsMainCity(2)}>\r\n                Not a main city\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n          {isMainCity === 1 ?\r\n          <Box bg={colorMode === 'light' ? 'gray.100' : 'gray.800'} p = '10px'> \r\n          <Text fontSize=\"sm\">Main cities are : </Text> \r\n          <Text fontSize='xs'>Colombo, Gampaha, Moratuwa, Kelaniya</Text>\r\n          <Text fontSize='xl'>Estimated delivery time : {data.variants[currentOrder.varient].quantity === 0 ? 8 : 5} days</Text> \r\n          </Box>\r\n          : null}\r\n\r\n          {isMainCity === 2 ?\r\n          <Box bg={colorMode === 'light' ? 'gray.100' : 'gray.800'} p = '10px'> \r\n          <Text fontSize=\"sm\">Cities excluding : </Text> \r\n          <Text fontSize='xs'>Colombo, Gampaha, Moratuwa, Kelaniya</Text>\r\n          <Text fontSize='xl'>Estimated delivery time : {data.variants[currentOrder.varient].quantity === 0 ? 10 : 7} days</Text> \r\n          </Box>\r\n          : null}\r\n          <Heading as=\"h4\" size=\"xl\" mt=\"20px\">\r\n            Price\r\n          </Heading>\r\n          <Text fontSize=\"4xl\">\r\n            Rs. {data.variants[currentOrder.varient].price}\r\n          </Text>\r\n          <HStack mt=\"20px\">\r\n            <Button\r\n              onClick={HandleClickBuyNow}\r\n              colorScheme=\"cyan\"\r\n              color=\"white\"\r\n              size=\"lg\"\r\n            >\r\n              Buy now\r\n            </Button>\r\n            <Button\r\n              onClick={HandleClickAddtoCart}\r\n              colorScheme=\"orange\"\r\n              size=\"lg\"\r\n              variant=\"outline\"\r\n            >\r\n              Add to cart\r\n            </Button>\r\n          </HStack>\r\n        </Box>\r\n      </SimpleGrid>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"10px\"\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          Description\r\n        </Heading>\r\n        <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\r\n          {data.description}\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"100px\"\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          Reviews\r\n        </Heading>\r\n\r\n        <ReviewCountPreview feedbacks={data.feedbacks} />\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> All\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 5\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 4\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 3\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 2\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 1\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview\r\n                feedbacks={data.feedbacks}\r\n                rating=\"all\"\r\n              />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={5} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={4} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={3} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={2} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={1} />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent bg={serverResponse.success ? \"green.300\" : \"red.300\"}>\r\n          <ModalHeader>\r\n            {serverResponse.success ? (\r\n              <Text color=\"white\">Success</Text>\r\n            ) : (\r\n              <Text color=\"white\">Failed</Text>\r\n            )}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Text color=\"white\">{serverResponse.message}</Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SpecificProductPage;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CustomerDashboard.js",["944","945","946","947","948"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Avatar,\r\n    Divider,\r\n    Heading,\r\n    SimpleGrid,\r\n    Text,\r\n    useColorMode,\r\n    useToast\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport Axios from \"axios\";\r\n\r\nconst CustomerDashboard = () => {\r\n  const toast = useToast();\r\n\r\n  const [userdata, setUserdata] = useState([]);\r\n  const [orderNum, setOrderNum] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/customer/user\")\r\n      .then((Response) => {\r\n        console.log(Response.data.user[0]);\r\n        // console.log(Response.data.det);\r\n        setUserdata(Response.data.user[0]);\r\n        const det = arrangeData(Response.data.det);\r\n        setOrderNum(det);\r\n      })\r\n      .catch((err) => {\r\n        toast({\r\n          position: \"bottom-right\",\r\n          description: \"Loading Error\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const arrangeData = (data) => {\r\n    var newdata = {\r\n      Shipped: 0,\r\n      Preparing: 0,\r\n      Awaiting_Cancel: 0,\r\n      Cancelled: 0,\r\n      Delivered: 0,\r\n    };\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (data[i].Order_status === \"shipped\") {\r\n        newdata.Shipped += 1;\r\n      } else if (data[i].Order_status === \"paid\") {\r\n        newdata.Preparing += 1;\r\n      } else if (data[i].Order_status === \"returned\") {\r\n        newdata.Awaiting_Cancel += 1;\r\n      } else if (data[i].Order_status === \"cancelled\") {\r\n        newdata.Cancelled += 1;\r\n      } else if (data[i].Order_status === \"delivered\") {\r\n        newdata.Delivered += 1;\r\n      }\r\n    }\r\n    // console.log(newdata);\r\n    return newdata;\r\n  };\r\n\r\n  // console.log(orderNum);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box\r\n      pt=\"100px\"\r\n      // pl={{ base: \"10px\", sm: \"100px\" }}\r\n      // pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Grid templateColumns=\"repeat(5, 1fr)\" templateRows=\"repeat(2, 1fr)\">\r\n        <GridItem colSpan={1} rowSpan={2}>\r\n          <CustomerDashSideBar page=\"dashboard\" />\r\n        </GridItem>\r\n\r\n        <GridItem colSpan={4} m={5} mt={8}>\r\n          <Box\r\n            width=\"auto\"\r\n            h=\"auto\"\r\n            overflow=\"hidden\"\r\n            p=\"10px\"\r\n            pb=\"5px\"\r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            borderRadius=\"10px\"\r\n          >\r\n            <Grid templateRows=\"repeat(2, 1fr)\" gap={4}>\r\n              <GridItem p=\"10px\">\r\n                <SimpleGrid columns={2} spacing={5}>\r\n                  <Box>\r\n                    <Avatar\r\n                      size=\"xl\"\r\n                      // name={userdata[0].First_Name + \" \" + userdata[0].Last_Name}\r\n                      src=\"https://images.unsplash.com/photo-1553267751-1c148a7280a1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80\"\r\n                    />\r\n                  </Box>\r\n                  <Box>\r\n                    <Heading size=\"lg\">\r\n                      {\" \"}\r\n                      Hello, {userdata.first_name +\r\n                        \" \" +\r\n                        userdata.last_name}{\" \"}\r\n                    </Heading>\r\n                  </Box>\r\n                </SimpleGrid>\r\n              </GridItem>\r\n\r\n              <GridItem>\r\n                <Box\r\n                  bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                  borderRadius=\"md\"\r\n                  color=\"white\"\r\n                >\r\n                  <SimpleGrid columns={5} spacing={5} pt=\"10px\" pb=\"10px\">\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Preparing}{\" \"}\r\n                      </Heading>\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        Awaiting Shipment\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Shipped}{\" \"}\r\n                      </Heading>\r\n\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        Shipped\r\n                      </Text>\r\n                    </Box>\r\n\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Awaiting_Cancel}{\" \"}\r\n                      </Heading>\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        Returned\r\n                      </Text>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Cancelled}{\" \"}\r\n                      </Heading>\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        Cancelled\r\n                      </Text>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                      <Heading\r\n                        as=\"h4\"\r\n                        size=\"lg\"\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {orderNum.Delivered}{\" \"}\r\n                      </Heading>\r\n\r\n                      <Text\r\n                        textColor={\r\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\r\n                        }\r\n                      >\r\n                        Delivered\r\n                      </Text>\r\n                    </Box>\r\n                  </SimpleGrid>\r\n                </Box>\r\n              </GridItem>\r\n            </Grid>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerDashboard);\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CategoryPage.js",["949","950"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  useColorMode,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport axios from \"axios\";\r\n\r\nfunction CategoryPage() {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/items/categories\").then((response) => {\r\n      let data = response.data.items;\r\n      data.push(\"All Categories\");\r\n      setCategories(data);\r\n      setActiveCategory(\"All Categories\")\r\n    });\r\n\r\n    axios\r\n    .get(`http://localhost:5000/items`)\r\n    .then((response) => {\r\n      let data = response.data.items;\r\n      setActiveCategoryProducts(data);\r\n\r\n    });\r\n  }, []);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const [activeCategory, setActiveCategory] = useState();\r\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([]);\r\n\r\n\r\n  var searchBarText = `Search in ${activeCategory}`;\r\n\r\n  const HandleClick = (category) => {\r\n    setActiveCategory(category);\r\n    if(category!==\"All Categories\"){\r\n      var url = `http://localhost:5000/items/search/${category}`;\r\n    }else{\r\n      var url = `http://localhost:5000/items`;\r\n    }\r\n\r\n    axios\r\n    .get(url)\r\n    .then((response) => {\r\n      let data = response.data.items;\r\n      setActiveCategoryProducts(data);\r\n\r\n    });\r\n  \r\n  };\r\n  const HandleChange = (event) => {\r\n    var value = event.target.value;\r\n    axios\r\n    .post(\"http://localhost:5000/items\",{\r\n      \"category\":`${activeCategory}`,\r\n      \"item_name\":`${value}`\r\n    })\r\n    .then((response) => {\r\n      let data = response.data.items;\r\n      setActiveCategoryProducts(data);\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", md: \"100px\" }}\r\n      pr={{ base: \"10px\", md: \"100px\" }}\r\n    >\r\n      <Center mb=\"10px\">\r\n        <SearchBar text={searchBarText} onChange={HandleChange}/>\r\n      </Center>\r\n      <Grid\r\n        templateRows=\"repeat(1, 1fr)\"\r\n        templateColumns=\"repeat(5, 1fr)\"\r\n        gap={0}\r\n        pb=\"200px\"\r\n      >\r\n        <GridItem\r\n          rowSpan={1}\r\n          colSpan={1}\r\n          bg={colorMode === \"light\" ? \"gray.200\" : \"gray.600\"}\r\n          p=\"10px\"\r\n        >\r\n          <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\r\n            Categories\r\n          </Heading>\r\n          <VStack>\r\n            {Array(categories.length)\r\n              .fill(\"\")\r\n              .map((_, i) =>\r\n                categories[i] === activeCategory ? (\r\n                  <Button\r\n                    w=\"100%\"\r\n                    variant=\"ghost\"\r\n                    colorScheme=\"cyan\"\r\n                    isActive\r\n                    onClick={() => HandleClick(categories[i])}\r\n                  >\r\n                    {categories[i]}\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    w=\"100%\"\r\n                    variant=\"ghost\"\r\n                    colorScheme=\"cyan\"\r\n                    onClick={() => HandleClick(categories[i])}\r\n                  >\r\n                    {categories[i]}\r\n                  </Button>\r\n                )\r\n              )}\r\n          </VStack>\r\n        </GridItem>\r\n        <GridItem\r\n          rowSpan={1}\r\n          colSpan={4}\r\n          borderWidth=\"1px\"\r\n          borderColor=\"gray.300\"\r\n          p=\"20px\"\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n            {activeCategory}\r\n          </Heading>\r\n          <Grid\r\n            h=\"auto\"\r\n            templateColumns={{\r\n              md: \"repeat(1, 1fr)\",\r\n              lg: \"repeat(2, 1fr)\",\r\n              xl: \"repeat(3, 1fr)\",\r\n            }}\r\n            gap={2}\r\n          >\r\n            {Array(activeCategoryProducts.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <ProductCard\r\n                  item_id = {activeCategoryProducts[i].item_id} \r\n                  title={activeCategoryProducts[i].item_name}\r\n                  imageUrl={activeCategoryProducts[i].image}\r\n                  itemName={activeCategoryProducts[i].item_name}\r\n                  category={activeCategoryProducts[i].category_name}\r\n                  price={activeCategoryProducts[i].price}\r\n                  orders={activeCategoryProducts[i].num_of_orders}\r\n                  status={activeCategoryProducts[i].status}\r\n                  rating={activeCategoryProducts[i].rating}\r\n                  reviews={activeCategoryProducts[i].reviews}\r\n                />\r\n              ))}\r\n          </Grid>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CategoryPage;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CartPage.js",["951","952","953","954","955"],"import { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Heading,\r\n  HStack,\r\n  Icon,\r\n  Img,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n  SimpleGrid,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Tfoot,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorMode,\r\n  useToast,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\nimport { FaMoneyBillAlt, FaRegCreditCard } from \"react-icons/fa\";\r\nimport { SiPaypal } from \"react-icons/si\";\r\nimport { RiVisaLine } from \"react-icons/ri\";\r\n\r\nimport visa from \"payment-icons/min/flat/visa.svg\";\r\nimport mastercard from \"payment-icons/min/flat/mastercard-old.svg\";\r\nimport amex from \"payment-icons/min/flat/amex.svg\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction CartPage() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const toast = useToast();\r\n  var toast_type1 = (success, message) =>\r\n    toast({\r\n      position: \"bottom-right\",\r\n      title: success ? \"Success\" : \"Failed\",\r\n      description: message,\r\n      status: success ? \"success\" : \"error\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n\r\n  const [cartItems, setCartItems] = useState([\r\n    {\r\n      item_ID: \"\",\r\n      item_name: \"\",\r\n      price: 0,\r\n      quantity: 0,\r\n      varient: \"\",\r\n      image: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [shippingAddress, setShippingAddress] = useState([\r\n    {\r\n      first_Name: \"\",\r\n      last_Name: \"\",\r\n      street: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [card, setCard] = useState([\r\n    {\r\n      owner: \"\",\r\n      card_number: \"\",\r\n      bank_name: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [currentCard, setCurrentCard] = useState(\"none\");\r\n\r\n  const [currentShippingAddress, setCurrentShippingAddress] = useState(0);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"cash\");\r\n\r\n  var TotalPrice = 0;\r\n\r\n  var cardIcon = (type) => {\r\n    if (type === \"visa\") {\r\n      return <Img src={visa} w={12} h={12} />;\r\n    } else if (type === \"mastercard\") {\r\n      return <Img src={mastercard} w={12} h={12} />;\r\n    } else if (type === \"amex\") {\r\n      return <Img src={amex} w={12} h={12} />;\r\n    }\r\n  };\r\n\r\n  cartItems.forEach((element) => {\r\n    TotalPrice = TotalPrice + element.quantity * element.price;\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/items/cart`).then((response) => {\r\n      let data = response.data.items;\r\n      console.log(data);\r\n      setCartItems(data);\r\n    });\r\n    axios.get(`http://localhost:5000/customer/addresses`).then((response) => {\r\n      let data = response.data.addresses;\r\n      console.log(data);\r\n      setShippingAddress(data);\r\n    });\r\n    axios.get(`http://localhost:5000/customer/bankCards`).then((response) => {\r\n      let data = response.data.bankCards;\r\n      console.log(data);\r\n      setCard(data);\r\n    });\r\n  }, []);\r\n\r\n  const HandleRemove = (id) => {\r\n    axios.delete(`http://localhost:5000/items/cart/${id}`).then((response) => {\r\n      console.log(id);\r\n    });\r\n    axios.get(`http://localhost:5000/items/cart`).then((response) => {\r\n      let data = response.data.items;\r\n      console.log(data);\r\n      setCartItems(data);\r\n    });\r\n  };\r\n\r\n  const validateData = () => {\r\n    if (cartItems.length <= 0) {\r\n      toast_type1(false, \"Cart is empty\");\r\n      return false;\r\n    } else if (paymentMethod === \"card\" && currentCard === \"none\") {\r\n      toast_type1(false, \"Please select a card\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const HandlePlaceOrder = () => {\r\n    if (validateData()) {\r\n      axios\r\n        .post(`http://localhost:5000/orders/placeorder`, {\r\n          payment_method: paymentMethod,\r\n          order_address: shippingAddress[currentShippingAddress].address_id,\r\n          order_total: TotalPrice,\r\n          order_status: \"paid\",\r\n          tracking_number: \"123123213\",\r\n        })\r\n        .then((response) => {\r\n          toast_type1(true, \"Order placed successfully\");\r\n        })\r\n        .catch((err) =>{\r\n          toast_type1(false, \"Server error\");\r\n\r\n        })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Box borderWidth=\"1px\" borderColor=\"gray.300\" p=\"50px\" mb=\"200px\">\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          <Icon as={FiShoppingCart} w={12} h={12} /> Cart\r\n        </Heading>\r\n        <Table variant=\"simple\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>Product</Th>\r\n              <Th>Product name</Th>\r\n              <Th>Varient</Th>\r\n              <Th isNumeric>Quantity</Th>\r\n              <Th isNumeric>Price(each)</Th>\r\n              <Th isNumeric>Price</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {Array(cartItems.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <Tr>\r\n                  <Td>\r\n                    <Img src={arrayBufferToBinaryString(cartItems[i].image.data)} w=\"50px\" h=\"50px\" />\r\n                  </Td>\r\n                  <Td>{cartItems[i].item_name}</Td>\r\n                  <Td>{cartItems[i].variant}</Td>\r\n                  <Td isNumeric>{cartItems[i].quantity}</Td>\r\n                  <Td isNumeric>{cartItems[i].price}</Td>\r\n                  <Td isNumeric>\r\n                    {cartItems[i].price * cartItems[i].quantity}\r\n                  </Td>\r\n                  <Td>\r\n                    <Button\r\n                      colorScheme=\"red\"\r\n                      variant=\"outline\"\r\n                      size=\"xs\"\r\n                      onClick={() => HandleRemove(cartItems[i].variant_id)}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n          </Tbody>\r\n          <Tfoot>\r\n            <Tr>\r\n              <Th fontSize=\"3xl\">Total</Th>\r\n              <Th>-</Th>\r\n              <Th>-</Th>\r\n              <Th isNumeric>-</Th>\r\n              <Th isNumeric fontSize=\"2xl\">\r\n                Rs.{\" \"}\r\n              </Th>\r\n              <Th isNumeric fontSize=\"2xl\">\r\n                {TotalPrice}\r\n              </Th>\r\n            </Tr>\r\n          </Tfoot>\r\n        </Table>\r\n        <Divider />\r\n        <SimpleGrid columns={2} spacing={5} mb=\"20px\" mt=\"50px\">\r\n          <Box>\r\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\">\r\n              Shipping address\r\n            </Heading>\r\n\r\n            {shippingAddress.length !== 0 ? (\r\n              <>\r\n                <Box\r\n                  p=\"10px\"\r\n                  borderWidth=\"1px\"\r\n                  bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\r\n                >\r\n                  <Heading as=\"h5\" size=\"sm\">\r\n                    {shippingAddress[currentShippingAddress].first_Name}{\" \"}\r\n                    {shippingAddress[currentShippingAddress].last_Name}\r\n                  </Heading>\r\n\r\n                  <Text>{shippingAddress[currentShippingAddress].street}</Text>\r\n                  <Text>{shippingAddress[currentShippingAddress].city}</Text>\r\n                  <Text>{shippingAddress[currentShippingAddress].state}</Text>\r\n                  <Text>{shippingAddress[currentShippingAddress].zip}</Text>\r\n                </Box>\r\n                <Box ml=\"10px\" pt=\"10px\">\r\n                  <Menu>\r\n                    <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                      Address No. {currentShippingAddress + 1}\r\n                    </MenuButton>\r\n                    <MenuList>\r\n                      {Array(shippingAddress.length)\r\n                        .fill(\"\")\r\n                        .map((_, i) => (\r\n                          <MenuItem\r\n                            onClick={() => setCurrentShippingAddress(i)}\r\n                          >\r\n                            {\"Address No. \" +\r\n                              (i + 1) +\r\n                              \" - \" +\r\n                              shippingAddress[i].first_Name +\r\n                              \" \" +\r\n                              shippingAddress[i].last_Name +\r\n                              \", \" +\r\n                              shippingAddress[i].street +\r\n                              \", \" +\r\n                              shippingAddress[i].city +\r\n                              \", \" +\r\n                              shippingAddress[i].state +\r\n                              \", \" +\r\n                              shippingAddress[i].zip}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </MenuList>\r\n                  </Menu>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Text color=\"red.300\">Please add a shipping address</Text>\r\n            )}\r\n\r\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\" mt=\"50px\">\r\n              Payment method\r\n            </Heading>\r\n\r\n            {currentCard !== \"none\" && paymentMethod === 2 ? (\r\n              <Box\r\n                p=\"10px\"\r\n                borderWidth=\"1px\"\r\n                bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\r\n              >\r\n                <HStack>\r\n                  {card.length !== 0\r\n                    ? cardIcon(card[currentCard].card_type)\r\n                    : \"No cards added\"}\r\n                  <Box>\r\n                    <Text>\r\n                      {card.length !== 0 ? card[currentCard].owner : null}\r\n                    </Text>\r\n                    <Text>\r\n                      XXXX XXXX XXXX{\" \"}\r\n                      {card.length !== 0\r\n                        ? card[currentCard].card_number.substr(12, 15)\r\n                        : null}\r\n                    </Text>\r\n                  </Box>\r\n                </HStack>\r\n              </Box>\r\n            ) : null}\r\n\r\n            <HStack pt=\"10px\">\r\n              <Box pl=\"10px\">\r\n                <Menu>\r\n                  <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                    {paymentMethod === 0 ? <Text>Select method</Text> : null}\r\n                    {paymentMethod === \"cash\" ? (\r\n                      <Text>Cash on delivery</Text>\r\n                    ) : null}\r\n                    {paymentMethod === \"card\" ? <Text>Card</Text> : null}\r\n                  </MenuButton>\r\n                  <MenuList>\r\n                    <MenuItem\r\n                      icon={\r\n                        <Icon\r\n                          as={FaMoneyBillAlt}\r\n                          w={6}\r\n                          h={6}\r\n                          color=\"green.500\"\r\n                        />\r\n                      }\r\n                      onClick={() => setPaymentMethod(\"cash\")}\r\n                    >\r\n                      Cash on delivery\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      icon={\r\n                        <Icon\r\n                          as={FaRegCreditCard}\r\n                          w={6}\r\n                          h={6}\r\n                          color=\"cyan.500\"\r\n                        />\r\n                      }\r\n                      onClick={() => setPaymentMethod(\"card\")}\r\n                    >\r\n                      Card\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </Menu>\r\n              </Box>\r\n              <Box pl=\"10px\">\r\n                {paymentMethod === \"cash\" ? (\r\n                  <Icon as={FaMoneyBillAlt} w={8} h={8} color=\"green.500\" />\r\n                ) : null}\r\n                {paymentMethod === \"card\" ? (\r\n                  <Icon as={FaRegCreditCard} w={8} h={8} color=\"cyan.500\" />\r\n                ) : null}\r\n              </Box>\r\n            </HStack>\r\n\r\n            {paymentMethod === \"card\" ? (\r\n              <Box pl=\"10px\" pt=\"10px\">\r\n                {card.length !== 0 ? (\r\n                  <Box>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                        Select a card\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        {Array(card.length)\r\n                          .fill(\"\")\r\n                          .map((_, i) => (\r\n                            <MenuItem\r\n                              icon={cardIcon(\"visa\")}\r\n                              onClick={() => setCurrentCard(i)}\r\n                            >\r\n                              <Text>{card[i].owner}</Text>\r\n                              <Text>\r\n                                XXXX XXXX XXXX{\" \"}\r\n                                {card[i].card_number.substr(12, 15)}\r\n                              </Text>\r\n                            </MenuItem>\r\n                          ))}\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Box>\r\n                ) : (\r\n                  <Text>Please Add a card</Text>\r\n                )}\r\n              </Box>\r\n            ) : null}\r\n          </Box>\r\n          <Box mr=\"0px\" ml=\"auto\">\r\n            <Box w=\"400px\" borderWidth=\"1px\" p=\"10px\">\r\n              <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\r\n                Order Total\r\n              </Heading>\r\n              <Table>\r\n                <Tbody variant=\"simple\" size=\"md\">\r\n                  <Tr>\r\n                    <Td>Subtotal</Td>\r\n                    <Td isNumeric>{TotalPrice}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td>Shipping</Td>\r\n                    <Td isNumeric>Free</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td fontSize=\"2xl\">Total</Td>\r\n                    <Td isNumeric fontSize=\"2xl\">\r\n                      Rs. {TotalPrice}\r\n                    </Td>\r\n                  </Tr>\r\n                </Tbody>\r\n              </Table>\r\n              <Button\r\n                onClick={HandlePlaceOrder}\r\n                mt=\"20px\"\r\n                colorScheme=\"cyan\"\r\n                w=\"100%\"\r\n              >\r\n                Checkout\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </SimpleGrid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\CustomerDashSideBar.js",["956","957","958","959","960","961"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,\r\n    Text,\r\n    Divider,\r\n    Link,\r\n    Button,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\n\r\n\r\nconst CustomerDashSideBar = ({page}) => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const sidebarButton = {\r\n        width:'80%',   \r\n        marginTop:'7px',\r\n        marginBottom:'7px',\r\n        marginLeft:'10%',\r\n        marginRight:'10%'\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            width=\"auto\"\r\n            height={window.innerHeight-100}\r\n            // height=\"100%\"\r\n            overflow=\"hidden\"\r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            pt='5'  \r\n           \r\n                    \r\n        >                   \r\n                <Link href='/customerdashboard'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Dashboard </Button> </Link>     \r\n          \r\n                <Link href='/allorders'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> My Orders  </Button> </Link>     \r\n         \r\n                <Link href='/carddetails'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Card & Bank Details  </Button></Link>     \r\n            \r\n                <Link href='/shippingaddress'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Shipping Address </Button></Link>     \r\n         \r\n                <Link href='/changepersonaldet'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Change Account Details </Button></Link>   \r\n\r\n                <Link href='/customerstats'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Order Report </Button></Link>   \r\n           \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CustomerDashSideBar\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Deliverycard.js",["962","963","964","965","966","967","968","969","970","971"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n  Button\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Deliverycard(props) {\r\n  return (\r\n \r\n    <Box maxW=\"parent\"  _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }}  borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n       \r\n        <Box  fontWeight=\"bold\"><Text  color=\"red.600\"   fontSize=\"lg\">\r\n            <a href={`/orderview/${props.Order_ID}`}>{props.Order_ID}</a>\r\n          </Text></Box>\r\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\r\n            {props.F_name} {props.L_name}\r\n          </Text></Box>\r\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\r\n            {props.item_name} \r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{props.Quantity}</b>\r\n          </Text></Box>\r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\r\n        Variant: <b>{props.Variant_Name} </b>\r\n          </Text></Box>\r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {props.payment}\r\n          </Text>\r\n\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   >\r\n            <Box>\r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n           Paid On: {props.Date_paid}\r\n          </Text></Box> \r\n          <Box> <Text color=\"gray.600\" fontSize=\"lg\">\r\n           Shipped On: {props.Date_shipped}\r\n          </Text></Box> \r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Deliverycard;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ChangePersonalDetForm.js",["972"],"import {\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    Heading,\r\n    Input,\r\n    useToast\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport { useState,useEffect } from 'react';\r\nimport Axios from \"axios\";\r\n\r\nconst ChangePersonalDetForm = () => {\r\n    const [user_id,setUserID] = useState('')\r\n    const [first_name,setFirstName] = useState('')\r\n    const [last_name,setLastName] = useState('')\r\n    const [phone_number,setTelephone] = useState('')\r\n    const [email,setEmail] = useState('')\r\n   \r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/customer/user\")\r\n        .then((Response)=>{\r\n            setFirstName(Response.data.user[0].first_name);\r\n            setLastName(Response.data.user[0].last_name);\r\n            setTelephone(Response.data.user[0].phone_number);\r\n            setEmail(Response.data.user[0].email);\r\n            setUserID(Response.data.user[0].user_id);\r\n            \r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Error loading data\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          }); \r\n    }, [])\r\n\r\n    \r\n    const toast = useToast()\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(phone_number.length!==10){\r\n            alert(\"Invalid Mobile Number\")\r\n            return\r\n        }\r\n\r\n        Axios.put('http://localhost:5000/customer/user',{user_id,first_name,last_name,phone_number,email})\r\n        .then((Response)=>{\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Successfully Updated the Personal Data\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          });  \r\n    }\r\n\r\n    // console.log(firstname,lastname,telephone,Email)\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Heading size='lg' mb='5'>Change Personal Details</Heading>\r\n            <form onSubmit={onSubmit} >\r\n                <FormControl id=\"firstname\" mb='8'>\r\n                    <FormLabel>First Name</FormLabel>\r\n                                \r\n                        <Input   \r\n                            type='text'  \r\n                            placeholder='First Name'       \r\n                            defaultValue={first_name}\r\n                            name='firstname'\r\n                            onChange={(e)=>setFirstName(e.target.value)}\r\n                            required\r\n                        />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"lastname\" mb='8'>\r\n                    <FormLabel>Last Name</FormLabel>\r\n                                \r\n                        <Input \r\n                            type='text'  \r\n                            placeholder='Last Name'  \r\n                            defaultValue={last_name} \r\n                            name='lastname'\r\n                            onChange={(e)=>setLastName(e.target.value)}\r\n                            required\r\n                        />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"email\" mb='8'>\r\n                    <FormLabel>Email</FormLabel>\r\n                                \r\n                        <Input   \r\n                            type='email'\r\n                            placeholder='Email'  \r\n                            defaultValue={email} \r\n                            name='Email'\r\n                            onChange={(e)=>setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"tel\" mb='8'>\r\n                    <FormLabel>Telephone Number</FormLabel>\r\n                                \r\n                        <Input   \r\n                            type='number'\r\n                            placeholder='Telephone Number'       \r\n                            defaultValue={phone_number}\r\n                            name='telephone'\r\n                            onChange={(e)=>setTelephone(e.target.value)}\r\n                            required\r\n                        />\r\n                </FormControl>\r\n\r\n                <Input mt='2' mb='2'  type=\"submit\" value='Update Details' className='btn btn-block' bg=\"teal.600\" color='white'  />\r\n                            \r\n\r\n\r\n\r\n\r\n\r\n            </form>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangePersonalDetForm\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ChangePasswordForm.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShipmentCard.js",["973","974","975","976","977","978","979","980","981","982","983"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n  Button,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\n\r\nfunction ShipmentCard(props) {\r\n \r\n  \r\n \r\n \r\n  return (\r\n \r\n    <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box  fontWeight=\"bold\"><Text  color=\"red.600\"   fontSize=\"lg\">\r\n            <a href={`/orderview/${props.Order_ID}`}>{props.Order_ID}</a>\r\n          </Text></Box>\r\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\r\n            {props.F_name} {props.L_name}\r\n          </Text></Box>\r\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\r\n            {props.item_name} \r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{props.Quantity}</b>\r\n          </Text></Box>\r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\r\n        Variant: <b>{props.Variant_Name} </b>\r\n          </Text></Box>\r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {props.payment}\r\n          </Text>\r\n          <Button  mt=\"10px\" padding=\"5px\" horizontalAlign=\"true\" textColor=\"Black\" bg=\"blue.100\"  _hover={{ bg: \"yellow.300\" }} onClick={()=>props.MarkasShipped(props.Order_ID)} >Dispatch</Button>\r\n\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n            Paid On: {props.Date_paid}\r\n          </Text>\r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ShipmentCard;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SearchBar.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShipAddressses.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SearchBarHome.js",["984","985"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShopNow.js",["986","987","988","989","990"],"import {\r\n  Button,\r\n  ReactRouterLink,\r\n  Link,\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { GiShoppingCart } from \"react-icons/gi\";\r\n\r\nimport \"./ShopNow.css\";\r\n\r\nfunction ShopNow() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <Flex>\r\n        <video src=\"/videos/shop.mp4\" autoPlay loop muted />\r\n      </Flex>\r\n      <Heading as=\"h1\" size=\"4xl\">\r\n        LOTS OF FANCY ITEMS\r\n      </Heading>\r\n\r\n      <p>What are you waiting for?</p>\r\n      <div>\r\n        <a href=\"/categorypage\">\r\n          <Box\r\n            as=\"button\"\r\n            p={4}\r\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"15px\"\r\n            bgGradient={\r\n              colorMode === \"light\"\r\n                ? \"linear(to-r, black, blue.600)\"\r\n                : \"linear(to-r, white, blue.600)\"\r\n            }\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red, white)\",\r\n            }}\r\n          >\r\n            SHOP NOW\r\n          </Box>\r\n        </a>\r\n          \r\n        \r\n\r\n        <GiShoppingCart\r\n          className=\"cart-icon\"\r\n          size=\"100px\"\r\n          color={colorMode === \"light\" ? \"white\" : \"black\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShopNow;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\AddAddress.js",["991"],"import { useState } from 'react';\r\nimport{\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    useToast\r\n\r\n} from \"@chakra-ui/react\";\r\n\r\nconst AddAddress = ({addAddress,trigger}) => {\r\n    const [first_Name,setFirstName] = useState('')\r\n    const [last_Name,setLastName] = useState('')\r\n    const [street,setStreet] = useState('')\r\n    const [city,setCity] = useState('')\r\n    const [state,setState] = useState('')\r\n    const [zip,setZip] = useState('')\r\n\r\n    const toast = useToast()\r\n\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!first_Name || !last_Name || !street || !city || !state || !zip){\r\n            alert('Empty Field')\r\n            return\r\n        }\r\n        \r\n        addAddress({first_Name,last_Name,street,city,state,zip})\r\n\r\n        setFirstName('')\r\n        setLastName('')\r\n        setStreet('')\r\n        setCity('')\r\n        setState('')\r\n        setZip('')\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={onSubmit} >\r\n            <FormControl>\r\n                <FormLabel>First Name</FormLabel>\r\n                <Input type=\"text\" placeholder='Name' value={first_Name} onChange={(e)=>setFirstName(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Last Name</FormLabel>\r\n                <Input type=\"text\" placeholder='Telephone' value={last_Name} onChange={(e)=>setLastName(e.target.value)}  />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Street</FormLabel>\r\n                <Input type=\"text\" placeholder='Street' value={street} onChange={(e)=>setStreet(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>City</FormLabel>\r\n                <Input type=\"text\" placeholder='City' value={city} onChange={(e)=>setCity(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>State</FormLabel>\r\n                <Input type=\"text\" placeholder='State' value={state} onChange={(e)=>setState(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Zip</FormLabel>\r\n                <Input type=\"text\" placeholder='Zip' value={zip} onChange={(e)=>setZip(e.target.value)} />\r\n            </FormControl>\r\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Address' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddAddress\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomItems.js",["992","993","994","995"],"import { Box, Center, Icon, SimpleGrid, useColorMode } from \"@chakra-ui/react\";\r\nimport { CardGiftcard, CreditCardRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { GiTruck } from \"react-icons/gi\";\r\nimport {\r\n  MdAttachMoney,\r\n  MdCreditCard,\r\n  MdSecurity,\r\n  MdSettings,\r\n} from \"react-icons/md\";\r\nexport default function BottomItems() {\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    // Passing `columns={[2, null, 3]}` and `columns={{sm: 2, md: 3}}`\r\n    // will have the same effect.\r\n\r\n    <SimpleGrid columns={[2, null, 4]} spacing=\"0px\">\r\n      <Box\r\n        bg={colorMode === 'light' ? 'white' : '#101522' }\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <Icon as={MdAttachMoney} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center fontWeight=\"BOLD\">\r\n            Great Value\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          We offer competitive prices on our 1000 plus product range.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg={colorMode === 'light' ? 'white' : '#101522' }\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <Icon as={MdCreditCard} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center fontWeight=\"BOLD\">\r\n            Safe Payment\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          Pay with the world’s most popular and secure payment methods.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg={colorMode === 'light' ? 'white' : '#101522' }\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <Icon as={MdSecurity} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center fontWeight=\"BOLD\">\r\n            Shop with Confidence\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          Our Buyer Protection covers your purchase from click to delivery.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg={colorMode === 'light' ? 'white' : '#101522' }\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <GiTruck size=\"80px\" width=\"20px\" />\r\n        </Center>\r\n        <Box>\r\n          <Center fontWeight=\"BOLD\">\r\n            Country Wide Delivery\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n        With sites in 5 languages, we ship to over 200 countries & regions.\r\n        </Box>\r\n      </Box>\r\n    </SimpleGrid>\r\n  );\r\n}\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\Footer.js",["996","997","998","999","1000","1001","1002","1003","1004"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomFooter.js",["1005"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Slider\\SliderData.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Slider\\ImageSlider.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ReviewCountPreview.js",["1006","1007","1008","1009","1010","1011","1012","1013"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\CategorizedReviewPreview.js",["1014"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Card.js",["1015","1016"],"import React from 'react';\r\nimport {\r\n  Box,\r\n  Image,\r\n  Badge,\r\n  Grid,\r\n  GridItem,\r\n  Center,\r\n  Button,\r\n  Heading,\r\n} from '@chakra-ui/react';\r\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\r\nimport {  MdSend, MdZoomIn } from 'react-icons/md';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <Box\r\n      width=\"auto\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      overflow=\"hidden\"\r\n      p=\"10px\"\r\n      mb=\"10px\"\r\n      ml=\"20px\"\r\n      mr=\"20px\"\r\n    >\r\n      <Grid\r\n        h=\"auto\"\r\n        templateColumns=\"repeat(8, 1fr)\"\r\n        templateRows=\"repeat(3, 1fr)\"\r\n        gap={4}\r\n      >\r\n        <GridItem\r\n          colSpan={{ base: 8, md: 2 }}\r\n          rowSpan={{ base: 1, md: 3 }}\r\n          pt=\"12px\"\r\n        >\r\n          <Center>\r\n            <Image\r\n              src={props.imageUrl}\r\n              alt={props.imageAlt}\r\n              borderRadius=\"full\"\r\n              boxSize=\"190px\"\r\n            />\r\n          </Center>\r\n        </GridItem>\r\n\r\n        <GridItem colSpan={{ base: 8, md: 5 }} rowSpan={{ base: 1, md: 3 }}>\r\n          <Box p=\"6\">\r\n            <Box d=\"flex\" alignItems=\"baseline\">\r\n              <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                Secured\r\n              </Badge>\r\n            </Box>\r\n\r\n            <Box\r\n              mt=\"1\"\r\n              fontWeight=\"semibold\"\r\n              as=\"h4\"\r\n              lineHeight=\"tight\"\r\n            >\r\n              <Heading as=\"h5\" size=\"2xl\">\r\n                {props.type}\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n              <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n                {props.count}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem\r\n          colSpan={{ base: 8, md: 1 }}\r\n          rowSpan={{ base: 1, md: 3 }}\r\n          pt=\"50px\"\r\n        >\r\n          <a href={props.url}>\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"teal\"\r\n            variant=\"outline\"\r\n            size=\"lg\"\r\n            rightIcon={<MdSend/>}\r\n          >\r\n            Check\r\n          </Button>\r\n          </a>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Pricing\\Pricing.js",["1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport { AiFillThunderbolt } from \"react-icons/ai\";\r\nimport {\r\n  GiAllForOne,\r\n  GiArtificialIntelligence,\r\n  GiCartwheel,\r\n  GiCrystalBars,\r\n  GiDeliveryDrone,\r\n  GiNewBorn,\r\n  GiShoppingBag,\r\n  GiShoppingCart,\r\n} from \"react-icons/gi\";\r\nimport { GiCutDiamond, GiRock } from \"react-icons/gi\";\r\nimport { GiFloatingCrystal } from \"react-icons/gi\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport {\r\n  PricingSection,\r\n  PricingWrapper,\r\n  PricingHeading,\r\n  PricingContainer,\r\n  PricingCard,\r\n  PricingCardInfo,\r\n  PricingCardIcon,\r\n  PricingCardPlan,\r\n  PricingCardCost,\r\n  PricingCardLength,\r\n  PricingCardFeatures,\r\n  PricingCardFeature,\r\n} from \"./Pricing.elements\";\r\nimport { Box, Flex, Text, useColorMode } from \"@chakra-ui/react\";\r\n\r\nfunction Pricing(props) {\r\n  const { colorMode } = useColorMode();\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  function handleChange(x) {\r\n    setIsDark(x);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Update isDark according to the color\r\n    {\r\n      colorMode === \"light\" ? handleChange(false) : handleChange(true);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <IconContext.Provider value={{ color: \"#a9b3c1\", size: 64 }}>\r\n      {/**colorMode === \"light\" ? \"white\" : \"black\"**/}\r\n      <Flex\r\n        p=\"10px 0 160px\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        justifyContent=\"center\"\r\n        bg={colorMode === \"light\" ? \"white\" : \"#101522\"}\r\n      >\r\n        <PricingWrapper>\r\n          <PricingHeading>{props.heading} </PricingHeading>\r\n          <PricingContainer>\r\n            <PricingCard to=\"/categorypage\">\r\n              <PricingCardInfo>\r\n                <PricingCardIcon>\r\n                  <GiShoppingBag\r\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\r\n                  />\r\n                </PricingCardIcon>\r\n  \r\n                <PricingCardPlan>All Categories</PricingCardPlan>\r\n                <PricingCardCost>6+</PricingCardCost>\r\n                <PricingCardLength>categories</PricingCardLength>\r\n                <PricingCardFeatures>\r\n                  <PricingCardFeature>\r\n                    100+ New Users Everyday\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>\r\n                    Best Store in Sri Lanka\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>Trending Items</PricingCardFeature>\r\n                </PricingCardFeatures>\r\n                <Button primary>Check Out</Button>\r\n              </PricingCardInfo>\r\n            </PricingCard>\r\n\r\n            <PricingCard to=\"/categorypage\">\r\n              <PricingCardInfo>\r\n                <PricingCardIcon>\r\n                  <GiNewBorn\r\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\r\n                  />\r\n                </PricingCardIcon>\r\n                <PricingCardPlan>New Arrivals</PricingCardPlan>\r\n                <PricingCardCost>150+</PricingCardCost>\r\n                <PricingCardLength>arrivals per day</PricingCardLength>\r\n                <PricingCardFeatures>\r\n                  <PricingCardFeature>\r\n                    Trending shop in the country\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>Premium Shopping</PricingCardFeature>\r\n                  <PricingCardFeature>Buy and Feel It</PricingCardFeature>\r\n                </PricingCardFeatures>\r\n                <Button primary>Check Out</Button>\r\n              </PricingCardInfo>\r\n            </PricingCard>\r\n\r\n            <PricingCard to=\"/categorypage\">\r\n              <PricingCardInfo>\r\n                <PricingCardIcon>\r\n                  <GiCutDiamond\r\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\r\n                  />\r\n                </PricingCardIcon>\r\n                <PricingCardPlan>Orders</PricingCardPlan>\r\n                <PricingCardCost>500+</PricingCardCost>\r\n                <PricingCardLength>orders per day</PricingCardLength>\r\n                <PricingCardFeatures>\r\n                  <PricingCardFeature>\r\n                    You will experience the difference\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>\r\n                    Best Prices for Best Products\r\n                  </PricingCardFeature>\r\n                  <PricingCardFeature>24/7 Support</PricingCardFeature>\r\n                </PricingCardFeatures>\r\n                <Button primary>Check Out</Button>\r\n              </PricingCardInfo>\r\n            </PricingCard>\r\n          </PricingContainer>\r\n        </PricingWrapper>\r\n      </Flex>\r\n    </IconContext.Provider>\r\n  );\r\n}\r\nexport default Pricing;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Middle.js",["1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042"],"import React from \"react\";\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Text,\r\n  IconButton,\r\n  Tooltip,\r\n  Avatar,\r\n  Center,\r\n  Badge,\r\n  Progress,\r\n  GridItem,\r\n  Heading,\r\n  SimpleGrid,\r\n  useColorMode,\r\n  Grid,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { AvatarBadge } from \"@chakra-ui/react\";\r\nimport \"./Middle.css\";\r\nimport { FaDollarSign } from \"react-icons/fa\";\r\nimport { Money, MoneyOff } from \"@material-ui/icons\";\r\nimport { GiCartwheel, GiShoppingBag, GiShoppingCart } from \"react-icons/gi\";\r\nimport { FiUserPlus } from \"react-icons/fi\";\r\n\r\nfunction Middle(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dashboard\">\r\n        <Box\r\n          borderStyle=\"solid\"\r\n          borderColor=\"gray.800\"\r\n          boarderRadius=\"200px\"\r\n          mt=\"0px\"\r\n          pl=\"20px\"\r\n          pr=\"20px\"\r\n          pt=\"250px\"\r\n          h=\"460px\"\r\n          mb=\"20px\"\r\n          // bg=\"linear-gradient( blue -80%, white 100%);\"\r\n          \r\n        >\r\n          <Box\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.200\"\r\n            borderWidth=\"2px\"\r\n            p=\"10px\"\r\n            pt=\"30px\"\r\n            mt=\"-120px\"\r\n            borderRadius=\"20px\"\r\n            bg={colorMode === \"light\" ? \"white\" : \"cyan.900\"}\r\n          >\r\n            <Center mb=\"5px\" mt=\"10px\">\r\n              <Avatar bg=\"red.500\">\r\n                <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\r\n              </Avatar>\r\n            </Center>\r\n\r\n            <Box h=\"50px\" mb=\"70px\">\r\n              <Center>\r\n                <Text  style={{ textTransform: \"uppercase\" }}>\r\n                  {props.user.firstName} {props.user.lastName}\r\n                </Text>\r\n              </Center>\r\n              <Progress\r\n                colorScheme=\"green\"\r\n                size=\"xs\"\r\n                mr=\"45%\"\r\n                ml=\"45%\"\r\n                mb=\"5px\"\r\n                isIndeterminate\r\n              />\r\n              <Center mb=\"10px\">\r\n                <Badge variant=\"solid\" colorScheme=\"green\">\r\n                  Online\r\n                </Badge>\r\n              </Center>\r\n            </Box>\r\n\r\n            <GridItem>\r\n              <Box\r\n                bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                borderRadius=\"20px\"\r\n                color=\"white\"\r\n                m=\"20px\"\r\n                p=\"50px\"\r\n              >\r\n                <SimpleGrid columns={5} spacing={5} pt=\"10px\" pb=\"10px\">\r\n                  <Box textAlign=\"center\">\r\n                    <Heading\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                      as=\"h4\"\r\n                      size=\"lg\"\r\n                    >\r\n                      {\" \"}\r\n                      Rs. {props.overview.totalRevenue}\r\n                    </Heading>\r\n                    <Text\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                    >\r\n                      {\" \"}\r\n                      Total Revenue\r\n                    </Text>\r\n                  </Box>\r\n\r\n                  <Box textAlign=\"center\">\r\n                    <Heading\r\n                      as=\"h4\"\r\n                      size=\"lg\"\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                    >\r\n                      {\" \"}\r\n                     Rs. {props.overview.todayRevenue}\r\n                    </Heading>\r\n\r\n                    <Text\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                    >\r\n                      Today Revenue\r\n                    </Text>\r\n                  </Box>\r\n\r\n                  <Box textAlign=\"center\">\r\n                    <Heading\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                      as=\"h4\"\r\n                      size=\"lg\"\r\n                    >\r\n                      {\" \"}\r\n                      {props.overview.awaitingShipment}\r\n                    </Heading>\r\n                    <Text\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                    >\r\n                      Awaiting for shipment\r\n                    </Text>\r\n                  </Box>\r\n                  <Box textAlign=\"center\">\r\n                    <Heading\r\n                      as=\"h4\"\r\n                      size=\"lg\"\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                    >\r\n                      {\" \"}\r\n                      {props.overview.awaitingDelivery}\r\n                    </Heading>\r\n                    <Text\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                    >\r\n                      Awaiting for delivery\r\n                    </Text>\r\n                  </Box>\r\n                  <Box textAlign=\"center\">\r\n                    <Heading\r\n                      as=\"h4\"\r\n                      size=\"lg\"\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                    >\r\n                      {\" \"}\r\n                      {props.overview.userCount}\r\n                    </Heading>\r\n\r\n                    <Text\r\n                      textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                    >\r\n                      Today New Users\r\n                    </Text>\r\n                  </Box>\r\n                </SimpleGrid>\r\n              </Box>\r\n            </GridItem>\r\n           \r\n          </Box>\r\n        </Box>\r\n\r\n       \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Middle;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\LogIn.js",["1043","1044","1045"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./LogIn.css\";\r\nimport FormLogIn from \"./FormLogIn\";\r\nimport FormSuccess from \"./FormSuccess\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction LogIn(props) {\r\n\r\n  \r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  return (\r\n    <>\r\n      {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n    background-size: cover !important; <Redirect to='/' />*/}\r\n      <div className=\"login-container\">\r\n        <div className=\"login-content-left\">\r\n          <img className=\"login-img\" src=\"img/svg-2.svg\" alt=\"Security\" />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormLogIn submitForm={submitForm} setSignInClicked={props.setSignInClicked}/>\r\n        ) : (\r\n          <Redirect to='/' />\r\n        )}\r\n        {/* <FormLogIn submitForm={submitForm} /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\API_Service\\checkLogin.js",["1046","1047"],"import Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nfunction checkAuthorization (callback) {\r\n    Axios.get(\"http://localhost:5000/customer/login\")\r\n    .then((response) => {\r\n      if(response.data.LoggedIn === true) {\r\n        callback(response.data.LoggedIn);\r\n      }else{\r\n        callback(false)\r\n      }\r\n      });\r\n} \r\n\r\nfunction checkAuthentication (callback) {\r\n        Axios.get(\"http://localhost:5000/customer/isUserAuth\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\")},\r\n        }).then(response => {\r\n          if(response.status === 200) {\r\n              callback(true)\r\n          } else {\r\n              callback(false);\r\n          }\r\n        });\r\n}\r\nfunction isAuthenticated(){\r\n  Axios.get(\"http://localhost:5000/customer/login\")\r\n    .then((response) => {\r\n      if(response.data.LoggedIn == true) {\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n      });\r\n}\r\n\r\nfunction clearCookie(){\r\n  Cookies.remove(\"user\");\r\n}\r\nfunction isLoggedIn(){\r\n  if(Cookies.get(\"user\") === undefined) {\r\n    return false;\r\n  }\r\n  return true;\r\n\r\n}\r\nfunction getData(){\r\n  if(Cookies.get(\"user\") === undefined) {\r\n    return null;\r\n  }\r\n  return JSON.parse(Cookies.get(\"user\"))\r\n}\r\n// function checkLoggedIn(callback) {\r\n//   const [isAuthorized, setIsAuthorized] = useState(false);\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n//   const [LoggedIn, setLoggedIn] = useState(false);\r\n//   checkAuthorization(response => {\r\n//     setIsAuthorized(response);\r\n//   })\r\n//   checkAuthentication(response => {\r\n//     setIsAuthenticated(response);\r\n//   })\r\n\r\n//   if (isAuthorized === isAuthenticated) {\r\n//     setLoggedIn(true);\r\n//   } else {\r\n//     setLoggedIn(false);\r\n//   }\r\n//   callback(LoggedIn);\r\n// }\r\n\r\nexport default {\r\n  checkAuthorization,\r\n  checkAuthentication,\r\n  isLoggedIn,\r\n  isAuthenticated,\r\n  getData,\r\n  clearCookie\r\n}","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ProductCard.js",["1048","1049"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Badge,\r\n  Link,\r\n  ReactRouterLink\r\n} from \"@chakra-ui/react\";\r\nimport { arrayBufferToBinaryString } from \"blob-util\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nfunction ProductCard(props) {\r\n  return (\r\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\r\n      <Image\r\n        src={arrayBufferToBinaryString(props.imageUrl ? props.imageUrl.data : '')}\r\n        alt=\"product image\"\r\n        w=\"200px\"\r\n        h=\"200px\"\r\n      />\r\n      <Box p=\"6\">\r\n        <Badge\r\n          borderRadius=\"full\"\r\n          px=\"2\"\r\n          colorScheme=\"yellow\"\r\n          variant=\"outline\"\r\n          fontSize=\"9px\"\r\n        >\r\n          {props.category}\r\n        </Badge>\r\n        <Box\r\n          fontWeight=\"semibold\"\r\n          as=\"h4\"\r\n          lineHeight=\"tight\"\r\n          fontSize=\"xl\"\r\n          isTruncated\r\n        >\r\n          <Link href={`/productpage/${props.item_id}`}>{props.title}</Link>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Text color=\"gray.600\" fontSize=\"3xl\">\r\n            Rs. {props.price}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\r\n          <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\r\n          >\r\n            {props.status}\r\n          </Badge>\r\n          <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n            ml=\"2\"\r\n          >\r\n            {props.orders} Orders\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n          {Array(5)\r\n            .fill(\"\")\r\n            .map((_, i) => (\r\n              <StarIcon\r\n                key={i}\r\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\r\n              />\r\n            ))}\r\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n            {props.reviews} reviews\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ErrorModel.js",[],["1050","1051"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\OrderTiles.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\BankCards.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\Register.js",["1052","1053"],"import React, { useState } from 'react';\r\nimport './Register.css';\r\nimport FormSignup from './FormSignup';\r\nimport FormSuccess from './FormSuccess';\r\nimport Axios from \"axios\";\r\nimport useForm from \"./FormSignup\";\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n    background-size: cover !important; <Redirect to='/' />*/}\r\n      <div className='form-container'>\r\n\r\n        <div className='form-content-left'>\r\n          <img className='form-img' src='img/svg-2.svg' alt='Security' />\r\n        </div>\r\n        {!isSubmitted ? (\r\n          <FormSignup submitForm={submitForm} />\r\n        ) : (\r\n          \r\n          <FormSuccess />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShipAddress.js",["1054","1055","1056","1057","1058"],"import {React, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    GridItem,\r\n    useColorMode,\r\n    useDisclosure,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    ButtonGroup,\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport { ImUser, ImLocation } from \"react-icons/im\";\r\n\r\n\r\nconst ShipAddress = ({address,deleteAddress,updateAddress}) => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    return(\r\n        <GridItem>\r\n        <Box  \r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            borderRadius='md'\r\n            border='1px'\r\n            borderColor='cyan.600'\r\n            p='6'\r\n            m='4'\r\n            pb='3'\r\n           \r\n            >\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                    <ImUser />\r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"lg\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        { address.first_Name +\" \" +  address.last_Name }\r\n                    </Box>\r\n                </Box> \r\n                \r\n                <Box d=\"flex\" alignItems=\"baseline\" mt='2' mb='5'>\r\n                \r\n                    <ImLocation m='3'/>\r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        <Box>{ address.street }</Box>\r\n                        <Box>{ address.city }</Box>\r\n                        <Box>{ address.state }</Box>\r\n                        <Box>{ address.zip }</Box>\r\n                    </Box>\r\n                </Box> \r\n               \r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n\r\n                    {/* Delete Address */}\r\n                \r\n                    <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader fontWeight=\"semibold\">Delete Shipping Address</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody>\r\n                            Are you sure you want to delete the shipping address?\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteAddress(address.address_id)}}>Delete</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                   \r\n                </Box>\r\n\r\n        </Box>\r\n        </GridItem>\r\n    )\r\n}\r\n\r\nexport default ShipAddress\r\n\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Replys.js",["1059"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\FormLogIn.js",["1060","1061","1062","1063","1064"],"import React, { useEffect } from \"react\";\r\nimport validate from \"./validateInfo\";\r\nimport useForm from \"./useForm\";\r\nimport \"./LogIn.css\";\r\n// Promise based HTTP client for the node.js\r\nimport Axios from \"axios\";\r\nimport { Badge, Box, Button, Center } from \"@chakra-ui/react\";\r\n\r\nfunction FormLogIn(props) {\r\n  const { handleChange, handleSubmit, values, errors, backEndErrors } = useForm(\r\n    props.submitForm,\r\n    validate,\r\n    props.setSignInClicked\r\n  );\r\n\r\n  return (\r\n    <div className=\"login-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\r\n        <h1>\r\n          Welcome!!!\r\n          <br />\r\n          Sign in to continue shopping!\r\n          <br />\r\n        </h1>\r\n        {backEndErrors == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box w=\"80%\" h=\"40px\" bg=\"red.500\" borderRadius=\"5px\">\r\n            <Center>\r\n              <Badge variant=\"solid\" m=\"2%\" colorScheme=\"red\">\r\n                {backEndErrors}\r\n              </Badge>\r\n            </Center>\r\n          </Box>\r\n        )}\r\n        <div className=\"login-inputs\">\r\n          <label className=\"login-label\">Email</label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"login-inputs\">\r\n          <label className=\"login-label\">Password</label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        {backEndErrors == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box h='10%' mt='20px'>\r\n            <Badge variant=\"outline\" colorScheme=\"red\">\r\n              Sign In Failed\r\n            </Badge>\r\n          </Box>\r\n        )}\r\n        <button className=\"login-input-btn\" type=\"submit\">\r\n          Sign In\r\n        </button>\r\n        <span className=\"login-input-login\">\r\n          Don't have an account? Sign up <a href=\"signup\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormLogIn;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\FormSuccess.js",["1065","1066"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomFooter.elements.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Pricing\\Pricing.elements.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\Footer.elements.js",["1067"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\globalStyles.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\AddBankCard.js",["1068"],"import { useState } from 'react';\r\nimport{\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Select\r\n} from \"@chakra-ui/react\";\r\n\r\nconst AddBankCard = ({addBankCard,trigger}) => {\r\n    const [card_number,setCardNumber] = useState('')\r\n    const [owner,setOwner] = useState('')\r\n    const [cvv,setCvv] = useState('')\r\n    const [exp_date,setExpDate] = useState('')\r\n    const [bank_name,setBankName] = useState('')\r\n    const [card_type,setType] = useState('')\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        console.log(card_type)\r\n\r\n        if(!card_number || !owner || !cvv || !exp_date || !bank_name || !card_type){\r\n            alert('Empty Field')\r\n            return\r\n        }\r\n\r\n        if(card_number.toString().length!==16){\r\n            alert('Invalid Card Number')\r\n            return\r\n        }\r\n    \r\n        var givenDate = new Date(exp_date);\r\n        var today = new Date();\r\n        if (givenDate.getFullYear() < today.getFullYear()) {\r\n            alert('card is expired')\r\n            return\r\n        }\r\n        else if (givenDate.getFullYear() == today.getFullYear()){\r\n            if(givenDate.getMonth() < today.getMonth()){\r\n                alert('card is expired')\r\n                return\r\n            }\r\n        }\r\n       \r\n        addBankCard({card_number,owner,cvv,exp_date,bank_name,card_type})\r\n\r\n        setCardNumber('')\r\n        setOwner('')\r\n        setCvv('')\r\n        setExpDate('')\r\n        setBankName('')\r\n        setType('')\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={onSubmit} >\r\n            <FormControl>\r\n                <FormLabel>Bank Name</FormLabel>\r\n                <Input type=\"text\" placeholder='Bank Name' value={bank_name} onChange={(e)=>setBankName(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Card Number</FormLabel>\r\n                <Input type=\"number\" placeholder='Card Number' value={card_number} onChange={(e)=>setCardNumber(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Owner</FormLabel>\r\n                <Input type=\"text\" placeholder='Owner' value={owner} onChange={(e)=>setOwner(e.target.value)}  />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>CVV</FormLabel>\r\n                <Input type=\"number\" placeholder='CVV' value={cvv} onChange={(e)=>setCvv(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Card Type</FormLabel>\r\n                <Select placeholder=\"Select Card Type\" onChange={(e)=>setType(e.target.value)}>\r\n                    <option value='visa'>visa</option>\r\n                    <option value='mastercard'>mastercard</option>\r\n                    <option value='amex'>amex</option>\r\n                 </Select>\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Exp Date</FormLabel>\r\n                <Input type=\"date\" placeholder='Exp Date' value={exp_date} onChange={(e)=>setExpDate(e.target.value)} />\r\n            </FormControl>\r\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Card Details' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddBankCard\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\OrderTile.js",["1069","1070","1071","1072","1073","1074"],"\r\nimport {\r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    useColorMode,\r\n    SimpleGrid,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    HStack,\r\n    Badge,\r\n    Button,\r\n    VStack,\r\n    Link,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverArrow,\r\n    PopoverBody,\r\n    PopoverCloseButton,\r\n    PopoverFooter,\r\n    ButtonGroup\r\n  } from \"@chakra-ui/react\";\r\n\r\n  import OrderItem from \"./OrderItemTile\";\r\n\r\nconst OrderTile = ({order,cancelOrder,confirmOrder}) => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n// try with normal functions\r\n    const StatusBadge = ({status})=>{\r\n        if(status==='shipped'){\r\n            return (<Badge colorScheme=\"green\">Shipped</Badge>)\r\n        }\r\n        else if (status==='paid'){\r\n            return (<Badge colorScheme=\"yellow\">Paid</Badge>)\r\n        }\r\n        else if (status==='cancelled'){\r\n            return (<Badge colorScheme=\"red\">Cancelled</Badge>)\r\n        }\r\n        else if (status==='delivered'){\r\n            return (<Badge colorScheme=\"green\">Delivered</Badge>)\r\n        }\r\n        else{\r\n            return <div></div>\r\n        }\r\n    }  \r\n    \r\n    // calculate the total price of the order\r\n    const totPrice = (list) =>{\r\n        console.log(\"Price\",list)\r\n        var price = 0\r\n        var list = list.substring(1,list.length-1)\r\n        list = list.split(\",\")\r\n        for(var i=0; i<list.length;i++){\r\n            price+=parseFloat(list[i])\r\n        }\r\n        return price.toFixed(2)\r\n    }\r\n\r\n\r\n\r\n    const OrderActions = ({status})=>{\r\n        if(status=='shipped'){\r\n            return (<VStack>\r\n                <Link href={\"https://parcelsapp.com/en/tracking/\"+order.Track} isExternal><Button colorScheme='teal' size='xs'>Track Order</Button></Link>\r\n                <Button colorScheme='teal' size='xs' onClick={()=>{confirmOrder(order.order_id)}}>Confirm Received</Button>\r\n                \r\n            </VStack>)\r\n        }\r\n        else if (status=='paid'){\r\n            return (\r\n            <Box>\r\n                   \r\n                <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme='teal' size='xs'  >Cancel Order</Button>\r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader textAlign='left' fontWeight=\"semibold\">Cancel the order</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody textAlign='center'>\r\n                            Are you really want to cancel the order\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{cancelOrder(order.order_id)}}>Cancel Order</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                  \r\n                </Box>\r\n            )\r\n        }\r\n        else{\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n\r\n    const mapOrderItems = (order)=>{\r\n        var finalList = []\r\n        // console.log(\"order\",order)\r\n        var itemIDList= order.Item_ID\r\n        // console.log(\"item ids\",itemIDList)\r\n        itemIDList = itemIDList.substring(1,itemIDList.length-1)\r\n        itemIDList = itemIDList.split(\",\")\r\n\r\n        var nameList = order.Name\r\n        nameList = nameList.substring(1,nameList.length-1)\r\n        nameList = nameList.split(\",\") \r\n\r\n        var imageList = order.Image\r\n        imageList = imageList.substring(1,imageList.length-1)\r\n        imageList = imageList.split(\",\")\r\n\r\n\r\n        for(var i=0;i<nameList.length;i++){\r\n            var a = {\r\n                \"ID\":i,\r\n                \"Item_ID\":itemIDList[i].replace(/\\s/g, ''),    // to get the item id for feedbacks\r\n                \"Name\":nameList[i].replace(/\\s/g, ''),\r\n                \"Image\":imageList[i].replace(/\\s/g, '')\r\n            }\r\n            finalList.push(a);\r\n        }\r\n        // console.log(\"final\",finalList)\r\n        return finalList;\r\n    }\r\n\r\n\r\n\r\n    var orders = mapOrderItems(order);\r\n\r\n\r\n    const OrderItemTiles = ({orders}) => {\r\n        return (\r\n            <>\r\n               {    \r\n                    \r\n                   orders.map((ord)=>(\r\n                       <OrderItem key={ord.ID} Item_ID={ord.Item_ID}  Name={ord.Name} Image={ord.Image} Order_ID={order.order_id}> </OrderItem>\r\n                       )\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  m='5' color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\r\n            <Grid>\r\n                <GridItem p='2' bg={colorMode === \"light\" ? \"teal.500\" : \"teal.50\"} color={colorMode === \"light\" ? \"teal.50\" : \"teal.500\"} >\r\n                    <SimpleGrid columns={3} textAlign='center'>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order ID</Heading>\r\n                            <Text>{order.order_id}</Text>\r\n                        </Box>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order Date</Heading>\r\n                            <Text>{order.ordered_date.substring(0, 10)}</Text>\r\n                        </Box>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order Amount</Heading>\r\n                            <Text>{totPrice(order.Price)}</Text>\r\n                        </Box>\r\n                    </SimpleGrid>\r\n\r\n                </GridItem>\r\n                <GridItem p='2'  color={colorMode === \"light\" ? \"teal.800\" : \"teal.50\"} >\r\n\r\n                \r\n                    <Grid templateColumns=\"repeat(3, 1fr)\">\r\n                        <GridItem>\r\n                            <SimpleGrid>\r\n\r\n                            <OrderItemTiles  orders={orders} />\r\n                            \r\n                            </SimpleGrid>\r\n                        </GridItem>\r\n                        <GridItem>\r\n                        <Box textAlign='center'>\r\n                           <StatusBadge  status={order.order_status}/>\r\n                        </Box>\r\n                        </GridItem>\r\n                        <GridItem>\r\n                        <Box textAlign='center'>\r\n                           \r\n                           <OrderActions status={order.order_status}/> \r\n                         \r\n                      </Box>\r\n                        </GridItem>\r\n                    </Grid>\r\n\r\n                </GridItem>\r\n             \r\n\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\n \r\nexport default OrderTile\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\BankCard.js",["1075","1076","1077","1078","1079","1080","1081","1082"],"import {React, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    GridItem,\r\n    useColorMode,\r\n    useDisclosure,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    ButtonGroup,\r\n    Heading,\r\n    HStack,\r\n    Spacer,\r\n    Image\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\r\n\r\n\r\nconst BankCard = ({bankcard,deleteBankCard}) => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    return(\r\n        <GridItem>\r\n        <Box  \r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            borderRadius='md'\r\n            border='1px'\r\n            borderColor='cyan.600'\r\n            p='6'\r\n            m='4'\r\n            pb='3'\r\n           \r\n            >\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                    \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"lg\"       \r\n                        ml=\"2\"\r\n                    >\r\n                       <Heading size='lg'> x x x x x x x x {bankcard.card_number.toString().substr(12,15)} </Heading>\r\n                    </Box>\r\n                </Box> \r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                \r\n                   \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                       \r\n                    >\r\n                        { bankcard.owner }\r\n                    </Box>\r\n                </Box> \r\n               \r\n               <HStack mb='4'>\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        {bankcard.exp_date}\r\n                    </Box>\r\n                </Box> \r\n                <Spacer />\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                <Image\r\n                    width='70px'\r\n                    src={`../${bankcard.card_type}.png`}\r\n                    />\r\n                </Box> \r\n                </HStack>\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n\r\n                 \r\n                    {/* Delete Address */}\r\n                \r\n                    <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader fontWeight=\"semibold\">Delete Card Details</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody>\r\n                            Are you sure you want to delete card details?\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteBankCard(bankcard.card_id)}}>Delete</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                   \r\n                </Box>\r\n\r\n        </Box>\r\n        </GridItem>\r\n    )\r\n}\r\n\r\nexport default BankCard\r\n\r\n\r\n\r\n    ","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\useForm.js",["1083","1084"],"import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\n//custom hook\r\n\r\nconst useForm = (callback, validate, setSignInClicked) => {\r\n  Axios.defaults.withCredentials = true;\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [backEndErrors, setBackEndErrors] = useState(\"\");\r\n\r\n  const email = values.email;\r\n  const password = values.password;\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    if (Object.keys(errors).length === 0) {\r\n      Axios.post(\"http://localhost:5000/customer/login\", {\r\n        email: email,\r\n        password: password,\r\n      }).then((response) => {\r\n        if (!response.data.auth) {\r\n          setBackEndErrors(response.data.message);\r\n        } else {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          setSignInClicked(true);\r\n          setIsSubmitting(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n     }\r\n  }, [errors]);\r\n\r\n  return { handleChange, handleSubmit, values, errors, backEndErrors };\r\n};\r\n\r\nexport default useForm;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\validateInfo.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\FormSuccess.js",["1085","1086"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\FormSignup.js",["1087","1088"],"import React from \"react\";\r\nimport validate from \"./validateInfo\";\r\nimport useForm from \"./useForm\";\r\nimport \"./Register.css\";\r\n// Promise based HTTP client for the node.js\r\nimport Axios from \"axios\";\r\nimport { Badge, Box, Center } from \"@chakra-ui/react\";\r\n\r\nconst FormSignup = ({ submitForm }) => {\r\n\r\n  const { handleChange, handleSubmit, values, errors, backEndErrors } = useForm(\r\n    submitForm,\r\n    validate\r\n  );\r\n  \r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\r\n        <h1>\r\n          Get started and have a premium shopping experience!\r\n          <br />\r\n          Create your account by filling out the information below.\r\n        </h1>\r\n        {backEndErrors.error === \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box w=\"80%\" h=\"40px\" bg=\"red.500\" borderRadius=\"5px\">\r\n            <Center>\r\n              <Badge variant=\"solid\" m=\"2%\" colorScheme=\"red\">\r\n                {backEndErrors.error}\r\n              </Badge>\r\n            </Center>\r\n          </Box>\r\n        )}\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">First Name</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            placeholder=\"Enter your first name\"\r\n            value={values.firstname}\r\n            onChange={handleChange}\r\n          />\r\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\r\n          {errors.firstname && <p>{errors.firstname}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Last Name</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder=\"Enter your last name\"\r\n            value={values.lastname}\r\n            onChange={handleChange}\r\n          />\r\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\r\n          {errors.lastname && <p>{errors.lastname}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Phone Number</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"tel\"\r\n            name=\"phonenumber\"\r\n            placeholder=\"Enter your phone number\"\r\n            value={values.phonenumber}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.phonenumber && <p>{errors.phonenumber}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Email</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label className=\"form-label\">Confirm Password</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            placeholder=\"Confirm your password\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        {backEndErrors.error == \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Box  mt='20px'>\r\n            <Badge variant=\"outline\" colorScheme=\"red\">\r\n              Sign Up Failed\r\n            </Badge>\r\n          </Box>\r\n        )}\r\n        <button className=\"form-input-btn\" type=\"submit\" >\r\n          Sign up\r\n        </button>\r\n        <span className=\"form-input-login\">\r\n          Already have an account? Login <a href=\"signin\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignup;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\useForm.js",["1089"],"import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n//custom hook\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    phonenumber: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [backEndErrors, setBackEndErrors] = useState({registered: false, error: \"\"});\r\n  const firstName = values.firstname;\r\n  const lastName = values.lastname;\r\n  const email = values.email;\r\n  const phoneNumber = values.phonenumber;\r\n  const password = values.password;\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      Axios.post(\"http://localhost:5000/customer/register\", {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        phoneNumber: phoneNumber,\r\n        password: password,\r\n      }).then((response) => {\r\n        if (!response.data.registered) {\r\n          console.log(response.data.message);\r\n          setBackEndErrors({registered: false, error: response.data.message});\r\n        } else {\r\n          setBackEndErrors({registered: true, error: response.data.message});\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //If there are no errors and submitted it wil call submitForm function(callback())\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      if (!!backEndErrors.registered) {\r\n        callback();\r\n      }\r\n    }\r\n  }, [errors, backEndErrors.registered]);\r\n\r\n  return { handleChange, handleSubmit, values, errors, backEndErrors };\r\n};\r\n\r\nexport default useForm;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\validateInfo.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\OrderItemTile.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\SellerAllOrders.js",["1090","1091"],"import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n  } from \"@chakra-ui/react\";\r\n  import React, { useState,useEffect } from \"react\";\r\n  import axios from \"axios\";\r\n  import Deliverycard from \"../components/AllOrdersCard\";\r\n  import SearchBar from \"../components/SearchBar\";\r\n\r\n  \r\n  function AwaitingDelivery() {\r\n    \r\n    var [orderlist, setorderlist] = useState([{}])\r\n  \r\n\r\n\r\n  \r\n    useEffect(() => {\r\n      axios\r\n        .get(`http://localhost:5000/orders/`)\r\n        .then((response) => {\r\n          console.log(response.data.orders)\r\n          setorderlist(response.data.orders)\r\n        });\r\n  \r\n    }, []);\r\n   \r\n  \r\n    const searchBarText = `Search in All Orders`;\r\n    const HandleChange = (event) => {\r\n        var value = event.target.value;\r\n        axios\r\n        .post(\"http://localhost:5000/orders\",{\r\n          \"order_id\":`${value}`\r\n        })\r\n        .then((response) => {\r\n          let data = response.data.orders;\r\n          setorderlist(data);\r\n        });\r\n      \r\n      };\r\n\r\n  \r\n    return (\r\n      <Box\r\n        pt=\"150px\"\r\n        pl={{ base: \"10px\", sm: \"100px\" }}\r\n        pr={{ base: \"10px\", sm: \"100px\" }}\r\n      >\r\n        <Center mb='10px'>\r\n          <SearchBar onChange={HandleChange} text={searchBarText} />\r\n        </Center>\r\n        <Grid\r\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\r\n        >\r\n          <GridItem  bg=\"gray.300\" p=\"10px\">\r\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\r\n              All Orders\r\n            </Heading>\r\n          </GridItem>\r\n\r\n          <GridItem \r\n          \r\n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\r\n            \r\n            \r\n              {Array(orderlist.length)\r\n                .fill(\"\")\r\n                .map((_, i) => (\r\n                  <Deliverycard \r\n                    \r\n\r\n                    Order_ID={orderlist[i].order_id}\r\n                    Variant_Name= {orderlist[i].variant_name}\r\n                    imageUrl={orderlist[i].image}\r\n                    item_name= {orderlist[i].item_name}\r\n                    payment= {orderlist[i].price*orderlist[i].quantity}\r\n                    Date_paid={orderlist[i].ordered_date}\r\n                    Date_shipped={orderlist[i].ordered_date}\r\n                    Quantity={orderlist[i].quantity}\r\n                    F_name= {orderlist[i].first_name}\r\n                    L_name= {orderlist[i].last_name}\r\n                    Order_status={orderlist[i].order_status}\r\n                    \r\n                  />\r\n                ))}\r\n           \r\n          </GridItem>\r\n          \r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export default AwaitingDelivery;\r\n  ","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\AllOrdersCard.js",["1092","1093","1094","1095","1096","1097","1098","1099","1100","1101"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\n\r\nfunction ShipmentCard(props) {\r\n  return (\r\n \r\n    <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\r\n        < HStack>  \r\n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \r\n        \r\n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box  fontWeight=\"bold\"><Text  color=\"red.600\"   fontSize=\"lg\">\r\n            <a href={`/orderview/${props.Order_ID}`}>{props.Order_ID}</a>\r\n          </Text></Box>\r\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\r\n            {props.F_name} {props.L_name}\r\n          </Text></Box>\r\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\r\n            {props.item_name} \r\n          </Text></Box>\r\n        </Box>\r\n        \r\n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\r\n        Quantity: <b>{props.Quantity}</b>\r\n          </Text></Box>\r\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\r\n        Variant: <b>{props.Variant_Name} </b>\r\n          </Text></Box>\r\n        </Box>\r\n       \r\n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \r\n        <Text color=\"blue.700\" fontSize=\"2lg\">\r\n            Rs. {props.payment}\r\n          </Text>\r\n\r\n        </Box>\r\n\r\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \r\n        <Text color=\"gray.600\" fontSize=\"lg\">\r\n            Paid On: {props.Date_paid}\r\n          </Text>\r\n        <Box> <Text color=\"gray.600\" fontSize=\"lg\">\r\n        {props.Order_status===\"shipped\" ?'Shipped On :' + props.Date_shipped: 'Not Yet Shipped'+\" | Status :\" +props.Order_status}\r\n        </Text></Box> \r\n        </Box>\r\n        </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ShipmentCard;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\CustomerStats.js",["1102","1103","1104","1105","1106"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,\r\n    Flex,\r\n    Spacer,\r\n    useColorMode,\r\n    useToast,\r\n    FormControl,\r\n    Input,\r\n    Table,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst ReportItems  = ({stats})=>{\r\n    return (\r\n        <>\r\n           {    \r\n               stats.map((stat)=>(\r\n                   <ReportItem key={stat.order_id} stat={stat}>  </ReportItem>\r\n                   )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ReportItem = ({stat}) =>{\r\n    return(\r\n        <Tbody>                            \r\n            <Tr>\r\n                <Td>{stat.order_id}</Td>\r\n                <Td>{stat.description.substring(1,stat.description.length-1)}</Td>\r\n                <Td>{stat.ordered_date}</Td>\r\n                <Td>{stat.nb_of_items}</Td>\r\n                <Td>{stat.price}</Td>\r\n            </Tr>                             \r\n        </Tbody>   \r\n    )\r\n}\r\n\r\n\r\nconst CustomerStats = () => {\r\n    const toast = useToast()\r\n  \r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const [startDate, setStartDate] = useState([]);\r\n    const [endDate,setEndDate]  = useState([]);\r\n    const [stats, setStats] = useState([]);\r\n    const [total,setTotal] = useState([]);\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(startDate.length===0 || endDate.length ===0){\r\n            alert('Enter time period')\r\n            return\r\n        }\r\n\r\n        var formStartDate = startDate.replace(/-/g, \"/\");\r\n        var formEndDate = endDate.replace(/-/g, \"/\");\r\n\r\n        Axios.post(\"http://localhost:5000/customer/generatereport\",{start_date:formStartDate, end_date:formEndDate})\r\n        .then((Response)=>{\r\n            \r\n            // console.log(\"came\",Response.data.stats)\r\n           setStats(Response.data.stats)\r\n\r\n           var sum = 0\r\n           for(var i=0;i<Response.data.stats.length;i++){\r\n               sum=sum+parseFloat(Response.data.stats[i].price)\r\n           }\r\n           \r\n           setTotal(sum)\r\n\r\n\r\n           if(Response.data.stats.length===0){\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"No any orders in this time period\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n           }\r\n           else{\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Customer Report Generated Successfully\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            toast({\r\n                position: \"bottom-right\",    \r\n                description: \"Internal Server Error. Try again later\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n          });  \r\n\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <Box\r\n      pt=\"100px\"\r\n      // pl={{ base: \"10px\", sm: \"100px\" }}\r\n      // pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Grid templateColumns=\"repeat(5, 1fr)\" templateRows=\"repeat(2, 1fr)\">\r\n        <GridItem colSpan={1} rowSpan={2}>\r\n          <CustomerDashSideBar page=\"dashboard\" />\r\n        </GridItem>\r\n\r\n        <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\r\n\r\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> Customer Order Report </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <form onSubmit={onSubmit}>  \r\n                                    <Flex>  \r\n                                    \r\n                                    <FormControl mr='2' >\r\n                                        <Input type=\"date\" color='white' placeholder=\"starting date\"  value={startDate} onChange={(e)=>setStartDate(e.target.value)} />\r\n                                    </FormControl>\r\n                                    <FormControl mr='2' >\r\n                                        <Input type=\"date\" color='white' placeholder=\"end date\" value={endDate}  onChange={(e)=>setEndDate(e.target.value)} />\r\n                                    </FormControl>\r\n                                    <Input  type=\"submit\" value='Search'  className='btn btn-block' bg=\"teal\" color='white' />\r\n                                   \r\n                                    </Flex>\r\n                                    </form>\r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={3} m='5'>\r\n\r\n                            <Table variant=\"simple\">\r\n                                {/* <TableCaption>Imperial to metric conversion factors</TableCaption> */}\r\n                                    <Thead backgroundColor='cyan.100'>\r\n                                        <Tr color='white'>\r\n                                            <Th>Order ID</Th>\r\n                                            <Th>Description</Th>\r\n                                            <Th>Order Date</Th>\r\n                                            <Th>No of Items</Th>\r\n                                            <Th >Price</Th>\r\n                                        </Tr>\r\n                                    </Thead>\r\n                                    \r\n                                    <ReportItems stats={stats} />\r\n\r\n                                    <Tfoot backgroundColor='cyan.100'>\r\n                                        <Tr>\r\n                                            <Th></Th>\r\n                                            <Th></Th>\r\n                                            <Th></Th>\r\n                                            <Th> Total Spent </Th>\r\n                                            <Th>{total}</Th>\r\n                                            \r\n                                        </Tr>\r\n                                    </Tfoot>\r\n                            </Table>                     \r\n                            </GridItem>              \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerStats);\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\QuarterReport.js",["1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,\r\n    Flex,\r\n    Spacer,\r\n    useColorMode,\r\n    useToast,\r\n    FormControl,\r\n    Input,\r\n    Table,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableCaption,\r\n    Select\r\n\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Axios from \"axios\";\r\n\r\n\r\n// const ReportItems  = ({stats})=>{\r\n//     return (\r\n//         <>\r\n//            {    \r\n//                stats.map((stat)=>(\r\n//                    <ReportItem key={stat.order_id} stat={stat}>  </ReportItem>\r\n//                    )\r\n//             )}\r\n//         </>\r\n//     )\r\n// }\r\n\r\n\r\n// const ReportItem = ({stat}) =>{\r\n//     return(\r\n//         <Tbody>                            \r\n//             <Tr>\r\n//                 <Td>{stat.order_id}</Td>\r\n//                 <Td>{stat.description.substring(1,stat.description.length-1)}</Td>\r\n//                 <Td>{stat.ordered_date}</Td>\r\n//                 <Td>{stat.nb_of_items}</Td>\r\n//                 <Td>{stat.price}</Td>\r\n//             </Tr>                             \r\n//         </Tbody>   \r\n//     )\r\n// }\r\n\r\n\r\n\r\nconst QuarterReport = () => {\r\n    const toast = useToast()\r\n  \r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const [year, setYear] = useState([]);\r\n    const [tableDetails, setTableDetails] = useState([]);\r\n    \r\n\r\n    const onSubmit  = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(year.length===0){\r\n            alert('Select an year')\r\n            return\r\n        }\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <Box\r\n      pt=\"100px\"\r\n    >\r\n      <Grid templateColumns=\"repeat(2, 1fr)\">\r\n      <Box \r\n        width=\"auto\"\r\n        h=\"auto\"                   \r\n        overflow=\"hidden\"                    \r\n        pb=\"5px\"                      \r\n        >        \r\n    </Box>\r\n\r\n      <GridItem colSpan={2} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'>  Quarterly Sales Report </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <form onSubmit={onSubmit}>  \r\n                                    <Flex>  \r\n                                    \r\n                                    <FormControl>\r\n                                            <Select color='white' placeholder=\"Select Year\" onChange={(e)=>setYear(e.target.value)}>\r\n                                                <option value='2018'>2018</option>\r\n                                                <option value='2019'>2019</option>\r\n                                                <option value='2020'>2020</option>\r\n                                                <option value='2021'>2021</option>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                    \r\n                                    <Input ml='2' type=\"submit\" value='Generate'  className='btn btn-block' bg=\"teal\" color='white' />\r\n                                   \r\n                                    </Flex>\r\n                                    </form>\r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n\r\n\r\n        {/* stats view */}\r\n        <GridItem>\r\n            \r\n        \r\n        </GridItem>  \r\n\r\n\r\n        {/* Table by product sales */}\r\n        <GridItem colSpan={2} m='5'>\r\n        \r\n\r\n        <Table variant=\"simple\">\r\n            <TableCaption>Sales reports of specific products of 2020 Business Year (2020/01/01-2020/12/31)</TableCaption>\r\n                <Thead backgroundColor='cyan.100'>\r\n                    <Tr color='white'>\r\n                            <Th>Item ID</Th>\r\n                            <Th>Item Name</Th>\r\n                            <Th>Q1</Th>\r\n                            <Th>Q2</Th>\r\n                            <Th>Q3</Th>\r\n                            <Th>Q4</Th>\r\n                    </Tr>\r\n                </Thead>\r\n                                    \r\n            <Tfoot backgroundColor='cyan.100'>\r\n                    <Tr>\r\n                        <Th>Total</Th>\r\n                        <Th></Th>\r\n                        <Th> Q1 total</Th>\r\n                        <Th> Q2 total </Th> \r\n                        <Th> Q3 total </Th> \r\n                        <Th> Q4 total </Th> \r\n                       \r\n                                            \r\n                    </Tr>\r\n            </Tfoot>\r\n        </Table>                     \r\n        \r\n        </GridItem>                  \r\n\r\n                            \r\n                         \r\n\r\n            \r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(QuarterReport);\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\ChartForSpecificProduct.js",["1118","1119"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { Height } from \"@material-ui/icons\";\r\n\r\nconst ChartForSpecificProduct = () => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n\r\n  const chart = () => {\r\n    \r\n    \r\n        setChartData({\r\n          labels:['January','February','March','April','May','June','July','August','September','October','November','December'],\r\n          datasets:[{\r\n                label:'Chart of a Specific Product with Total Sold Quantity in year',\r\n                data:[10,20,8,15,17,18,19,17,20,10,14,14],\r\n                fillColor: \"rgba(0,10,220,0.5)\",\r\n                backgroundColor: \"rgba(0,10,220,0.5)\",\r\n                borderWidth:4\r\n\r\n            }]\r\n        });\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n  return (\r\n      <Box  pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n     >\r\n    <div className=\"App\">\r\n      <h3>Annual Sales of</h3>\r\n      <div  style={{width:\"980px\", marginLeft:\"70px\"}}>\r\n        <Bar \r\n          data={chartData}\r\n          options={{\r\n            responsive: true,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    autoSkip: true,\r\n                    maxTicksLimit: 20,\r\n                    beginAtZero: true\r\n                    \r\n                  },\r\n                  gridLines: {\r\n                    display: true\r\n                  }\r\n                }\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChartForSpecificProduct;","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\ReportProduct.js",["1120","1121"],"import React, { useEffect, useState } from \"react\";\r\nimport ReportProduct from \"../components/ReportProd\";\r\n\r\nfunction ReportProductPopularity() {\r\n  return (\r\n    <>\r\n      <ReportProduct />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReportProductPopularity;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ReportProd.js",["1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136"],"import React, { useState } from \"react\";\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Text,\r\n  IconButton,\r\n  Tooltip,\r\n  Avatar,\r\n  Center,\r\n  Badge,\r\n  Progress,\r\n  GridItem,\r\n  Heading,\r\n  SimpleGrid,\r\n  useColorMode,\r\n  Grid,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Flex,\r\n  Spacer,\r\n  Button,\r\n  Table,\r\n  TableCaption,\r\n  Thead,\r\n  Tr,\r\n  Th,\r\n  Tbody,\r\n  Td,\r\n  Tfoot,\r\n  toast,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { Money, MoneyOff, Search } from \"@material-ui/icons\";\r\nimport Axios from \"axios\";\r\nfunction ReportProduct() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const [formStartDate, setFormStartDate] = useState(\"\");\r\n  const [formEndDate, setFormEndDate] = useState(\"\");\r\n  const [orderTotal, setOrderTotal] = useState(0)\r\n  const [productReports, setProductReports] = useState([{\r\n    item_name: \"-\",\r\n    category_name: \"-\",\r\n    price: \"-\",\r\n    orders: \"-\"\r\n  }])\r\n  const handleProductReport = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formStartDate.length === 0 || formEndDate.length === 0) {\r\n      alert(\"Enter time period to generate results\");\r\n      return;\r\n    }\r\n    Axios.post(\"http://localhost:5000/seller/productstatistics\", {\r\n      startDate: formStartDate,\r\n      endDate: formEndDate,\r\n    }).then((response) => {\r\n      // console.log(response.data.result.length);\r\n      var total = 0;\r\n      for (var i = 0; i < response.data.result.length; i++) {\r\n        total = total + parseInt(response.data.result[i].orders);\r\n      }\r\n      setOrderTotal(total);\r\n      setProductReports(response.data.result)\r\n      // if(response.data.result.length===0){\r\n      //   toast({\r\n      //       position: \"bottom-right\",\r\n      //       description: \"No any orders in this time period\",\r\n      //       status: \"error\",\r\n      //       duration: 5000,\r\n      //       isClosable: true,\r\n      //     })\r\n      //  }\r\n      //  else{\r\n      //   toast({\r\n      //       position: \"bottom-right\",\r\n      //       description: \"Customer Report Generated Successfully\",\r\n      //       status: \"success\",\r\n      //       duration: 5000,\r\n      //       isClosable: true,\r\n      //     })\r\n      //   }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        borderStyle=\"solid\"\r\n        borderColor=\"gray\"\r\n        boarderRadius=\"200px\"\r\n        mt=\"0px\"\r\n        pl=\"20px\"\r\n        pr=\"20px\"\r\n        pt=\"250px\"\r\n        mb=\"50px\"\r\n      >\r\n        <Box\r\n          borderStyle=\"solid\"\r\n          borderColor=\"gray.300\"\r\n          borderWidth=\"2px\"\r\n          p=\"30px\"\r\n          pt=\"30px\"\r\n          mt=\"-120px\"\r\n          mb=\"50px\"\r\n          borderRadius=\"20px\"\r\n          bg={colorMode === \"light\" ? \"white\" : \"cyan.900\"}\r\n        >\r\n          <Center>\r\n            <Heading as=\"h2\" size=\"2xl\">\r\n              Product Statistics Report\r\n            </Heading>\r\n          </Center>\r\n          <Center>\r\n          \r\n            <FormControl\r\n              mt=\"10px\"\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.300\"\r\n              borderWidth=\"2px\"\r\n              borderRadius=\"20px\"\r\n              pt=\"40px\"\r\n              pl=\"30px\"\r\n              pb=\"10px\"\r\n              mb=\"40px\"\r\n            >\r\n              <SimpleGrid columns={3} spacing={10}>\r\n                <Box>\r\n                  <FormLabel>Start Date</FormLabel>\r\n                  <Input\r\n                    type=\"date\"\r\n                    placeholder=\"Start Date\"\r\n                    value={formStartDate}\r\n                    onChange={(e) => setFormStartDate(e.target.value)}\r\n                  />\r\n                  <FormLabel>End Date</FormLabel>\r\n                  <Input\r\n                    type=\"date\"\r\n                    placeholder=\"End date\"\r\n                    value={formEndDate}\r\n                    onChange={(e) => setFormEndDate(e.target.value)}\r\n                  />\r\n                  <Box mt=\"20px\" ml=\"310px\">\r\n                    <Button\r\n                      rightIcon={<Search />}\r\n                      colorScheme=\"teal\"\r\n                      onClick={handleProductReport}\r\n                    >\r\n                      Search\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </SimpleGrid>\r\n            </FormControl>\r\n          </Center>\r\n          <Table variant=\"simple\" mt=\"-20px\" colorScheme=\"blue\">\r\n            <TableCaption>Products with most number of sales in a given period</TableCaption>\r\n            <Thead bg=\"cyan.200\">\r\n              <Tr bg=\"cyan.200\">\r\n                <Th>Number</Th>\r\n                <Th>Product Name</Th>\r\n                <Th>Category Name</Th>\r\n                <Th>Price</Th>\r\n                <Th>Number of Orders</Th>\r\n                {/* <Th>View product</Th> */}\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n            {Array(productReports.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                // <Tr>\r\n                //   <Td>\r\n                //     <Img src={arrayBufferToBinaryString(cartItems[i].image.data)} w=\"50px\" h=\"50px\" />\r\n                //   </Td>\r\n                //   <Td>{cartItems[i].item_name}</Td>\r\n                //   <Td>{cartItems[i].variant}</Td>\r\n                //   <Td isNumeric>{cartItems[i].quantity}</Td>\r\n                //   <Td isNumeric>{cartItems[i].price}</Td>\r\n                //   <Td isNumeric>\r\n                //     {cartItems[i].price * cartItems[i].quantity}\r\n                //   </Td>\r\n                //   <Td>\r\n                    \r\n                //   </Td>\r\n                // </Tr>\r\n                <Tr>\r\n                <Td>{i+1}</Td>\r\n                <Td>{productReports[i].item_name}</Td>\r\n                <Td>{productReports[i].category_name}</Td>\r\n                <Td>{productReports[i].price}</Td>\r\n                <Td>{productReports[i].orders}</Td>\r\n                {/* <Td>Check</Td> */}\r\n              </Tr>\r\n              ))}\r\n              {/* <Tr>\r\n                <Td>1</Td>\r\n                <Td>1</Td>\r\n                <Td>1</Td>\r\n                <Td>1</Td>\r\n                <Td>1</Td>\r\n                <Td>Check</Td>\r\n              </Tr> */}\r\n            </Tbody>\r\n            <Tfoot>\r\n              <Tr>\r\n                <Th></Th>\r\n                <Th></Th>\r\n                <Th></Th>\r\n                <Th>Total Orders of Products = </Th>\r\n                <Th>{orderTotal}</Th>\r\n                {/* <Th></Th> */}\r\n              </Tr>\r\n            </Tfoot>\r\n          </Table>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReportProduct;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\ReportCategory.js",["1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156"],{"ruleId":"1157","replacedBy":"1158"},{"ruleId":"1159","replacedBy":"1160"},{"ruleId":"1157","replacedBy":"1161"},{"ruleId":"1159","replacedBy":"1162"},{"ruleId":"1163","severity":1,"message":"1164","line":27,"column":10,"nodeType":"1165","messageId":"1166","endLine":27,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1167","line":36,"column":8,"nodeType":"1165","messageId":"1166","endLine":36,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1168","line":37,"column":10,"nodeType":"1165","messageId":"1166","endLine":37,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1169","line":42,"column":11,"nodeType":"1165","messageId":"1166","endLine":42,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1170","line":42,"column":22,"nodeType":"1165","messageId":"1166","endLine":42,"endColumn":37},{"ruleId":"1171","severity":1,"message":"1172","line":95,"column":6,"nodeType":"1173","endLine":95,"endColumn":8,"suggestions":"1174"},{"ruleId":"1163","severity":1,"message":"1175","line":24,"column":3,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1176","line":30,"column":10,"nodeType":"1165","messageId":"1166","endLine":30,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1170","line":39,"column":22,"nodeType":"1165","messageId":"1166","endLine":39,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1177","line":91,"column":9,"nodeType":"1165","messageId":"1166","endLine":91,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1178","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1179","line":12,"column":18,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":29},{"ruleId":"1163","severity":1,"message":"1180","line":13,"column":17,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":23},{"ruleId":"1163","severity":1,"message":"1175","line":13,"column":25,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":31},{"ruleId":"1163","severity":1,"message":"1181","line":18,"column":3,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1182","line":19,"column":3,"nodeType":"1165","messageId":"1166","endLine":19,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1183","line":23,"column":8,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":32},{"ruleId":"1163","severity":1,"message":"1184","line":24,"column":8,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1185","line":28,"column":9,"nodeType":"1165","messageId":"1166","endLine":28,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1186","line":32,"column":16,"nodeType":"1165","messageId":"1166","endLine":32,"endColumn":23},{"ruleId":"1163","severity":1,"message":"1170","line":36,"column":22,"nodeType":"1165","messageId":"1166","endLine":36,"endColumn":37},{"ruleId":"1187","severity":1,"message":"1188","line":48,"column":11,"nodeType":"1165","messageId":"1189","endLine":48,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1190","line":3,"column":5,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1181","line":11,"column":10,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1182","line":11,"column":19,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":28},{"ruleId":"1163","severity":1,"message":"1191","line":11,"column":48,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":56},{"ruleId":"1163","severity":1,"message":"1179","line":13,"column":18,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":29},{"ruleId":"1163","severity":1,"message":"1192","line":17,"column":5,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":21},{"ruleId":"1163","severity":1,"message":"1193","line":18,"column":5,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1194","line":20,"column":17,"nodeType":"1165","messageId":"1166","endLine":20,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1195","line":21,"column":18,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":29},{"ruleId":"1163","severity":1,"message":"1196","line":21,"column":31,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":42},{"ruleId":"1163","severity":1,"message":"1197","line":22,"column":8,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1199","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1200","line":17,"column":8,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1201","line":18,"column":8,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1202","line":21,"column":7,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1203","line":35,"column":9,"nodeType":"1165","messageId":"1166","endLine":35,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1204","line":35,"column":21,"nodeType":"1165","messageId":"1166","endLine":35,"endColumn":34},{"ruleId":"1163","severity":1,"message":"1205","line":10,"column":5,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1170","line":15,"column":24,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1206","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1207","line":15,"column":10,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1208","line":16,"column":8,"nodeType":"1165","messageId":"1166","endLine":16,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1209","line":44,"column":6,"nodeType":"1173","endLine":44,"endColumn":8,"suggestions":"1210"},{"ruleId":"1163","severity":1,"message":"1170","line":73,"column":22,"nodeType":"1165","messageId":"1166","endLine":73,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1170","line":21,"column":24,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":39},{"ruleId":"1171","severity":1,"message":"1209","line":90,"column":8,"nodeType":"1173","endLine":90,"endColumn":10,"suggestions":"1211"},{"ruleId":"1212","severity":1,"message":"1213","line":166,"column":37,"nodeType":"1214","messageId":"1215","endLine":166,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1170","line":172,"column":24,"nodeType":"1165","messageId":"1166","endLine":172,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1216","line":8,"column":5,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1194","line":12,"column":17,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1198","line":12,"column":27,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1170","line":19,"column":24,"nodeType":"1165","messageId":"1166","endLine":19,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1217","line":21,"column":11,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1209","line":63,"column":8,"nodeType":"1173","endLine":63,"endColumn":10,"suggestions":"1218"},{"ruleId":"1163","severity":1,"message":"1170","line":124,"column":24,"nodeType":"1165","messageId":"1166","endLine":124,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1180","line":3,"column":3,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1219","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1199","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1175","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1220","line":14,"column":8,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1169","line":17,"column":11,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1170","line":17,"column":22,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1221","line":18,"column":7,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1170","line":14,"column":22,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1222","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1223","line":10,"column":10,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1194","line":12,"column":17,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1224","line":3,"column":5,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1225","line":4,"column":5,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1199","line":5,"column":5,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1205","line":6,"column":5,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1206","line":7,"column":5,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1170","line":17,"column":24,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1217","line":18,"column":11,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1209","line":40,"column":8,"nodeType":"1173","endLine":40,"endColumn":10,"suggestions":"1226"},{"ruleId":"1163","severity":1,"message":"1227","line":6,"column":5,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":13},{"ruleId":"1212","severity":1,"message":"1213","line":35,"column":42,"nodeType":"1214","messageId":"1215","endLine":35,"endColumn":44},{"ruleId":"1163","severity":1,"message":"1170","line":13,"column":22,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1170","line":29,"column":24,"nodeType":"1165","messageId":"1166","endLine":29,"endColumn":39},{"ruleId":"1212","severity":1,"message":"1213","line":53,"column":18,"nodeType":"1214","messageId":"1215","endLine":53,"endColumn":20},{"ruleId":"1212","severity":1,"message":"1213","line":59,"column":24,"nodeType":"1214","messageId":"1215","endLine":59,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1194","line":1,"column":16,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":24},{"ruleId":"1163","severity":1,"message":"1228","line":19,"column":17,"nodeType":"1165","messageId":"1166","endLine":19,"endColumn":24},{"ruleId":"1163","severity":1,"message":"1229","line":24,"column":13,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1230","line":24,"column":21,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1231","line":24,"column":29,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1170","line":26,"column":24,"nodeType":"1165","messageId":"1166","endLine":26,"endColumn":39},{"ruleId":"1232","severity":1,"message":"1233","line":145,"column":21,"nodeType":"1234","messageId":"1235","endLine":150,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1194","line":1,"column":16,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":24},{"ruleId":"1163","severity":1,"message":"1236","line":23,"column":10,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1228","line":23,"column":17,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":24},{"ruleId":"1163","severity":1,"message":"1237","line":23,"column":26,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1229","line":28,"column":13,"nodeType":"1165","messageId":"1166","endLine":28,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1230","line":28,"column":21,"nodeType":"1165","messageId":"1166","endLine":28,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1231","line":28,"column":29,"nodeType":"1165","messageId":"1166","endLine":28,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1170","line":30,"column":24,"nodeType":"1165","messageId":"1166","endLine":30,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1238","line":7,"column":8,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1200","line":8,"column":8,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1239","line":8,"column":10,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1240","line":8,"column":15,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1241","line":9,"column":10,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1190","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1170","line":15,"column":21,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1242","line":2,"column":10,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1243","line":4,"column":3,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1244","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1245","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1246","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1247","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1248","line":15,"column":3,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1249","line":16,"column":3,"nodeType":"1165","messageId":"1166","endLine":16,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1250","line":23,"column":8,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1251","line":2,"column":10,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":22},{"ruleId":"1163","severity":1,"message":"1252","line":2,"column":24,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":41},{"ruleId":"1163","severity":1,"message":"1253","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1170","line":13,"column":22,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1242","line":2,"column":10,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1254","line":4,"column":8,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1200","line":5,"column":8,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1200","line":5,"column":8,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1255","line":6,"column":8,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1256","line":13,"column":19,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":27},{"ruleId":"1257","severity":1,"message":"1258","line":84,"column":13,"nodeType":"1259","endLine":84,"endColumn":34},{"ruleId":"1163","severity":1,"message":"1260","line":3,"column":3,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1261","line":17,"column":17,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1262","line":18,"column":10,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":21},{"ruleId":"1163","severity":1,"message":"1263","line":2,"column":10,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1200","line":6,"column":8,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1242","line":7,"column":10,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1264","line":11,"column":56,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":67},{"ruleId":"1163","severity":1,"message":"1200","line":6,"column":8,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1205","line":2,"column":18,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":22},{"ruleId":"1265","severity":1,"message":"1266","line":23,"column":7,"nodeType":"1267","endLine":23,"endColumn":77},{"ruleId":"1163","severity":1,"message":"1268","line":3,"column":8,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1269","line":52,"column":7,"nodeType":"1165","messageId":"1166","endLine":52,"endColumn":24},{"ruleId":"1171","severity":1,"message":"1270","line":74,"column":6,"nodeType":"1173","endLine":74,"endColumn":14,"suggestions":"1271"},{"ruleId":"1171","severity":1,"message":"1270","line":53,"column":6,"nodeType":"1173","endLine":53,"endColumn":14,"suggestions":"1272"},{"ruleId":"1163","severity":1,"message":"1273","line":11,"column":10,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1242","line":2,"column":3,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1222","line":3,"column":3,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1274","line":4,"column":3,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1205","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1170","line":17,"column":22,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":37},{"ruleId":"1275","severity":1,"message":"1276","line":29,"column":9,"nodeType":"1267","endLine":29,"endColumn":21},{"ruleId":"1163","severity":1,"message":"1277","line":3,"column":10,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1278","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1279","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1280","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1281","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1282","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1283","line":14,"column":24,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":30},{"ruleId":"1163","severity":1,"message":"1284","line":15,"column":10,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1285","line":18,"column":3,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1239","line":31,"column":10,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1205","line":31,"column":21,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1286","line":35,"column":10,"nodeType":"1165","messageId":"1166","endLine":35,"endColumn":16},{"ruleId":"1232","severity":1,"message":"1287","line":43,"column":5,"nodeType":"1234","messageId":"1288","endLine":45,"endColumn":6},{"ruleId":"1163","severity":1,"message":"1242","line":3,"column":5,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1175","line":8,"column":5,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1289","line":17,"column":23,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":48},{"ruleId":"1163","severity":1,"message":"1181","line":1,"column":10,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1175","line":2,"column":35,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":41},{"ruleId":"1163","severity":1,"message":"1248","line":2,"column":50,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":54},{"ruleId":"1163","severity":1,"message":"1290","line":7,"column":17,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1291","line":13,"column":10,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1190","line":6,"column":5,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1175","line":10,"column":5,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1194","line":13,"column":19,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1292","line":14,"column":10,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":22},{"ruleId":"1163","severity":1,"message":"1293","line":22,"column":11,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1294","line":24,"column":11,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1295","line":37,"column":11,"nodeType":"1165","messageId":"1166","endLine":37,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1242","line":3,"column":5,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1175","line":8,"column":5,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1289","line":17,"column":23,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":48},{"ruleId":"1163","severity":1,"message":"1191","line":1,"column":10,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1178","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1219","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1195","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1175","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1199","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1296","line":11,"column":3,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1297","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1194","line":15,"column":17,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1191","line":1,"column":10,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1178","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1219","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1195","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1175","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1199","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1296","line":11,"column":3,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1297","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1194","line":15,"column":17,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1200","line":1,"column":8,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1194","line":2,"column":17,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":25},{"ruleId":"1212","severity":1,"message":"1213","line":32,"column":33,"nodeType":"1214","messageId":"1215","endLine":32,"endColumn":35},{"ruleId":"1298","severity":1,"message":"1299","line":77,"column":1,"nodeType":"1300","endLine":84,"endColumn":2},{"ruleId":"1163","severity":1,"message":"1205","line":2,"column":18,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":22},{"ruleId":"1265","severity":1,"message":"1266","line":23,"column":7,"nodeType":"1267","endLine":23,"endColumn":77},{"ruleId":"1157","replacedBy":"1301"},{"ruleId":"1159","replacedBy":"1302"},{"ruleId":"1163","severity":1,"message":"1216","line":8,"column":5,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1194","line":12,"column":17,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1198","line":12,"column":27,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1170","line":19,"column":24,"nodeType":"1165","messageId":"1166","endLine":19,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1217","line":21,"column":11,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1242","line":3,"column":5,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1190","line":4,"column":5,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1175","line":8,"column":5,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1197","line":13,"column":10,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1303","line":33,"column":11,"nodeType":"1165","messageId":"1166","endLine":33,"endColumn":24},{"ruleId":"1171","severity":1,"message":"1209","line":60,"column":8,"nodeType":"1173","endLine":60,"endColumn":10,"suggestions":"1304"},{"ruleId":"1212","severity":1,"message":"1213","line":139,"column":37,"nodeType":"1214","messageId":"1215","endLine":139,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1170","line":145,"column":24,"nodeType":"1165","messageId":"1166","endLine":145,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1242","line":3,"column":5,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1190","line":4,"column":5,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1175","line":9,"column":5,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1197","line":13,"column":10,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1181","line":1,"column":10,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1175","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1248","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1224","line":25,"column":10,"nodeType":"1165","messageId":"1166","endLine":25,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1209","line":47,"column":8,"nodeType":"1173","endLine":47,"endColumn":10,"suggestions":"1305"},{"ruleId":"1163","severity":1,"message":"1170","line":124,"column":24,"nodeType":"1165","messageId":"1166","endLine":124,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1205","line":10,"column":5,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1170","line":15,"column":24,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":39},{"ruleId":"1171","severity":1,"message":"1209","line":59,"column":8,"nodeType":"1173","endLine":59,"endColumn":10,"suggestions":"1306"},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1194","line":1,"column":28,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1202","line":19,"column":7,"nodeType":"1165","messageId":"1166","endLine":19,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1170","line":21,"column":24,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":39},{"ruleId":"1171","severity":1,"message":"1209","line":44,"column":8,"nodeType":"1173","endLine":44,"endColumn":10,"suggestions":"1307"},{"ruleId":"1171","severity":1,"message":"1209","line":89,"column":8,"nodeType":"1173","endLine":89,"endColumn":10,"suggestions":"1308"},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1238","line":7,"column":8,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1200","line":8,"column":8,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1190","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1292","line":15,"column":8,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1309","line":30,"column":6,"nodeType":"1173","endLine":30,"endColumn":8,"suggestions":"1310"},{"ruleId":"1163","severity":1,"message":"1311","line":5,"column":8,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":21},{"ruleId":"1163","severity":1,"message":"1239","line":8,"column":10,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1240","line":8,"column":15,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1312","line":8,"column":21,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":29},{"ruleId":"1163","severity":1,"message":"1164","line":10,"column":10,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1313","line":20,"column":9,"nodeType":"1165","messageId":"1166","endLine":20,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1178","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1179","line":13,"column":18,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":29},{"ruleId":"1163","severity":1,"message":"1180","line":14,"column":17,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":23},{"ruleId":"1163","severity":1,"message":"1175","line":14,"column":25,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":31},{"ruleId":"1163","severity":1,"message":"1181","line":21,"column":3,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1182","line":22,"column":3,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1183","line":27,"column":8,"nodeType":"1165","messageId":"1166","endLine":27,"endColumn":32},{"ruleId":"1163","severity":1,"message":"1184","line":28,"column":8,"nodeType":"1165","messageId":"1166","endLine":28,"endColumn":26},{"ruleId":"1171","severity":1,"message":"1314","line":76,"column":6,"nodeType":"1173","endLine":76,"endColumn":8,"suggestions":"1315"},{"ruleId":"1163","severity":1,"message":"1273","line":11,"column":10,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1164","line":32,"column":10,"nodeType":"1165","messageId":"1166","endLine":32,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1316","line":37,"column":3,"nodeType":"1165","messageId":"1166","endLine":37,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1170","line":50,"column":22,"nodeType":"1165","messageId":"1166","endLine":50,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1230","line":54,"column":19,"nodeType":"1165","messageId":"1166","endLine":54,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1172","line":145,"column":6,"nodeType":"1173","endLine":145,"endColumn":8,"suggestions":"1317"},{"ruleId":"1163","severity":1,"message":"1206","line":6,"column":5,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1207","line":15,"column":10,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1208","line":16,"column":8,"nodeType":"1165","messageId":"1166","endLine":16,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1209","line":44,"column":6,"nodeType":"1173","endLine":44,"endColumn":8,"suggestions":"1318"},{"ruleId":"1163","severity":1,"message":"1170","line":73,"column":22,"nodeType":"1165","messageId":"1166","endLine":73,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1170","line":37,"column":22,"nodeType":"1165","messageId":"1166","endLine":37,"endColumn":37},{"ruleId":"1187","severity":1,"message":"1188","line":49,"column":11,"nodeType":"1165","messageId":"1189","endLine":49,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1175","line":25,"column":3,"nodeType":"1165","messageId":"1166","endLine":25,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1319","line":30,"column":10,"nodeType":"1165","messageId":"1166","endLine":30,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1176","line":31,"column":10,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1207","line":38,"column":10,"nodeType":"1165","messageId":"1166","endLine":38,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1170","line":42,"column":22,"nodeType":"1165","messageId":"1166","endLine":42,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1224","line":3,"column":5,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1225","line":4,"column":5,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1199","line":5,"column":5,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1205","line":6,"column":5,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1206","line":7,"column":5,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1170","line":17,"column":24,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1191","line":1,"column":10,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1178","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1219","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1195","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1175","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1199","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1296","line":11,"column":3,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1297","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1242","line":14,"column":3,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1194","line":16,"column":17,"nodeType":"1165","messageId":"1166","endLine":16,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1209","line":39,"column":8,"nodeType":"1173","endLine":39,"endColumn":10,"suggestions":"1320"},{"ruleId":"1163","severity":1,"message":"1191","line":1,"column":10,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1178","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1219","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1195","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1175","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1199","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1296","line":11,"column":3,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1297","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1227","line":15,"column":3,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1321","line":17,"column":8,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1194","line":18,"column":17,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1190","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1170","line":15,"column":21,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1242","line":2,"column":3,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1222","line":3,"column":3,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1274","line":4,"column":3,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1205","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1170","line":17,"column":22,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1217","line":18,"column":11,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1251","line":2,"column":10,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":22},{"ruleId":"1163","severity":1,"message":"1252","line":2,"column":24,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":41},{"ruleId":"1163","severity":1,"message":"1253","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1170","line":13,"column":22,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1242","line":2,"column":10,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1243","line":4,"column":3,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1244","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1245","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1246","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1247","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1248","line":15,"column":3,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1249","line":16,"column":3,"nodeType":"1165","messageId":"1166","endLine":16,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1250","line":23,"column":8,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1242","line":2,"column":10,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1180","line":3,"column":3,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1219","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1199","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1175","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1220","line":14,"column":8,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1169","line":17,"column":11,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1170","line":17,"column":22,"nodeType":"1165","messageId":"1166","endLine":17,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1221","line":18,"column":7,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1170","line":14,"column":22,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1256","line":13,"column":19,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":27},{"ruleId":"1257","severity":1,"message":"1258","line":85,"column":13,"nodeType":"1259","endLine":85,"endColumn":34},{"ruleId":"1163","severity":1,"message":"1277","line":3,"column":10,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1278","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1279","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1280","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1281","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1282","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1283","line":14,"column":24,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":30},{"ruleId":"1163","severity":1,"message":"1284","line":15,"column":10,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1285","line":18,"column":3,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1239","line":31,"column":10,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1205","line":31,"column":21,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1286","line":35,"column":10,"nodeType":"1165","messageId":"1166","endLine":35,"endColumn":16},{"ruleId":"1232","severity":1,"message":"1287","line":43,"column":5,"nodeType":"1234","messageId":"1288","endLine":45,"endColumn":6},{"ruleId":"1163","severity":1,"message":"1260","line":3,"column":3,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1322","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1323","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1224","line":16,"column":3,"nodeType":"1165","messageId":"1166","endLine":16,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1324","line":21,"column":10,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":22},{"ruleId":"1163","severity":1,"message":"1325","line":22,"column":10,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1261","line":22,"column":17,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1262","line":23,"column":10,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":21},{"ruleId":"1163","severity":1,"message":"1326","line":23,"column":23,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1282","line":23,"column":38,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":52},{"ruleId":"1163","severity":1,"message":"1327","line":24,"column":10,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":20},{"ruleId":"1163","severity":1,"message":"1170","line":27,"column":22,"nodeType":"1165","messageId":"1166","endLine":27,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1254","line":4,"column":8,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1200","line":5,"column":8,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":13},{"ruleId":"1212","severity":1,"message":"1213","line":30,"column":33,"nodeType":"1214","messageId":"1215","endLine":30,"endColumn":35},{"ruleId":"1298","severity":1,"message":"1299","line":74,"column":1,"nodeType":"1300","endLine":81,"endColumn":2},{"ruleId":"1163","severity":1,"message":"1222","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1194","line":11,"column":17,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":25},{"ruleId":"1157","replacedBy":"1328"},{"ruleId":"1159","replacedBy":"1329"},{"ruleId":"1163","severity":1,"message":"1200","line":5,"column":8,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1255","line":6,"column":8,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1194","line":1,"column":16,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":24},{"ruleId":"1163","severity":1,"message":"1229","line":24,"column":13,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1230","line":24,"column":21,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1231","line":24,"column":29,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1170","line":26,"column":24,"nodeType":"1165","messageId":"1166","endLine":26,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1170","line":13,"column":22,"nodeType":"1165","messageId":"1166","endLine":13,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1200","line":6,"column":8,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1242","line":7,"column":22,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":28},{"ruleId":"1212","severity":1,"message":"1213","line":25,"column":24,"nodeType":"1214","messageId":"1215","endLine":25,"endColumn":26},{"ruleId":"1212","severity":1,"message":"1213","line":60,"column":24,"nodeType":"1214","messageId":"1215","endLine":60,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1205","line":2,"column":18,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":22},{"ruleId":"1265","severity":1,"message":"1266","line":23,"column":7,"nodeType":"1267","endLine":23,"endColumn":77},{"ruleId":"1163","severity":1,"message":"1263","line":2,"column":10,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":19},{"ruleId":"1212","severity":1,"message":"1213","line":37,"column":42,"nodeType":"1214","messageId":"1215","endLine":37,"endColumn":44},{"ruleId":"1163","severity":1,"message":"1296","line":10,"column":5,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1180","line":11,"column":5,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1170","line":31,"column":24,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":39},{"ruleId":"1187","severity":1,"message":"1330","line":55,"column":13,"nodeType":"1165","messageId":"1189","endLine":55,"endColumn":17},{"ruleId":"1212","severity":1,"message":"1213","line":66,"column":18,"nodeType":"1214","messageId":"1215","endLine":66,"endColumn":20},{"ruleId":"1212","severity":1,"message":"1213","line":73,"column":24,"nodeType":"1214","messageId":"1215","endLine":73,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1194","line":1,"column":16,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":24},{"ruleId":"1163","severity":1,"message":"1236","line":23,"column":10,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1228","line":23,"column":17,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":24},{"ruleId":"1163","severity":1,"message":"1237","line":23,"column":26,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1229","line":28,"column":13,"nodeType":"1165","messageId":"1166","endLine":28,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1230","line":28,"column":21,"nodeType":"1165","messageId":"1166","endLine":28,"endColumn":27},{"ruleId":"1163","severity":1,"message":"1231","line":28,"column":29,"nodeType":"1165","messageId":"1166","endLine":28,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1170","line":30,"column":24,"nodeType":"1165","messageId":"1166","endLine":30,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1268","line":3,"column":8,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1270","line":51,"column":6,"nodeType":"1173","endLine":51,"endColumn":14,"suggestions":"1331"},{"ruleId":"1163","severity":1,"message":"1205","line":2,"column":18,"nodeType":"1165","messageId":"1166","endLine":2,"endColumn":22},{"ruleId":"1265","severity":1,"message":"1266","line":23,"column":7,"nodeType":"1267","endLine":23,"endColumn":77},{"ruleId":"1163","severity":1,"message":"1200","line":6,"column":8,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":13},{"ruleId":"1212","severity":1,"message":"1213","line":109,"column":30,"nodeType":"1214","messageId":"1215","endLine":109,"endColumn":32},{"ruleId":"1171","severity":1,"message":"1270","line":61,"column":6,"nodeType":"1173","endLine":61,"endColumn":40,"suggestions":"1332"},{"ruleId":"1163","severity":1,"message":"1242","line":3,"column":5,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1175","line":8,"column":5,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1191","line":1,"column":10,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":18},{"ruleId":"1163","severity":1,"message":"1178","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1219","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1195","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1175","line":9,"column":3,"nodeType":"1165","messageId":"1166","endLine":9,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1199","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1296","line":11,"column":3,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1297","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1194","line":15,"column":17,"nodeType":"1165","messageId":"1166","endLine":15,"endColumn":25},{"ruleId":"1333","severity":1,"message":"1334","line":62,"column":96,"nodeType":"1214","messageId":"1335","endLine":62,"endColumn":97},{"ruleId":"1163","severity":1,"message":"1198","line":22,"column":27,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1207","line":23,"column":10,"nodeType":"1165","messageId":"1166","endLine":23,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1208","line":24,"column":8,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1169","line":60,"column":13,"nodeType":"1165","messageId":"1166","endLine":60,"endColumn":22},{"ruleId":"1163","severity":1,"message":"1170","line":60,"column":24,"nodeType":"1165","messageId":"1166","endLine":60,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1336","line":14,"column":5,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1337","line":18,"column":5,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1198","line":24,"column":27,"nodeType":"1165","messageId":"1166","endLine":24,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1207","line":25,"column":10,"nodeType":"1165","messageId":"1166","endLine":25,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1208","line":26,"column":8,"nodeType":"1165","messageId":"1166","endLine":26,"endColumn":14},{"ruleId":"1163","severity":1,"message":"1200","line":27,"column":8,"nodeType":"1165","messageId":"1166","endLine":27,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1217","line":60,"column":11,"nodeType":"1165","messageId":"1166","endLine":60,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1169","line":62,"column":13,"nodeType":"1165","messageId":"1166","endLine":62,"endColumn":22},{"ruleId":"1163","severity":1,"message":"1170","line":62,"column":24,"nodeType":"1165","messageId":"1166","endLine":62,"endColumn":39},{"ruleId":"1163","severity":1,"message":"1338","line":64,"column":12,"nodeType":"1165","messageId":"1166","endLine":64,"endColumn":24},{"ruleId":"1163","severity":1,"message":"1339","line":64,"column":26,"nodeType":"1165","messageId":"1166","endLine":64,"endColumn":41},{"ruleId":"1163","severity":1,"message":"1321","line":4,"column":8,"nodeType":"1165","messageId":"1166","endLine":4,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1340","line":6,"column":10,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":16},{"ruleId":"1163","severity":1,"message":"1198","line":1,"column":17,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":26},{"ruleId":"1163","severity":1,"message":"1194","line":1,"column":28,"nodeType":"1165","messageId":"1166","endLine":1,"endColumn":36},{"ruleId":"1163","severity":1,"message":"1260","line":3,"column":3,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1205","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1322","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1323","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1219","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1297","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1341","line":11,"column":3,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1225","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1224","line":16,"column":3,"nodeType":"1165","messageId":"1166","endLine":16,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1240","line":20,"column":3,"nodeType":"1165","messageId":"1166","endLine":20,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1342","line":21,"column":3,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1343","line":31,"column":3,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1325","line":34,"column":10,"nodeType":"1165","messageId":"1166","endLine":34,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1261","line":34,"column":17,"nodeType":"1165","messageId":"1166","endLine":34,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1170","line":37,"column":22,"nodeType":"1165","messageId":"1166","endLine":37,"endColumn":37},{"ruleId":"1163","severity":1,"message":"1260","line":3,"column":3,"nodeType":"1165","messageId":"1166","endLine":3,"endColumn":17},{"ruleId":"1163","severity":1,"message":"1205","line":5,"column":3,"nodeType":"1165","messageId":"1166","endLine":5,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1322","line":6,"column":3,"nodeType":"1165","messageId":"1166","endLine":6,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1323","line":7,"column":3,"nodeType":"1165","messageId":"1166","endLine":7,"endColumn":10},{"ruleId":"1163","severity":1,"message":"1219","line":8,"column":3,"nodeType":"1165","messageId":"1166","endLine":8,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1297","line":10,"column":3,"nodeType":"1165","messageId":"1166","endLine":10,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1341","line":11,"column":3,"nodeType":"1165","messageId":"1166","endLine":11,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1225","line":12,"column":3,"nodeType":"1165","messageId":"1166","endLine":12,"endColumn":11},{"ruleId":"1163","severity":1,"message":"1344","line":14,"column":3,"nodeType":"1165","messageId":"1166","endLine":14,"endColumn":13},{"ruleId":"1163","severity":1,"message":"1224","line":16,"column":3,"nodeType":"1165","messageId":"1166","endLine":16,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1345","line":18,"column":3,"nodeType":"1165","messageId":"1166","endLine":18,"endColumn":12},{"ruleId":"1163","severity":1,"message":"1346","line":19,"column":3,"nodeType":"1165","messageId":"1166","endLine":19,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1240","line":20,"column":3,"nodeType":"1165","messageId":"1166","endLine":20,"endColumn":7},{"ruleId":"1163","severity":1,"message":"1342","line":21,"column":3,"nodeType":"1165","messageId":"1166","endLine":21,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1242","line":22,"column":3,"nodeType":"1165","messageId":"1166","endLine":22,"endColumn":9},{"ruleId":"1163","severity":1,"message":"1343","line":31,"column":3,"nodeType":"1165","messageId":"1166","endLine":31,"endColumn":8},{"ruleId":"1163","severity":1,"message":"1325","line":34,"column":10,"nodeType":"1165","messageId":"1166","endLine":34,"endColumn":15},{"ruleId":"1163","severity":1,"message":"1261","line":34,"column":17,"nodeType":"1165","messageId":"1166","endLine":34,"endColumn":25},{"ruleId":"1163","severity":1,"message":"1347","line":34,"column":27,"nodeType":"1165","messageId":"1166","endLine":34,"endColumn":33},{"ruleId":"1163","severity":1,"message":"1170","line":37,"column":22,"nodeType":"1165","messageId":"1166","endLine":37,"endColumn":37},"no-native-reassign",["1348"],"no-negated-in-lhs",["1349"],["1348"],["1349"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ErrorModel' is defined but never used.","'render' is defined but never used.","'colorMode' is assigned a value but never used.","'toggleColorMode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentOrder' and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentOrder(c => ...)' if you only need 'currentOrder' in the 'setCurrentOrder' call.","ArrayExpression",["1350"],"'VStack' is defined but never used.","'RiVisaLine' is defined but never used.","'customer_id' is assigned a value but never used.","'useColorMode' is defined but never used.","'ButtonGroup' is defined but never used.","'HStack' is defined but never used.","'AddIcon' is defined but never used.","'MinusIcon' is defined but never used.","'CategorizedReviewPreview' is defined but never used.","'ReviewCountPreview' is defined but never used.","'id' is assigned a value but never used.","'setData' is assigned a value but never used.","no-redeclare","'url' is already defined.","redeclared","'Center' is defined but never used.","'StarIcon' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'useState' is defined but never used.","'AvatarBadge' is defined but never used.","'AvatarGroup' is defined but never used.","'SearchBar' is defined but never used.","'useEffect' is defined but never used.","'Heading' is defined but never used.","'Axios' is defined but never used.","'checkLogin' is defined but never used.","'his' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","'Text' is defined but never used.","'Divider' is defined but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.","React Hook useEffect has a missing dependency: 'toast'. Either include it or remove the dependency array.",["1351"],["1352"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useDisclosure' is defined but never used.","'toast' is assigned a value but never used.",["1353"],"'Avatar' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'ReactRouterLink' is defined but never used.","'encode' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.",["1354"],"'useToast' is defined but never used.","'ImPhone' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ImUser' is defined but never used.","'ImLocation' is defined but never used.","'service' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'AiFillExperiment' is defined but never used.","'Button' is defined but never used.","'FaFacebook' is defined but never used.","'FaInstagram' is defined but never used.","'FaYoutube' is defined but never used.","'FaTwitter' is defined but never used.","'FaLinkedin' is defined but never used.","'Form' is defined but never used.","'FormInput' is defined but never used.","'BottomFooter' is defined but never used.","'CardGiftcard' is defined but never used.","'CreditCardRounded' is defined but never used.","'MdSettings' is defined but never used.","'FormSuccess' is defined but never used.","'useForm' is defined but never used.","'MdZoomIn' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ChakraProvider' is defined but never used.","'MoneyOff' is defined but never used.","'GiCartwheel' is defined but never used.","'FaMagento' is defined but never used.","'loginStatus' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Cookies' is defined but never used.","'userAuthenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1355"],["1356"],"'useHistory' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AiFillThunderbolt' is defined but never used.","'GiAllForOne' is defined but never used.","'GiArtificialIntelligence' is defined but never used.","'GiCrystalBars' is defined but never used.","'GiDeliveryDrone' is defined but never used.","'GiShoppingCart' is defined but never used.","'GiRock' is defined but never used.","'GiFloatingCrystal' is defined but never used.","'PricingSection' is defined but never used.","'isDark' is assigned a value but never used.","Nested block is redundant.","redundantNestedBlock","'setActiveCategoryProducts' is assigned a value but never used.","'Component' is defined but never used.","'state' is assigned a value but never used.","'Deliverycard' is defined but never used.","'Shipping_method' is assigned a value but never used.","'Ship_to' is assigned a value but never used.","'feedback' is assigned a value but never used.","'Image' is defined but never used.","'Badge' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["1348"],["1349"],"'searchBarText' is assigned a value but never used.",["1357"],["1358"],["1359"],["1360"],["1361"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1362"],"'SearchBarHome' is defined but never used.","'Skeleton' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'item_id'. Either include it or remove the dependency array.",["1363"],"'Icon' is defined but never used.",["1364"],["1365"],"'SiPaypal' is defined but never used.",["1366"],"'axios' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'FaDollarSign' is defined but never used.","'Money' is defined but never used.","'GiShoppingBag' is defined but never used.","'FiUserPlus' is defined but never used.",["1348"],["1349"],"'list' is already defined.",["1367"],["1368"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Tbody' is defined but never used.","'Td' is defined but never used.","'tableDetails' is assigned a value but never used.","'setTableDetails' is assigned a value but never used.","'Height' is defined but never used.","'Progress' is defined but never used.","'Spacer' is defined but never used.","'toast' is defined but never used.","'SimpleGrid' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'Search' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1369","fix":"1370"},{"desc":"1371","fix":"1372"},{"desc":"1371","fix":"1373"},{"desc":"1371","fix":"1374"},{"desc":"1371","fix":"1375"},{"desc":"1376","fix":"1377"},{"desc":"1376","fix":"1378"},{"desc":"1371","fix":"1379"},{"desc":"1371","fix":"1380"},{"desc":"1371","fix":"1381"},{"desc":"1371","fix":"1382"},{"desc":"1371","fix":"1383"},{"desc":"1384","fix":"1385"},{"desc":"1386","fix":"1387"},{"desc":"1369","fix":"1388"},{"desc":"1371","fix":"1389"},{"desc":"1371","fix":"1390"},{"desc":"1376","fix":"1391"},{"desc":"1392","fix":"1393"},"Update the dependencies array to be: [currentOrder, id]",{"range":"1394","text":"1395"},"Update the dependencies array to be: [toast]",{"range":"1396","text":"1397"},{"range":"1398","text":"1397"},{"range":"1399","text":"1397"},{"range":"1400","text":"1397"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"1401","text":"1402"},{"range":"1403","text":"1402"},{"range":"1404","text":"1397"},{"range":"1405","text":"1397"},{"range":"1406","text":"1397"},{"range":"1407","text":"1397"},{"range":"1408","text":"1397"},"Update the dependencies array to be: [id]",{"range":"1409","text":"1410"},"Update the dependencies array to be: [item_id]",{"range":"1411","text":"1412"},{"range":"1413","text":"1395"},{"range":"1414","text":"1397"},{"range":"1415","text":"1397"},{"range":"1416","text":"1402"},"Update the dependencies array to be: [errors, backEndErrors.registered, isSubmitting, callback]",{"range":"1417","text":"1418"},[2361,2363],"[currentOrder, id]",[1142,1144],"[toast]",[2229,2231],[1579,1581],[1236,1238],[2315,2323],"[callback, errors, isSubmitting]",[1406,1414],[1499,1501],[1244,1246],[1901,1903],[1125,1127],[2506,2508],[679,681],"[id]",[1702,1704],"[item_id]",[3451,3453],[1164,1166],[1206,1208],[1364,1372],[1790,1824],"[errors, backEndErrors.registered, isSubmitting, callback]"]