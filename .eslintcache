[{"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js":"1","/Users/pasanmadushan/Desktop/Front-end-react/src/App.js":"2","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AwaitingShipment.js":"3","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AwaitingDelivery.js":"4","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js":"5","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js":"6","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/NewItem.js":"7","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/TrackOrder.js":"8","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CartPage.js":"9","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AllOrders.js":"10","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SellerDashboard.js":"11","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CardDetails.js":"12","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/SignUp.js":"13","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/FeedbackPage.js":"14","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Seller/SellerHome.js":"15","/Users/pasanmadushan/Desktop/Front-end-react/src/ProtectedRoute.js":"16","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js":"17","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js":"18","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js":"19","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/Home.js":"20","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js":"21","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/SignIn.js":"22","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js":"23","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipmentCard.js":"24","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Deliverycard.js":"25","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePasswordForm.js":"26","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js":"27","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js":"28","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js":"29","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePersonalDetForm.js":"30","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBarHome.js":"31","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCards.js":"32","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddBankCard.js":"33","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTiles.js":"34","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Seller/Card.js":"35","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Seller/Middle.js":"36","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomFooter.js":"37","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/Footer.js":"38","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomItems.js":"39","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js":"40","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js":"41","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Slider/SliderData.js":"42","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/Register.js":"43","/Users/pasanmadushan/Desktop/Front-end-react/src/API_Service/checkLogin.js":"44","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/LogIn.js":"45","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Slider/ImageSlider.js":"46","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Pricing/Pricing.js":"47","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShopNow.js":"48","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js":"49","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCard.js":"50","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTile.js":"51","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js":"52","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js":"53","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/Footer.elements.js":"54","/Users/pasanmadushan/Desktop/Front-end-react/src/globalStyles.js":"55","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomFooter.elements.js":"56","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/FormSuccess.js":"57","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/FormSignup.js":"58","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/FormSuccess.js":"59","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/FormLogIn.js":"60","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Pricing/Pricing.elements.js":"61","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/validateInfo.js":"62","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/useForm.js":"63","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/useForm.js":"64","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/validateInfo.js":"65","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ErrorModel.js":"66","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderItemTile.js":"67","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/OrderView.js":"68","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ProductPopularityReport.js":"69","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SellerAllOrders.js":"70","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AllOrdersCard.js":"71","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReportProduct.js":"72","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/QuarterReport.js":"73","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerStats.js":"74"},{"size":319,"mtime":1613760115809,"results":"75","hashOfConfig":"76"},{"size":5257,"mtime":1614765033675,"results":"77","hashOfConfig":"76"},{"size":2777,"mtime":1614765033682,"results":"78","hashOfConfig":"76"},{"size":2225,"mtime":1614758200294,"results":"79","hashOfConfig":"76"},{"size":2736,"mtime":1613813095609,"results":"80","hashOfConfig":"76"},{"size":7091,"mtime":1614765033683,"results":"81","hashOfConfig":"76"},{"size":4468,"mtime":1614758200296,"results":"82","hashOfConfig":"76"},{"size":1674,"mtime":1612895989640,"results":"83","hashOfConfig":"76"},{"size":13753,"mtime":1614758200295,"results":"84","hashOfConfig":"76"},{"size":7903,"mtime":1614765033682,"results":"85","hashOfConfig":"76"},{"size":9650,"mtime":1614758200297,"results":"86","hashOfConfig":"76"},{"size":6314,"mtime":1614765033683,"results":"87","hashOfConfig":"76"},{"size":521,"mtime":1613760115810,"results":"88","hashOfConfig":"76"},{"size":4856,"mtime":1614758200296,"results":"89","hashOfConfig":"76"},{"size":3021,"mtime":1614758200297,"results":"90","hashOfConfig":"76"},{"size":521,"mtime":1614535465038,"results":"91","hashOfConfig":"76"},{"size":14347,"mtime":1614661425493,"results":"92","hashOfConfig":"76"},{"size":7413,"mtime":1614765033684,"results":"93","hashOfConfig":"76"},{"size":4582,"mtime":1614661425492,"results":"94","hashOfConfig":"76"},{"size":886,"mtime":1614758200295,"results":"95","hashOfConfig":"76"},{"size":4274,"mtime":1614758200291,"results":"96","hashOfConfig":"76"},{"size":1137,"mtime":1614535593051,"results":"97","hashOfConfig":"76"},{"size":599,"mtime":1612503070407,"results":"98","hashOfConfig":"76"},{"size":2146,"mtime":1614758200293,"results":"99","hashOfConfig":"76"},{"size":2057,"mtime":1614758200290,"results":"100","hashOfConfig":"76"},{"size":3364,"mtime":1614660876259,"results":"101","hashOfConfig":"76"},{"size":1999,"mtime":1614765033678,"results":"102","hashOfConfig":"76"},{"size":433,"mtime":1614660876262,"results":"103","hashOfConfig":"76"},{"size":2433,"mtime":1614660876256,"results":"104","hashOfConfig":"76"},{"size":4658,"mtime":1614758200290,"results":"105","hashOfConfig":"76"},{"size":1059,"mtime":1613760115801,"results":"106","hashOfConfig":"76"},{"size":339,"mtime":1614660876258,"results":"107","hashOfConfig":"76"},{"size":3228,"mtime":1614765033676,"results":"108","hashOfConfig":"76"},{"size":393,"mtime":1614754581724,"results":"109","hashOfConfig":"76"},{"size":2182,"mtime":1614758200292,"results":"110","hashOfConfig":"76"},{"size":5452,"mtime":1614758200293,"results":"111","hashOfConfig":"76"},{"size":1654,"mtime":1613760115799,"results":"112","hashOfConfig":"76"},{"size":2510,"mtime":1613760115800,"results":"113","hashOfConfig":"76"},{"size":2751,"mtime":1614758200291,"results":"114","hashOfConfig":"76"},{"size":2268,"mtime":1614535593047,"results":"115","hashOfConfig":"76"},{"size":1790,"mtime":1614535593046,"results":"116","hashOfConfig":"76"},{"size":245,"mtime":1613760115805,"results":"117","hashOfConfig":"76"},{"size":966,"mtime":1614661425491,"results":"118","hashOfConfig":"76"},{"size":1855,"mtime":1614758200289,"results":"119","hashOfConfig":"76"},{"size":1024,"mtime":1614661425490,"results":"120","hashOfConfig":"76"},{"size":1146,"mtime":1613760115805,"results":"121","hashOfConfig":"76"},{"size":4576,"mtime":1614758200292,"results":"122","hashOfConfig":"76"},{"size":1341,"mtime":1614758200294,"results":"123","hashOfConfig":"76"},{"size":3239,"mtime":1614765033681,"results":"124","hashOfConfig":"76"},{"size":3856,"mtime":1614765033678,"results":"125","hashOfConfig":"76"},{"size":6676,"mtime":1614765033680,"results":"126","hashOfConfig":"76"},{"size":2119,"mtime":1614535593047,"results":"127","hashOfConfig":"76"},{"size":880,"mtime":1612896007884,"results":"128","hashOfConfig":"76"},{"size":2320,"mtime":1613760115800,"results":"129","hashOfConfig":"76"},{"size":1078,"mtime":1613760115808,"results":"130","hashOfConfig":"76"},{"size":1236,"mtime":1613760115799,"results":"131","hashOfConfig":"76"},{"size":703,"mtime":1613760115804,"results":"132","hashOfConfig":"76"},{"size":4182,"mtime":1614661425491,"results":"133","hashOfConfig":"76"},{"size":700,"mtime":1613813115265,"results":"134","hashOfConfig":"76"},{"size":2309,"mtime":1614661425489,"results":"135","hashOfConfig":"76"},{"size":2087,"mtime":1613760115800,"results":"136","hashOfConfig":"76"},{"size":1219,"mtime":1613760115805,"results":"137","hashOfConfig":"76"},{"size":1868,"mtime":1614661425491,"results":"138","hashOfConfig":"76"},{"size":1426,"mtime":1614758200294,"results":"139","hashOfConfig":"76"},{"size":436,"mtime":1613813115266,"results":"140","hashOfConfig":"76"},{"size":923,"mtime":1614535593046,"results":"141","hashOfConfig":"76"},{"size":1038,"mtime":1614765033679,"results":"142","hashOfConfig":"76"},{"size":8494,"mtime":1614758200296,"results":"143","hashOfConfig":"76"},{"size":245,"mtime":1614758200296,"results":"144","hashOfConfig":"76"},{"size":2613,"mtime":1614758200297,"results":"145","hashOfConfig":"76"},{"size":2097,"mtime":1614758200290,"results":"146","hashOfConfig":"76"},{"size":4245,"mtime":1614758200292,"results":"147","hashOfConfig":"76"},{"size":4792,"mtime":1614765033686,"results":"148","hashOfConfig":"76"},{"size":6932,"mtime":1614765033685,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"13dxzxw",{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"152"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"152"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"152"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"152"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"152"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"152"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"152"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"152"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"152"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"152"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"152"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"152"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"152"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"152"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"152"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"152"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"152"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"152"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"152"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"152"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"152"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"152"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"152"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"152"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"152"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"152"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"152"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"152"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"152"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"152"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"152"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"152"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"152"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"152"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"152"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"152"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"152"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"152"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"152"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"152"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"152"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"334"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"152"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"152"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"152"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"152"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"152"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"152"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"152"},"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js",[],["358","359"],"/Users/pasanmadushan/Desktop/Front-end-react/src/App.js",["360"],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AwaitingShipment.js",["361","362","363"],"import {\n    Box,\n    Button,\n    Center,\n    Grid,\n    GridItem,\n    Heading,\n    VStack,\n  } from \"@chakra-ui/react\";\n  import React, { useState } from \"react\";\n  \n  import SearchBar from \"../components/SearchBar\";\n  import ShipmentCard from \"../components/ShipmentCard\";\n  \n  function AwaitingShipment() {\n    \n    const [orderlist, setActiveCategoryProducts] = useState([ \n      {\n        Order_ID: \"233-5145-789a\",\n        Varient_ID: \"1111\",\n        item_name: \"Electric tooth brush\",\n        payment: 200.0,\n        Date_paid: \"2021/2/8\",\n        Quantity :\"2\",\n        F_name: \"Rahal\",\n        L_name: \"Athukorala\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789b\",\n        Varient_ID: \"2222\",\n        item_name: \"Electric Toilet brush\",\n        payment: 100.0,\n        Date_paid: \"2021/2/6\",\n        Quantity :\"1\",\n        F_name: \"Ganesh\",\n        L_name: \"Sirisena\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789c\",\n        Varient_ID: \"3333\",\n        item_name: \"Electric pen\",\n        payment: 1500.0,\n        Date_paid: \"2021/2/7\",\n        Quantity :\"3\",\n        F_name: \"Sirimali\",\n        L_name: \"Godahewa\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789d\",\n        Varient_ID: \"4444\",\n        item_name: \"Electric grass cutter\",\n        payment: 200.0,\n        Date_paid: \"2021/1/28\",\n        Quantity :\"2\",\n        F_name: \"James\",\n        L_name: \"Vince\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789e\",\n        Varient_ID: \"5555\",\n        item_name: \"Electric machine gun\",\n        payment: 20000.0,\n        Date_paid: \"2021/2/8\",\n        Quantity :\"1\",\n        F_name: \"Xavier\",\n        L_name: \"Dhorty\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      }\n    ]);\n  \n    const searchBarText = `Search in Awaiting Shipments`;\n  \n\n  \n    return (\n      <Box\n        pt=\"150px\"\n        pl={{ base: \"10px\", sm: \"100px\" }}\n        pr={{ base: \"10px\", sm: \"100px\" }}\n      >\n        <Center mb='10px'>\n          <SearchBar text={searchBarText} />\n        </Center>\n        <Grid\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\n        >\n          <GridItem  bg=\"gray.300\" p=\"10px\">\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\n              Awaiting Shipment\n            </Heading>\n          </GridItem>\n\n          <GridItem \n          \n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\n            \n            \n              {Array(orderlist.length)\n                .fill(\"\")\n                .map((_, i) => (\n                  <ShipmentCard \n                    Order_ID={orderlist[i].Order_ID}\n                    Varient_ID= {orderlist[i].Varient_ID}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].payment}\n                    Date_paid={orderlist[i].Date_paid}\n                    Quantity={orderlist[i].Quantity}\n                    F_name= {orderlist[i].F_name}\n                    L_name= {orderlist[i].L_name}\n                    \n                  />\n                ))}\n           \n          </GridItem>\n          \n        </Grid>\n      </Box>\n    );\n  }\n  \n  export default AwaitingShipment;","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AwaitingDelivery.js",["364","365","366"],"import {\n    Box,\n    Button,\n    Center,\n    Grid,\n    GridItem,\n    Heading,\n    VStack,\n  } from \"@chakra-ui/react\";\n  import React, { useState } from \"react\";\n  import Deliverycard from \"../components/Deliverycard\";\n  import SearchBar from \"../components/SearchBar\";\n\n  \n  function AwaitingDelivery() {\n    \n    const [orderlist, setActiveCategoryProducts] = useState([ \n      {\n        Order_ID: \"233-5145-789a\",\n        Varient_ID: \"1111\",\n        item_name: \"Electric tooth brush\",\n        payment: 200.0,\n        Date_paid: \"2021/2/8\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"2\",\n        F_name: \"Rahal\",\n        L_name: \"Athukorala\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789b\",\n        Varient_ID: \"2222\",\n        item_name: \"Electric Toilet brush\",\n        payment: 100.0,\n        Date_paid: \"2021/2/6\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"1\",\n        F_name: \"Ganesh\",\n        L_name: \"Sirisena\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789c\",\n        Varient_ID: \"3333\",\n        item_name: \"Electric pen\",\n        payment: 1500.0,\n        Date_paid: \"2021/2/7\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"3\",\n        F_name: \"Sirimali\",\n        L_name: \"Godahewa\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789d\",\n        Varient_ID: \"4444\",\n        item_name: \"Electric grass cutter\",\n        payment: 200.0,\n        Date_paid: \"2021/1/28\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"2\",\n        F_name: \"James\",\n        L_name: \"Vince\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      },\n      {\n        Order_ID: \"233-5145-789e\",\n        Varient_ID: \"5555\",\n        item_name: \"Electric machine gun\",\n        payment: 20000.0,\n        Date_paid: \"2021/2/8\",\n        Date_shipped: \"2021/2/9\",\n        Quantity :\"1\",\n        F_name: \"Xavier\",\n        L_name: \"Dhorty\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n      }\n    ]);\n  \n    const searchBarText = `Search in Awaiting Deliveries`;\n  \n\n  \n    return (\n      <Box\n        pt=\"150px\"\n        pl={{ base: \"10px\", sm: \"100px\" }}\n        pr={{ base: \"10px\", sm: \"100px\" }}\n      >\n        <Center mb='10px'>\n          <SearchBar text={searchBarText} />\n        </Center>\n        <Grid\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\n        >\n          <GridItem  bg=\"gray.300\" p=\"10px\">\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\n              Awaiting Delivery\n            </Heading>\n          </GridItem>\n\n          <GridItem \n          \n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\n            \n            \n              {Array(orderlist.length)\n                .fill(\"\")\n                .map((_, i) => (\n                  <Deliverycard \n                    Order_ID={orderlist[i].Order_ID}\n                    Varient_ID= {orderlist[i].Varient_ID}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].payment}\n                    Date_paid={orderlist[i].Date_paid}\n                    Date_shipped={orderlist[i].Date_shipped}\n                    Quantity={orderlist[i].Quantity}\n                    F_name= {orderlist[i].F_name}\n                    L_name= {orderlist[i].L_name}\n                    \n                  />\n                ))}\n           \n          </GridItem>\n          \n        </Grid>\n      </Box>\n    );\n  }\n  \n  export default AwaitingDelivery;\n  ","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js",["367","368","369","370","371"],"import {\n    Box,\n    Grid,\n    GridItem,\n    useColorMode,\n    Flex,\n    Heading,\n    useDisclosure,\n    useToast,\n  } from \"@chakra-ui/react\";\n\nimport React, { useState, useEffect } from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\nimport ChangePersonalDetails from \"../components/ChangePersonalDetForm\";\n\nconst ChangePersonalDet = () => { \n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const toast = useToast();\n\n        return (\n            <Box\n            \n            pt=\"100px\"\n            // pl={{ base: \"10px\", sm: \"100px\" }}\n            // pr={{ base: \"10px\", sm: \"100px\" }} \n            >\n                \n                <Grid\n            \n            templateColumns=\"repeat(5, 1fr)\"\n            templateRows=\"repeat(1, 1fr)\"\n            \n        >        \n            <GridItem  colSpan={1} rowSpan={2} >\n                <CustomerDashSideBar page=\"customeraddress\" />\n            </GridItem>\n        \n            <GridItem colSpan={4} >\n                <Box \n                    width=\"auto\"\n                    h=\"auto\"                   \n                    overflow=\"hidden\"                    \n                    pb=\"5px\"                      \n                    >\n                    \n                  </Box>\n\n                    <Grid templateColumns=\"repeat(3)\">\n\n                        <GridItem bg='cyan.900' p='10px' colSpan={3}>\n                            <Flex> \n                                <Box  p=\"3\">\n                                <Heading as='h3' size='md' color='white'> Change Account Details </Heading> \n                                </Box>\n                                                   \n                             </Flex>\n                        </GridItem>\n\n                        <GridItem colSpan={2}>\n                              <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'>         \n                            <ChangePersonalDetails />  \n                            {/* data={ personaldet } updateDetails={updateDetails}  */}\n                            </Box>\n                       </GridItem>\n\n                       <GridItem >\n                       <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'> \n                       <ChangePasswordForm />\n                       \n                       </Box>\n                       </GridItem>\n\n                    </Grid>\n            </GridItem>\n\n         \n        </Grid>\n\n    \n            </Box>\n        )\n\n\n}\n\nexport default ChangePersonalDet","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js",["372","373","374"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,  \n    Flex,\n    Spacer ,\n    Button,\n    useDisclosure,\n    Modal,\n    ModalBody,\n    ModalContent,\n    ModalOverlay,\n    ModalCloseButton,\n    ModalHeader,\n    useToast,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\nimport React, { useState, useEffect } from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport ShipAddressses from \"../components/ShipAddressses\";\nimport AddAddress from \"../components/AddAddress\"\nimport Axios from \"axios\";\n\nconst CustomerAddress = () => {\n\n    const [address,setAddress] = useState([])\n\n    // {\n    //     id:4,\n    //     name:'chandima',\n    //     tp:'042342492',\n    //     street:'1234',\n    //     city:'jsdofjsdof',\n    //     state:'sdofjdsf',\n    //     zip:'12121'    \n                  \n    // },\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const toast = useToast()\n\n    useEffect(() => {\n        Axios.get(\"http://localhost:5000/customer/addresses\")\n        .then((Response)=>{\n            // console.log(Response.data.addresses);\n            setAddress(Response.data.addresses);\n            \n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error loading data\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }, [])\n\n    console.log(\"rendered addresses\",address)\n    \n\n    //delete an addresss\n    const deleteAddress  = (id)=>{\n        // console.log(id);\n        Axios.delete(\"http://localhost:5000/customer/addresses\",{data:{id:id}})\n        .then((Response)=>{\n            // console.log(Response);\n            setAddress(address.filter(\n                (address)=>address.address_id!==id\n            ))\n            toast({\n                position: \"bottom-right\",    \n                description: \"Shipping address deleted successfully\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n\n        \n    }\n\n    //add new address\n    const addAddress = (Address)=>{\n        // console.log(Address);\n        Axios.post(\"http://localhost:5000/customer/addresses\",{Address:Address})\n        .then((Response)=>{\n            // console.log(\"add address response\",Response)\n            var address_id = Response.data.insertId;\n            // console.log(\"address_id\",address_id);\n            var newAddress = {address_id,...Address}\n            // console.log(newAddress);\n            setAddress([...address,newAddress]);\n           \n            toast({\n                position: \"bottom-right\",    \n                description: \"New shipping address added successfully\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          });  \n\n    }\n\n    //update address\n    const updateAddress  = async(data)=>{\n        console.log('update address data ----------------')\n        console.log(data);\n        // setTasks(tasks.map(\n        //     (task)=>task.id===id?{...task,reminder:data.reminder}:task\n        //   ))\n        // await setAddress(address.map(\n        //     (address1)=>address1.id==data.id?{...address1,name:data.name}:address1\n        // ))\n        // // console.log(address[0])\n          setAddress(address.map(\n            (address1)=>(address1.id==data.id)?{...address1,data}:address1\n        ))\n          }\n\n\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    \n\n    return (\n        <Box\n        \n        pt=\"100px\"\n        // pl={{ base: \"10px\", sm: \"100px\" }}\n        // pr={{ base: \"10px\", sm: \"100px\" }} \n        >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(1, 1fr)\"\n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"customeraddress\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\n\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> My Shipping Address </Heading> \n                                    </Box>\n                                    <Spacer />\n                                    <Box p=\"1\">\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\n                                            Add Shipping Address\n                                        </Button>\n                    \n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                                            <ModalOverlay />\n                                                <ModalContent>\n                                                    <ModalHeader>Add New Shipping Address</ModalHeader>\n                                                    <ModalCloseButton />\n                                                    <ModalBody pb='5'>\n                                                    <AddAddress addAddress={addAddress} trigger={onClose}/>\n                                                     </ModalBody>\n                                                    \n                                                </ModalContent>\n                                            </Modal>\n\n                                    </Box>\n                                 \n                                 </Flex>\n                            </GridItem>\n\n                       \n                                <ShipAddressses addresses={address} deleteAddress={deleteAddress}  updateAddress={updateAddress}  />\n  \n                        </Grid>\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CustomerAddress\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/NewItem.js",["375","376","377","378","379"],"import { AddIcon } from '@chakra-ui/icons';\nimport { Box, Button,Input,Stack, VStack,Heading,Form,\n    Select, HStack,NumberInputField ,NumberInputStepper,\n    NumberDecrementStepper,NumberIncrementStepper,\n    Flex,Slider,SliderTrack,SliderFilledTrack,SliderThumb,NumberInput} from '@chakra-ui/react';\nimport axios from 'axios';\nimport React, { Component } from 'react';\n\n\nfunction NewItem(){\n   const  [value, setValue] = React.useState(0);\n   const  handleChange = (value) => setValue(value);\n   const state={\n      selectedFile: null\n  }\n    \n  const fileSelectedHandler =event=>{\n      this.setState({\n          selectedFile: event.target.files[0]\n    })\n       // console.log(event.target.files[0]);\n  }\n\n  const fileUploadHandler=()=>{\n      const fd= new FormData();\n      fd.append('image',this.state.selectedFile,this.state.selectedFile.name);\n      axios.post(\"gs://front-end-react100.appspot.com\",fd)\n      .then(res=>{console.log(res)});\n\n  }\n  const Varientmaker=()=>{\n\n  }\n    \n\n \n    return(\n        \n<Box\n        pt=\"150px\"\n        pl={{ base: \"10px\", sm: \"100px\" }}\n        pr={{ base: \"10px\", sm: \"100px\" }}\n        \n      >\n<form method=\"POST\" >\n <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\" bg=\"gray.300\" p=\"10px\">\n              List a New Item\n</Heading>\n   <Stack spacing={1} >\n    <b><>Title :</></b><Input name=\"title\"  backgroundColor=\"yellow.100\" placeholder=\"Enter title here\" size=\"md\" />\n\n    <b><>Category:</></b>\n            <Select name=\"category\" borderColor=\"yellow.300\" placeholder=\"Select Category\" w=\"40%\" bg=\"yellow.100\">\n  <option w=\"40%\"value=\"Portable Audio & Headphones\">Portable Audio & Headphones</option>\n  <option w=\"40%\"value=\"Vintage Electronics\">Vintage Electronics</option>\n  <option w=\"40%\"value=\"Vehicle Electronics & GPS\">Vehicle Electronics & GPS</option>\n  <option w=\"40%\"value=\"Radio Communication\">Radio Communication</option>\n  <option w=\"40%\"value=\"Circuit Items\">Circuit Items </option>\n  <option w=\"40%\"value=\"Surveillance & Smart Home Electronics & GPS\">Surveillance & Smart Home Electronics & GPS</option>\n  <option w=\"40%\"value=\"Multipurpose Batteries & Power\">Multipurpose Batteries & Power</option>\n  <option w=\"40%\"value=\"Cameras & Photos\">Cameras & Photos</option>\n  <option w=\"40%\"value=\"Other Consumer Electronics\">Other Consumer Electronics</option>\n            </Select>\n<b><>Varient :</></b>\n\n<Box bg=\"yellow.100\" w=\"33%\" borderRadius=\"2xl\" borderColor=\"yellow.300\" borderWidth=\"5px\">\n    <Box w=\"96%\" ml=\"2%\" borderColor=\"yellow.300\" mr=\"2%\"> \n    <b><>Varient Name :</></b>\n  <Input name=\"varientname\" backgroundColor=\"yellow.100\" placeholder=\"Enter Varient Here\" placeholderColor=\"red\" size=\"md\" />\n           \n    </Box>\n\n    <Box ml=\"2%\" mr=\"2%\">\n    <b><>Quantity :</></b>\n    <Flex>\n      <NumberInput name=\"quantity\"  maxW=\"100px\" mr=\"2rem\" value={value} onChange={handleChange} borderColor=\"yellow.300\">\n        <NumberInputField  borderColor=\"yellow.300\"/>\n        <NumberInputStepper borderColor=\"yellow.300\">\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n      <Slider  flex=\"1\" focusThumbOnChange={false} value={value} onChange={handleChange}>\n        <SliderTrack bg=\"blue.200\">\n          <SliderFilledTrack bg=\"yellow.400\" />\n        </SliderTrack>\n        <SliderThumb borderColor=\"black\" fontSize=\"sm\" boxSize=\"32px\" children={value} />\n      </Slider>\n    </Flex>\n      \n    </Box>\n    <HStack>\n    <Box w=\"50%\" ml=\"2%\" mb=\"2%\" >\n    <b><>Image:</></b>\n    <input name=\"image\" type=\"file\" onChange={fileSelectedHandler}/>\n\n    </Box> \n    <Box w=\"100%\" borderColor=\"yellow.300\" mr=\"2%\" mb=\"2%\">\n    <b><>Price:(LKR)</></b><Input name=\"price\" backgroundColor=\"yellow.100\" placeholder=\"Enter Price here\" size=\"md\" />\n    </Box>\n    </HStack>\n</Box>\n\n\n<Button w=\"33%\" ml=\"40%\" horizontalAlign=\"true\" textColor=\"Black\" bg=\"yellow.100\"  _hover={{ bg: \"yellow.300\" ,transform: \"scale(1.01)\" }} onClick={Varientmaker}><><b>+</b></>Add Varient</Button>\n\n\n\n    <b><>Discription:</></b><Input backgroundColor=\"yellow.100\" placeholder=\"Enter Discription here\" size=\"md\" />\n\n  </Stack>\n\n\n            \n<br/>\n\n    <Button Align=\"middle\" ml=\"40%\" horizontalAlign=\"true\" textColor=\"Black\" bg=\"blue.100\"  _hover={{ bg: \"blue.300\" ,transform: \"scale(1.01)\" }} onClick={fileUploadHandler}>Submit & Create Listing</Button>\n\n</form>\n</Box>\n    );    \n    \n}\nexport default NewItem;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/TrackOrder.js",["380","381"],"import React from 'react'\nimport { \n    Box,\n    Grid,\n    GridItem,\n    Heading,\n    Center,\n    useColorMode,\n    Badge,\n    Text\n        } from \"@chakra-ui/react\";\n\nconst TrackOrder = () => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n\n    return (\n        <Box \n            pt=\"110px\"\n            pl={{ base: \"10px\", sm: \"100px\" }}\n            pr={{ base: \"10px\", sm: \"100px\" }}\n        >\n            <Box mt='20px' mb='20px' p='3' bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\n                <Center><Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h3' size='md'>Track Your Order</Heading></Center>        \n            </Box>\n            <Grid\n                h=\"600px\"\n                templateRows=\"repeat(3, 1fr)\"\n                templateColumns=\"repeat(3, 1fr)\"\n                gap={4}\n            >\n                <GridItem colSpan={2}  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\n\n                <Box p='5'>\n                    <Badge mr='3' variant=\"outline\" fontSize='md' colorScheme=\"teal\">\n                    Estimated Delivery \n                    </Badge>\n                   dsdsd\n     \n                </Box>\n\n                </GridItem>\n\n                <GridItem bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\n\n                    <Box p='8'>\n                        xdsd\n                    </Box>\n\n                </GridItem>\n                <GridItem  rowSpan={2} colSpan={2} bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} />\n                <GridItem  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}/>\n            </Grid>\n\n        </Box>\n    )\n}\n\nexport default TrackOrder\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CartPage.js",["382","383","384","385"],"import { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Heading,\n  HStack,\n  Icon,\n  Img,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  SimpleGrid,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Tfoot,\n  Th,\n  Thead,\n  Tr,\n  useColorMode,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport { FaMoneyBillAlt, FaRegCreditCard } from \"react-icons/fa\";\nimport { SiPaypal } from \"react-icons/si\";\nimport { RiVisaLine } from \"react-icons/ri\";\n\nimport visa from \"payment-icons/min/flat/visa.svg\";\nimport mastercard from \"payment-icons/min/flat/mastercard-old.svg\";\n\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction CartPage() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const [cartItems, setCartItems] = useState([\n    {\n      item_ID: \"\",\n      item_name: \"\",\n      price: 0,\n      quantity: 0,\n      varient: \"\",\n      image: \"\",\n    },\n  ]);\n\n  const [shippingAddress, setShippingAddress] = useState([\n    {\n      first_Name: \"\",\n      last_Name: \"\",\n      street: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n    },\n  ]);\n\n  const [card, setCard] = useState([\n    {\n      owner: \"\",\n      card_number: \"\",\n      bank_name: \"\",\n    },\n  ]);\n\n  const [currentCard, setCurrentCard] = useState(\"none\");\n\n  const [currentShippingAddress, setCurrentShippingAddress] = useState(0);\n\n  const [paymentMethod, setPaymentMethod] = useState(0);\n\n  var TotalPrice = 0;\n\n  var cardIcon = (type) => {\n    if (type === \"visa\") {\n      return <Img src={visa} w={12} h={12} />;\n    } else if (type === \"mastercard\") {\n      return <Img src={mastercard} w={12} h={12} />;\n    }\n  };\n\n  cartItems.forEach((element) => {\n    TotalPrice = TotalPrice + element.quantity * element.price;\n  });\n\n  let { customer_id } = useParams();\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/items/cart`)\n      .then((response) => {\n        let data = response.data.items;\n        console.log(data);\n        setCartItems(data);\n      });\n    axios.get(`http://localhost:5000/customer/addresses`).then((response) => {\n      let data = response.data.addresses;\n      console.log(data);\n      setShippingAddress(data);\n    });\n    axios.get(`http://localhost:5000/customer/bankCards`).then((response) => {\n      let data = response.data.bankCards;\n      console.log(data);\n      setCard(data);\n    });\n  }, []);\n\n  const HandleRemove = (id) => {\n    axios.delete(`http://localhost:5000/items/cart/${id}`).then((response) => {\n      console.log(id);\n    });\n    axios.get(`http://localhost:5000/items/cart`).then((response) => {\n      let data = response.data.items;\n      console.log(data);\n      setCartItems(data);\n    });\n  };\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Box borderWidth=\"1px\" borderColor=\"gray.300\" p=\"50px\" mb=\"200px\">\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\n          <Icon as={FiShoppingCart} w={12} h={12} /> Cart\n        </Heading>\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th>Product</Th>\n              <Th>Product name</Th>\n              <Th>Varient</Th>\n              <Th isNumeric>Quantity</Th>\n              <Th isNumeric>Price(each)</Th>\n              <Th isNumeric>Price</Th>\n              <Th></Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {Array(cartItems.length)\n              .fill(\"\")\n              .map((_, i) => (\n                <Tr>\n                  <Td>\n                    <Img src={cartItems[i].image} w=\"50px\" h=\"50px\" />\n                  </Td>\n                  <Td>{cartItems[i].item_name}</Td>\n                  <Td>{cartItems[i].variant}</Td>\n                  <Td isNumeric>{cartItems[i].quantity}</Td>\n                  <Td isNumeric>{cartItems[i].price}</Td>\n                  <Td isNumeric>\n                    {cartItems[i].price * cartItems[i].quantity}\n                  </Td>\n                  <Td>\n                    <Button\n                      colorScheme=\"red\"\n                      variant=\"outline\"\n                      size=\"xs\"\n                      onClick={() => HandleRemove(cartItems[i].variant_id)}\n                    >\n                      Remove\n                    </Button>\n                  </Td>\n                </Tr>\n              ))}\n          </Tbody>\n          <Tfoot>\n            <Tr>\n              <Th fontSize=\"3xl\">Total</Th>\n              <Th>-</Th>\n              <Th>-</Th>\n              <Th isNumeric>-</Th>\n              <Th isNumeric>-</Th>\n              <Th isNumeric fontSize=\"3xl\">\n                Rs. {TotalPrice}\n              </Th>\n            </Tr>\n          </Tfoot>\n        </Table>\n        <Divider />\n        <SimpleGrid columns={2} spacing={5} mb=\"20px\" mt=\"50px\">\n          <Box>\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\">\n              Shipping address\n            </Heading>\n\n            <Box\n              p=\"10px\"\n              borderWidth=\"1px\"\n              bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\n            >\n              <Heading as=\"h5\" size=\"sm\">\n                {shippingAddress[currentShippingAddress].first_Name}{\" \"}\n                {shippingAddress[currentShippingAddress].last_Name}\n              </Heading>\n\n              <Text>{shippingAddress[currentShippingAddress].street}</Text>\n              <Text>{shippingAddress[currentShippingAddress].city}</Text>\n              <Text>{shippingAddress[currentShippingAddress].state}</Text>\n              <Text>{shippingAddress[currentShippingAddress].zip}</Text>\n            </Box>\n            <Box ml=\"10px\" pt=\"10px\">\n              <Menu>\n                <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n                  Address No. {currentShippingAddress + 1}\n                </MenuButton>\n                <MenuList>\n                  {Array(shippingAddress.length)\n                    .fill(\"\")\n                    .map((_, i) => (\n                      <MenuItem onClick={() => setCurrentShippingAddress(i)}>\n                        {\"Address No. \" +\n                          (i + 1) +\n                          \" - \" +\n                          shippingAddress[i].first_Name +\n                          \" \" +\n                          shippingAddress[i].last_Name +\n                          \", \" +\n                          shippingAddress[i].street +\n                          \", \" +\n                          shippingAddress[i].city +\n                          \", \" +\n                          shippingAddress[i].state +\n                          \", \" +\n                          shippingAddress[i].zip}\n                      </MenuItem>\n                    ))}\n                </MenuList>\n              </Menu>\n            </Box>\n            <Heading as=\"h2\" size=\"xl\" mb=\"20px\" mt=\"50px\">\n              Payment method\n            </Heading>\n\n            {currentCard !== \"none\" && paymentMethod === 2 ? (\n              <Box\n                p=\"10px\"\n                borderWidth=\"1px\"\n                bg={colorMode === \"light\" ? \"gray.50\" : \"gray.700\"}\n              >\n                <HStack>\n                  {cardIcon(card[currentCard].card_type)}\n                  <Box>\n                    <Text>{card[currentCard].owner}</Text>\n                    <Text>\n                      XXXX XXXX XXXX{\" \"}\n                      {card[currentCard].card_number.substr(12, 15)}\n                    </Text>\n                  </Box>\n                </HStack>\n              </Box>\n            ) : null}\n\n            <HStack pt=\"10px\">\n              <Box pl=\"10px\">\n                <Menu>\n                  <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n                    {paymentMethod === 0 ? <Text>Select method</Text> : null}\n                    {paymentMethod === 1 ? <Text>Cash on delivery</Text> : null}\n                    {paymentMethod === 2 ? <Text>Card</Text> : null}\n                    {paymentMethod === 3 ? <Text>Paypal</Text> : null}\n                  </MenuButton>\n                  <MenuList>\n                    <MenuItem\n                      icon={\n                        <Icon\n                          as={FaMoneyBillAlt}\n                          w={6}\n                          h={6}\n                          color=\"green.500\"\n                        />\n                      }\n                      onClick={() => setPaymentMethod(1)}\n                    >\n                      Cash on delivery\n                    </MenuItem>\n                    <MenuItem\n                      icon={\n                        <Icon\n                          as={FaRegCreditCard}\n                          w={6}\n                          h={6}\n                          color=\"cyan.500\"\n                        />\n                      }\n                      onClick={() => setPaymentMethod(2)}\n                    >\n                      Card\n                    </MenuItem>\n                    <MenuItem\n                      icon={<Icon as={SiPaypal} w={6} h={6} color=\"blue.500\" />}\n                      onClick={() => setPaymentMethod(3)}\n                    >\n                      paypal\n                    </MenuItem>\n                  </MenuList>\n                </Menu>\n              </Box>\n              <Box pl=\"10px\">\n                {paymentMethod === 1 ? (\n                  <Icon as={FaMoneyBillAlt} w={8} h={8} color=\"green.500\" />\n                ) : null}\n                {paymentMethod === 2 ? (\n                  <Icon as={FaRegCreditCard} w={8} h={8} color=\"cyan.500\" />\n                ) : null}\n                {paymentMethod === 3 ? (\n                  <Icon as={SiPaypal} w={8} h={8} color=\"blue.500\" />\n                ) : null}\n              </Box>\n            </HStack>\n\n            {paymentMethod === 2 ? (\n              <Box pl=\"10px\" pt=\"10px\">\n                {card.length !== 0 ? (\n                  <Box>\n                    <Menu>\n                      <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n                        Select a card\n                      </MenuButton>\n                      <MenuList>\n                        {Array(card.length)\n                          .fill(\"\")\n                          .map((_, i) => (\n                            <MenuItem\n                              icon={cardIcon(\"visa\")}\n                              onClick={() => setCurrentCard(i)}\n                            >\n                              <Text>{card[i].owner}</Text>\n                              <Text>\n                                XXXX XXXX XXXX{\" \"}\n                                {card[i].card_number.substr(12, 15)}\n                              </Text>\n                            </MenuItem>\n                          ))}\n                      </MenuList>\n                    </Menu>\n                  </Box>\n                ) : (\n                  <Text>Please Add a card</Text>\n                )}\n              </Box>\n            ) : null}\n          </Box>\n          <Box mr=\"0px\" ml=\"auto\">\n            <Box w=\"400px\" borderWidth=\"1px\" p=\"10px\">\n              <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\n                Order Total\n              </Heading>\n              <Table>\n                <Tbody variant=\"simple\" size=\"md\">\n                  <Tr>\n                    <Td>Subtotal</Td>\n                    <Td isNumeric>{TotalPrice}</Td>\n                  </Tr>\n                  <Tr>\n                    <Td>Shipping</Td>\n                    <Td isNumeric>Free</Td>\n                  </Tr>\n                  <Tr>\n                    <Td fontSize=\"2xl\">Total</Td>\n                    <Td isNumeric fontSize=\"2xl\">\n                      Rs. {TotalPrice}\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n              <Button mt=\"20px\" colorScheme=\"cyan\" w=\"100%\">\n                Checkout\n              </Button>\n            </Box>\n          </Box>\n        </SimpleGrid>\n      </Box>\n    </Box>\n  );\n}\n\nexport default CartPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/AllOrders.js",["386","387","388"],"\nimport {\n    Box,\n    Grid,\n    GridItem, \n    useColorMode,\n    Flex,\n    Heading,\n    Divider,\n    HStack,Spacer, useToast\n  } from \"@chakra-ui/react\";\n\nimport React, {useState, useEffect} from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport OrderTiles from \"..//components/OrderTiles\";\nimport Axios from \"axios\";\n  \n\nconst AllOrders = () => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const toast = useToast();\n\n    const [orderStats, setOrderStats] = useState([])\n\n    const [orders,setOrders] = useState([])\n\n    useEffect(() => {\n        Axios.get(\"http://localhost:5000/customer/allorders\")\n        .then((Response)=>{\n            // console.log(Response.data.orders);        \n            setOrders(Response.data.orders);\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error loading data\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }, [])\n\n    const mapStats = (list)=>{\n        var prep = 0\n        var shipped = 0\n        var cancelled = 0\n        var delivered = 0\n         \n        for (var i=0;i<list.length;i++){\n            if(list[i].order_status==='paid'){\n                prep= list[i].Count\n            }\n            else if (list[i].order_status==='shipped'){\n                shipped= list[i].Count\n            }\n            else if (list[i].order_status==='cancelled'){\n                cancelled= list[i].Count\n            }\n            else if (list[i].order_status==='delivered'){\n                delivered= list[i].Count\n            }\n        }\n       \n        return [prep,shipped,cancelled,delivered]\n    }\n\n    useEffect(() => {\n        Axios.get(\"http://localhost:5000/customer/allorders/stats\")\n        .then((Response)=>{\n            // console.log(\"stats\",Response.data.stats);\n            const stats = mapStats(Response.data.stats)\n            console.log(\"mapped stats\",stats)\n            setOrderStats(stats)\n            // console.log(orderStats)\n\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error loading summary\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }, [])\n\n\n    const cancelOrder = (order_id)=>{\n        Axios.put(\"http://localhost:5000/customer/allorders\",{Order_ID:order_id, Order_status:'cancelled'})\n        .then((Response)=>{\n            // console.log(\"Orders\",orders)\n            setOrders(orders.map(\n                (order)=>order.order_id===order_id?{...order,order_status:'cancelled'}:order\n              ))\n              toast({\n                position: \"bottom-right\",    \n                description: \"Successfully cancelled the order \",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error Order Cancellation. Please try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n    })    \n            \n    }\n\n    const confirmOrder = (order_id)=>{\n        Axios.put(\"http://localhost:5000/customer/allorders\",{Order_ID:order_id, Order_status:'delivered'})\n        .then((Response)=>{\n            // console.log(Response)\n            setOrders(orders.map(\n                (order)=>order.order_id===order_id?{...order,order_status:'delivered'}:order\n              ))\n              toast({\n                position: \"bottom-right\",    \n                description: \"Succesfully marked as received\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error Order Confirmation. Please try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n    })\n    }\n\n    return (\n        <Box\n        \n        pt=\"100px\"\n        // pl={{ base: \"10px\", sm: \"100px\" }}\n        // pr={{ base: \"10px\", sm: \"100px\" }} \n        >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(1, 1fr)\"\n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"customeraddress\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid>\n\n                            <GridItem bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> All Orders </Heading> \n                                    </Box>\n                            \n                                 </Flex>\n                            </GridItem>\n\n                            <GridItem p='5'>\n                              <Grid templateColumns=\"repeat(5, 1fr)\">\n                                <GridItem colSpan={4}>\n\n                                    <OrderTiles orders={orders} cancelOrder={cancelOrder} confirmOrder={confirmOrder}/>\n\n                                </GridItem>\n                                <GridItem >\n                                    <Box bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} p='10px' mt='20px' color={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>\n                                        <Heading size='sm' textAlign='center'>Summary</Heading>\n                                        <Divider mt='2' mb='2'/>\n                                        <HStack>\n                                            <Box ml='3'>Preparing </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{orderStats[0]}</Box>\n                                        </HStack>\n                                        <HStack>\n                                            <Box ml='3'>Shipped </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{orderStats[1]}</Box>\n                                        </HStack>\n                                        <HStack>\n                                            <Box ml='3'>Await Cancel </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{orderStats[3]}</Box>\n                                        </HStack>\n                                        <HStack>\n                                            <Box ml='3'>Cancelled </Box>\n                                            <Spacer />\n                                            <Box mr='3'>{orderStats[2]}</Box>\n                                        </HStack>\n                    \n                                    </Box>\n\n                                </GridItem>\n                              </Grid>\n                            </GridItem>\n                       \n                             \n                        </Grid>\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default AllOrders\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SellerDashboard.js",["389","390","391","392","393","394","395","396","397","398","399"],"import {\n    Box,\n    Center,\n    Grid,\n    GridItem,\n    Heading,\n    VStack,\n    Input,\n    Stack,\n} from \"@chakra-ui/react\";\nimport { AddIcon, MinusIcon, ArrowForwardIcon, StarIcon } from \"@chakra-ui/icons\";\n\nimport { Button, ButtonGroup } from \"@chakra-ui/react\"\nimport {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n} from \"@chakra-ui/react\"\nimport React, { useState } from \"react\";\nimport { Avatar, AvatarBadge, AvatarGroup } from \"@chakra-ui/react\"\nimport SearchBar from \"../components/SearchBar\";\n\nfunction SellerDashboard() {\n\n    return (\n        <Box\n            pt=\"150px\"\n            align='center'\n            pl={{ base: \"10px\", sm: \"100px\" }}\n            pr={{ base: \"10px\", sm: \"100px\" }}\n        >\n\n            <Grid\n                templateColumns=\"repeat(5, 1fr)\"\n                gap={0}\n                textAlign='center'\n                pb='200px'\n                w='800px'\n            >\n                <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\n                    <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\" w='300px'>\n                        <Avatar size=\"3xl\" name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" marginTop='40px' />\n                    </Heading>\n                    <VStack>\n\n                    </VStack>\n                </GridItem>\n                <GridItem\n                    rowSpan={1}\n                    colSpan={4}\n                    borderWidth=\"1px\"\n                    borderColor=\"gray.300\"\n                    p=\"20px\"\n                >\n                    <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\n                        Account Settings\n            </Heading>\n                    <FormControl id=\"email\" mt='30px'>\n                        <FormLabel>Email address</FormLabel>\n                        <Input type=\"email\" />\n                        <FormLabel mt='10px'>User Name</FormLabel>\n                        <Input type=\"string\" />\n                        <FormLabel mt='10px'>Password</FormLabel>\n                        <Input type=\"password\" />\n                        <FormLabel mt='10px'>Re-Enter Password</FormLabel>\n                        <Input type=\"password\" />\n                        <Stack direction=\"row\" spacing={4} mt=\"20px\">\n                            <Button\n                                loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\n                                Update\n  </Button>\n                        </Stack>\n                    </FormControl>\n                </GridItem>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default SellerDashboard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CardDetails.js",["400","401"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,  \n    Flex,\n    Spacer ,\n    Button,\n    useDisclosure,\n    Modal,\n    ModalBody,\n    ModalContent,\n    ModalOverlay,\n    ModalCloseButton,\n    ModalHeader,\n    useToast,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\nimport React, { useState, useEffect } from \"react\";\nimport AddBankCard from \"../components/AddBankCard\";\nimport BankCards from \"../components/BankCards\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport Axios from \"axios\";\n\nconst CardDetails = () => {\n\n    const [bankCards,setBankCards] = useState([])\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const toast = useToast()\n\n    useEffect(() => {\n        Axios.get(\"http://localhost:5000/customer/bankCards\")\n        .then((Response)=>{\n            // console.log(Response.data.addresses);\n            setBankCards(Response.data.bankCards);\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error loading data\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }, [])\n\n\n    //delete a card\n    const deleteBankCard  = (card_id)=>{\n\n        Axios.delete(\"http://localhost:5000/customer/bankCards\",{data:{card_id:card_id}})\n        .then((Response)=>{\n            // console.log(Response);\n            setBankCards(bankCards.filter(\n                (bankCard)=>bankCard.card_id!==card_id\n            ))\n            toast({\n                position: \"bottom-right\",    \n                description: \"Bank Card deleted successfully\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }\n\n    //add new card\n    const addBankCard = (CardDetails)=>{\n\n        Axios.post(\"http://localhost:5000/customer/bankCards\",{CardDetails:CardDetails})\n        .then((Response)=>{\n            \n            if (Response.data.success===true){\n                \n                var card_id = Response.data.insertId;\n                var newCard = {card_id,...CardDetails}\n                setBankCards([...bankCards,newCard]);\n           \n                toast({\n                    position: \"bottom-right\",    \n                    description: \"New payment method added successfully\",\n                    status: \"success\",\n                    duration: 5000,\n                    isClosable: true,\n                })\n            }\n            else{\n\n                toast({\n                    position: \"bottom-right\",    \n                    description: \"Card Number Already Exists\",\n                    status: \"error\",\n                    duration: 5000,\n                    isClosable: true,\n                })\n\n            }\n            \n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          });       \n\n    }\n\n   \n    const { colorMode, toggleColorMode } = useColorMode();\n\n    \n\n    return (\n        <Box   pt=\"100px\">\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(1, 1fr)\"\n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"customeraddress\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\n\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> Card & Bank Details </Heading> \n                                    </Box>\n                                    <Spacer />\n                                    <Box p=\"1\">\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\n                                            Add New Payment Method\n                                        </Button>\n                    \n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                                            <ModalOverlay />\n                                                <ModalContent>\n                                                    <ModalHeader>Add New Payment Method</ModalHeader>\n                                                    <ModalCloseButton />\n                                                    <ModalBody pb='5'>\n                                                    <AddBankCard addBankCard={addBankCard} trigger={onClose}/>\n                                                     </ModalBody>\n                                                    \n                                                </ModalContent>\n                                            </Modal>\n\n                                    </Box>\n                                 \n                                 </Flex>\n                            </GridItem>\n\n                                <BankCards bankcards={bankCards} deleteBankCard={deleteBankCard} />\n                                \n                        </Grid>\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CardDetails\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/SignUp.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/FeedbackPage.js",["402","403","404","405","406","407","408","409","410","411"],"import {\n  Box,\n  Center,\n  Heading,\n  Image,\n  SimpleGrid,\n  Textarea,\n  Text,\n  useColorMode,\n  Badge,\n} from \"@chakra-ui/react\";\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  AddIcon,\n  MinusIcon,\n  ArrowForwardIcon,\n  StarIcon,\n} from \"@chakra-ui/icons\";\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\nimport SearchBar from \"../components/SearchBar\";\n\nfunction FeedbackPage(props) {\n  let { id } = useParams();\n\n  const [rating, setRating] = useState(2);\n\n  const [data, setData] = useState({\n    item_ID: \"233d\",\n    item_name: \"Electric tooth brush\",\n    category: \"electronic\",\n    price: 200.0,\n    orders: 345,\n    description:\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n    status: \"Available\",\n    feedbacks: [\n      {\n        customer_name: \"jof hagi\",\n        customer_dp: \"jof hagi\",\n        comment: \"asdasds asdasd sad\",\n        rating: 4,\n        reply: [\"sfsdfsd\", \"Thank you\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"gendi gahnadi\",\n        customer_dp: \"jof hagi\",\n        comment: \"hgfhf dghhdgf dfgshssdd\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n    ],\n    variants: [\n      {\n        varient_name: \"white 2 brushes\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n        color: \"green\",\n        details: \"\",\n        Quantity: 450,\n      },\n      {\n        varient_name: \"pink 2 brushes with bateries\",\n        image:\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\n        color: \"pink\",\n        details: \"\",\n        Quantity: 230,\n      },\n      {\n        varient_name: \"two heads only\",\n        image:\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\n        color: \"blue\",\n        details: \"\",\n        Quantity: 500,\n      },\n    ],\n  });\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Center mb=\"20px\">\n        <SearchBar text=\"I'm shopping for\" />\n      </Center>\n      <SimpleGrid\n        columns={2}\n        spacing={5}\n        minChildWidth=\"400px\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"gray.300\"\n      >\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\n          <Image\n            src={data.variants[0].image}\n            w=\"auto\"\n            h=\"auto\"\n            alt=\"image\"\n            fit\n          />\n        </Box>\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          overflow=\"hidden\"\n          p={{ base: \"5px\", sm: \"20px\" }}\n        >\n          <Heading as=\"h2\" size=\"2xl\">\n            Submit your feedback...\n          </Heading>\n\n          <Text fontSize=\"6xl\">{data.item_name}</Text>\n\n          <Badge variant=\"outline\" colorScheme=\"yellow\" fontSize='lg'>\n            {data.category}\n          </Badge>\n\n          <Box d=\"flex\" mt=\"10\" alignItems=\"center\">\n            {Array(5)\n              .fill(\"\")\n              .map((_, i) => (\n                <StarIcon\n                  key={i}\n                  color={i < rating ? \"cyan.500\" : \"cyan.100\"}\n                  onClick={() => setRating(i + 1)}\n                  boxSize=\"50px\"\n                  cursor=\"pointer\"\n                />\n              ))}\n          </Box>\n          <form>\n            <Textarea mt=\"30px\" placeholder=\"Type your comment here...\" />\n            <Stack direction=\"row\" spacing={4} mt=\"20px\">\n              <Button\n                loadingText=\"Submitting\"\n                type=\"submit\"\n                rightIcon={<ArrowForwardIcon />}\n                colorScheme=\"teal\"\n                variant=\"outline\"\n              >\n                Leave Feedback\n              </Button>\n            </Stack>\n          </form>\n        </Box>\n      </SimpleGrid>\n    </Box>\n  );\n}\n\nexport default FeedbackPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Seller/SellerHome.js",["412","413","414"],"import React from \"react\";\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\nimport BottomItems from \"../../components/Footer/BottomItems\";\nimport Footer from \"../../components/Footer/Footer\";\nimport SearchBarHome from \"../../components/SearchBarHome\";\nimport Middle from \"../../components/Seller/Middle\";\nimport Card from \"../../components/Seller/Card\";\nimport { Box, Flex, Skeleton, Stack } from \"@chakra-ui/react\";\nimport { AiFillExperiment } from \"react-icons/ai\";\n\nfunction SellerHome() {\n  console.log(\"SellerHome\")\n  return (\n    <>\n    <SearchBarHome />\n      <Middle />\n      <Stack mb='25px' p='10px'>\n                <Skeleton height=\"40px\" />\n                <Skeleton height=\"20px\" />\n                <Skeleton height=\"10px\" />\n              </Stack>\n      <div className=\"buttons\" p=\"10px\">\n        <Card\n          imageUrl=\"./img/svg-1.svg\"\n          imageAlt=\"User\"\n          type=\"Awaiting Shipment Orders\"\n          count=\"34 new orders received today\"\n        />\n        <Card\n          imageUrl=\"./img/svg-5.svg\"\n          imageAlt=\"User\"\n          type=\"Awaiting Delivery Orders \"\n          count=\"20 orders waiting for delivery\"\n        />\n        <Card\n          imageUrl=\"./img/svg-2.svg\"\n          imageAlt=\"User\"\n          type=\"All Orders\"\n          count=\"5100 total orders\"\n        />\n        <Card\n          imageUrl=\"./img/svg-8.svg\"\n          imageAlt=\"User\"\n          type=\"My Items\"\n          count=\"You have listed 20 items\"\n        />\n        <Card\n          imageUrl=\"./img/svg-6.svg\"\n          imageAlt=\"User\"\n          type=\"List New Item\"\n          count=\"\"\n        />\n      </div>\n      <BottomItems />\n      <Footer />\n      <BottomFooter shopName=\"Electrica\" />\n    </>\n  );\n}\n\nexport default SellerHome;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/ProtectedRoute.js",["415"],"import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n\nfunction ProtectedRoute({isAuth: isAuth, component: Component, ...rest}) {\n    return (\n\n     <Route {...rest} render={props => {\n        if(isAuth) {\n            return <Component/>;\n        } else {\n            return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n        }\n        }} />\n    );\n}\n\nexport default ProtectedRoute\n",["416","417"],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js",["418","419","420","421","422","423"],"import {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  IconButton,\n  Image,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  SimpleGrid,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  useColorMode,\n  useDisclosure,\n  Modal\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nimport { AddIcon, MinusIcon, StarIcon } from \"@chakra-ui/icons\";\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\nimport SearchBar from \"../components/SearchBar\";\nimport axios from \"axios\";\nimport { arrayBufferToBinaryString } from \"blob-util\";\n\nimport ErrorModel from \"../components/ErrorModel\";\nimport { render } from \"@testing-library/react\";\n\nfunction SpecificProductPage() {\n  let { id } = useParams();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const [serverResponse, setServerResponse] = useState(\"\");\n\n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\n\n  const quantity_inc = () => {\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\n  };\n  const quantity_dec = () => {\n    if (currentOrder.quantity > 0)\n      setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\n  };\n  const [data, setData] = useState({\n    item_ID: \"\",\n    item_name: \"\",\n    category_name: \"\",\n    price: 0,\n    num_of_orders: 0,\n    description: \"\",\n    status: \"\",\n    image: \"\",\n    feedbacks: [\n      {\n        feedback_ID: \"\",\n        user_ID: \"\",\n      },\n    ],\n    variants: [\n      {\n        variant_ID: \"\",\n        variant_name: \"\",\n        image: \"\",\n        color: \"\",\n        size: \"\",\n        specificDetail: \"\",\n        quantity: \"\",\n      },\n    ],\n  });\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/items/specificitem/${id}`)\n      .then((response) => {\n        let data = response.data.items;\n        console.log(data);\n        setData(data);\n        setCurrentOrder({\n          ...currentOrder,\n          varient_id: data.variants[0].variant_id,\n        });\n      });\n  }, []);\n\n  const HandleClickAddtoCart = () => {\n    if(currentOrder.quantity <= 0){\n      setServerResponse(\"Select the Quntitiy\");\n      onOpen();\n    }else{\n      axios\n      .post(`http://localhost:5000/items/specificitem/addtocart`, {\n        cart_id: \"3\",\n        varient_id: currentOrder.varient_id,\n        quantity: currentOrder.quantity,\n      })\n      .then((response) => {\n        console.log(response);\n        setServerResponse(\"Item added to cart\");\n        onOpen();\n      })\n      .catch((error) => {\n        console.log(error.response.data.message);\n        setServerResponse(error.response.data.message.sqlMessage);\n        onOpen();\n      });\n    }\n    \n  };\n\n  const HandleClickBuyNow = () => {\n    if(currentOrder.quantity <= 0){\n      setServerResponse(\"Select the Quntitiy\");\n      onOpen();\n    }else{\n      axios\n      .post(`http://localhost:5000/items/specificitem/addtocart`, {\n        cart_id: \"3\",\n        varient_id: currentOrder.varient_id,\n        quantity: currentOrder.quantity,\n      })\n      .then((response) => {\n        console.log(response);\n        setServerResponse(\"Item added to cart\");\n      })\n      .catch((error) => {\n        console.log(error.response.data.message);\n        setServerResponse(error.response.data.message.sqlMessage);\n      });\n\n    }\n    \n  };\n\n  var imageStack = new Array(data.variants.length)\n    .fill(0)\n    .map((zero, index) => (\n      <Box\n        cursor=\"pointer\"\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\n        borderColor=\"gray.500\"\n        onClick={() =>\n          setCurrentOrder({\n            ...currentOrder,\n            varient: index,\n            varient_id: data.variants[index].variant_id,\n          })\n        }\n      >\n        <Image\n          src={`data:image/png;base64,${arrayBufferToBinaryString(\n            data.variants[index].image ? data.variants[index].image.data : null\n          )}`}\n          w=\"100px\"\n          h=\"100px\"\n          alt=\"image\"\n        />\n      </Box>\n    ));\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Center mb=\"20px\">\n        <SearchBar text=\"I'm shopping for\" />\n      </Center>\n\n\n      <SimpleGrid\n        columns={2}\n        spacing={5}\n        minChildWidth=\"400px\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"gray.300\"\n      >\n\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\n          <Image\n            src={`data:image/png;base64,${arrayBufferToBinaryString(\n              data.image ? data.image.data : null\n            )}`}\n            w=\"400px\"\n            h=\"400px\"\n            alt=\"image\"\n            fit\n          />\n        </Box>\n\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          overflow=\"hidden\"\n          p={{ base: \"5px\", sm: \"20px\" }}\n        >\n          <Heading as=\"h2\" size=\"2xl\">\n            {data.item_name}\n          </Heading>\n\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\n            {data.category}\n          </Text>\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n            {Array(5)\n              .fill(\"\")\n              .map((_, i) => (\n                <StarIcon\n                  key={i}\n                  color={i < data.rating ? \"cyan.500\" : \"cyan.300\"}\n                />\n              ))}\n            <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\n              {data.feedbacks.length} reviews &bull; {data.num_of_orders} orders\n            </Box>\n          </Box>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Varient\n          </Heading>\n          <Text mt=\"10px\" color=\"green.500\">\n            {data.variants[currentOrder.varient].variant_name}\n          </Text>\n          <HStack>{imageStack}</HStack>\n          <HStack spacing=\"40px\">\n            <Box>\n              <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n                Color\n              </Heading>\n              <Text mt=\"5px\">{data.variants[currentOrder.varient].color}</Text>\n            </Box>\n            <Box>\n              <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n                Size\n              </Heading>\n              <Text mt=\"5px\">{data.variants[currentOrder.varient].size}</Text>\n            </Box>\n          </HStack>\n\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Specific details of the variant\n          </Heading>\n          <Text mt=\"5px\">\n            {data.variants[currentOrder.varient].specific_detail}\n          </Text>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Quantity\n          </Heading>\n          <HStack mt=\"10px\">\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<AddIcon />}\n              onClick={quantity_inc}\n            />\n            <Text>{currentOrder.quantity}</Text>\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<MinusIcon />}\n              onClick={quantity_dec}\n            />\n            <Text pl=\"20px\" color=\"red.500\">\n              {data.variants.length === 0\n                ? null\n                : data.variants[currentOrder.varient].quantity}{\" \"}\n              items are available\n            </Text>\n          </HStack>\n          <Heading as=\"h4\" size=\"xl\" mt=\"20px\">\n            Price\n          </Heading>\n          <Text fontSize=\"4xl\">\n            Rs. {data.variants[currentOrder.varient].price}\n          </Text>\n          <HStack mt=\"20px\">\n            <Button onClick={HandleClickBuyNow} colorScheme=\"cyan\" color=\"white\" size=\"lg\">\n              Buy now\n            </Button>\n            <Button\n              onClick={HandleClickAddtoCart}\n              colorScheme=\"orange\"\n              size=\"lg\"\n              variant=\"outline\"\n            >\n              Add to cart\n            </Button>\n          </HStack>\n        </Box>\n      </SimpleGrid>\n      <Box\n        width=\"auto\"\n        h=\"auto\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"gray.300\"\n        overflow=\"hidden\"\n        p={{ base: \"5px\", sm: \"20px\" }}\n        mt=\"20px\"\n        mb=\"10px\"\n      >\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\n          Description\n        </Heading>\n        <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\n          {data.description}\n        </Text>\n      </Box>\n      <Box\n        width=\"auto\"\n        h=\"auto\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"gray.300\"\n        overflow=\"hidden\"\n        p={{ base: \"5px\", sm: \"20px\" }}\n        mt=\"20px\"\n        mb=\"100px\"\n      >\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\n          Reviews\n        </Heading>\n\n        <ReviewCountPreview feedbacks={data.feedbacks} />\n        <Tabs>\n          <TabList>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> All\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 5\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 4\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 3\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 2\n            </Tab>\n            <Tab>\n              <StarIcon color=\"cyan.500\" /> 1\n            </Tab>\n          </TabList>\n\n          <TabPanels>\n            <TabPanel>\n              <CategorizedReviewPreview\n                feedbacks={data.feedbacks}\n                rating=\"all\"\n              />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={5} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={4} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={3} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={2} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={1} />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Modal Title</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {serverResponse}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n}\n\nexport default SpecificProductPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js",["424","425","426","427","428"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Avatar,\n    Divider,\n    Heading,\n    SimpleGrid,\n    Text,\n    useColorMode,\n    useToast\n  } from \"@chakra-ui/react\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport Axios from \"axios\";\n\nconst CustomerDashboard = () => {\n  const toast = useToast();\n\n  const [userdata, setUserdata] = useState([]);\n  const [orderNum, setOrderNum] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/customer/user\")\n      .then((Response) => {\n        console.log(Response.data.user[0]);\n        // console.log(Response.data.det);\n        setUserdata(Response.data.user[0]);\n        const det = arrangeData(Response.data.det);\n        setOrderNum(det);\n      })\n      .catch((err) => {\n        toast({\n          position: \"bottom-right\",\n          description: \"Loading Error\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n      });\n  }, []);\n\n  const arrangeData = (data) => {\n    var newdata = {\n      Shipped: 0,\n      Preparing: 0,\n      Awaiting_Cancel: 0,\n      Cancelled: 0,\n      Delivered: 0,\n    };\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].Order_status === \"shipped\") {\n        newdata.Shipped += 1;\n      } else if (data[i].Order_status === \"paid\") {\n        newdata.Preparing += 1;\n      } else if (data[i].Order_status === \"returned\") {\n        newdata.Awaiting_Cancel += 1;\n      } else if (data[i].Order_status === \"cancelled\") {\n        newdata.Cancelled += 1;\n      } else if (data[i].Order_status === \"delivered\") {\n        newdata.Delivered += 1;\n      }\n    }\n    // console.log(newdata);\n    return newdata;\n  };\n\n  // console.log(orderNum);\n\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Box\n      pt=\"100px\"\n      // pl={{ base: \"10px\", sm: \"100px\" }}\n      // pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Grid templateColumns=\"repeat(5, 1fr)\" templateRows=\"repeat(2, 1fr)\">\n        <GridItem colSpan={1} rowSpan={2}>\n          <CustomerDashSideBar page=\"dashboard\" />\n        </GridItem>\n\n        <GridItem colSpan={4} m={5} mt={8}>\n          <Box\n            width=\"auto\"\n            h=\"auto\"\n            overflow=\"hidden\"\n            p=\"10px\"\n            pb=\"5px\"\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            borderRadius=\"10px\"\n          >\n            <Grid templateRows=\"repeat(2, 1fr)\" gap={4}>\n              <GridItem p=\"10px\">\n                <SimpleGrid columns={2} spacing={5}>\n                  <Box>\n                    <Avatar\n                      size=\"xl\"\n                      // name={userdata[0].First_Name + \" \" + userdata[0].Last_Name}\n                      src=\"https://images.unsplash.com/photo-1553267751-1c148a7280a1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80\"\n                    />\n                  </Box>\n                  <Box>\n                    <Heading size=\"lg\">\n                      {\" \"}\n                      Hello, {userdata.first_name +\n                        \" \" +\n                        userdata.last_name}{\" \"}\n                    </Heading>\n                  </Box>\n                </SimpleGrid>\n              </GridItem>\n\n              <GridItem>\n                <Box\n                  bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                  borderRadius=\"md\"\n                  color=\"white\"\n                >\n                  <SimpleGrid columns={5} spacing={5} pt=\"10px\" pb=\"10px\">\n                    <Box textAlign=\"center\">\n                      <Heading\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                        as=\"h4\"\n                        size=\"lg\"\n                      >\n                        {\" \"}\n                        {orderNum.Preparing}{\" \"}\n                      </Heading>\n                      <Text\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                      >\n                        {\" \"}\n                        Awaiting Shipment\n                      </Text>\n                    </Box>\n\n                    <Box textAlign=\"center\">\n                      <Heading\n                        as=\"h4\"\n                        size=\"lg\"\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                      >\n                        {\" \"}\n                        {orderNum.Shipped}{\" \"}\n                      </Heading>\n\n                      <Text\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                      >\n                        Shipped\n                      </Text>\n                    </Box>\n\n                    <Box textAlign=\"center\">\n                      <Heading\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                        as=\"h4\"\n                        size=\"lg\"\n                      >\n                        {\" \"}\n                        {orderNum.Awaiting_Cancel}{\" \"}\n                      </Heading>\n                      <Text\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                      >\n                        Returned\n                      </Text>\n                    </Box>\n                    <Box textAlign=\"center\">\n                      <Heading\n                        as=\"h4\"\n                        size=\"lg\"\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                      >\n                        {\" \"}\n                        {orderNum.Cancelled}{\" \"}\n                      </Heading>\n                      <Text\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                      >\n                        Cancelled\n                      </Text>\n                    </Box>\n                    <Box textAlign=\"center\">\n                      <Heading\n                        as=\"h4\"\n                        size=\"lg\"\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                      >\n                        {\" \"}\n                        {orderNum.Delivered}{\" \"}\n                      </Heading>\n\n                      <Text\n                        textColor={\n                          colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"\n                        }\n                      >\n                        Delivered\n                      </Text>\n                    </Box>\n                  </SimpleGrid>\n                </Box>\n              </GridItem>\n            </Grid>\n          </Box>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default withRouter(CustomerDashboard);\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js",["429","430"],"import {\n  Box,\n  Button,\n  Center,\n  Grid,\n  GridItem,\n  Heading,\n  useColorMode,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\n\nimport SearchBar from \"../components/SearchBar\";\nimport ProductCard from \"../components/ProductCard\";\nimport axios from \"axios\";\n\nfunction CategoryPage() {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/items/categories\").then((response) => {\n      let data = response.data.items;\n      data.push(\"All Categories\");\n      setCategories(data);\n    });\n\n    axios\n    .get(`http://localhost:5000/items`)\n    .then((response) => {\n      let data = response.data.items;\n      setActiveCategoryProducts(data);\n\n    });\n  }, []);\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  const [activeCategory, setActiveCategory] = useState();\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([]);\n\n\n  var searchBarText = `Search in ${activeCategory}`;\n\n  const HandleClick = (category) => {\n    setActiveCategory(category);\n    if(category!==\"All Categories\"){\n      var url = `http://localhost:5000/items/search/${category}`;\n    }else{\n      var url = `http://localhost:5000/items`;\n    }\n\n    axios\n    .get(url)\n    .then((response) => {\n      let data = response.data.items;\n      setActiveCategoryProducts(data);\n\n    });\n  \n  };\n  const HandleChange = (event) => {\n    var value = event.target.value;\n    axios\n    .post(\"http://localhost:5000/items\",{\n      \"category\":`${activeCategory}`,\n      \"item_name\":`${value}`\n    })\n    .then((response) => {\n      let data = response.data.items;\n      setActiveCategoryProducts(data);\n    });\n  \n  };\n\n\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", md: \"100px\" }}\n      pr={{ base: \"10px\", md: \"100px\" }}\n    >\n      <Center mb=\"10px\">\n        <SearchBar text={searchBarText} onChange={HandleChange}/>\n      </Center>\n      <Grid\n        templateRows=\"repeat(1, 1fr)\"\n        templateColumns=\"repeat(5, 1fr)\"\n        gap={0}\n        pb=\"200px\"\n      >\n        <GridItem\n          rowSpan={1}\n          colSpan={1}\n          bg={colorMode === \"light\" ? \"gray.200\" : \"gray.600\"}\n          p=\"10px\"\n        >\n          <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\n            Categories\n          </Heading>\n          <VStack>\n            {Array(categories.length)\n              .fill(\"\")\n              .map((_, i) =>\n                categories[i] === activeCategory ? (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"cyan\"\n                    isActive\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                ) : (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"cyan\"\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                )\n              )}\n          </VStack>\n        </GridItem>\n        <GridItem\n          rowSpan={1}\n          colSpan={4}\n          borderWidth=\"1px\"\n          borderColor=\"gray.300\"\n          p=\"20px\"\n        >\n          <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\n            {activeCategory}\n          </Heading>\n          <Grid\n            h=\"auto\"\n            templateColumns={{\n              md: \"repeat(1, 1fr)\",\n              lg: \"repeat(3, 1fr)\",\n              xl: \"repeat(4, 1fr)\",\n            }}\n            gap={2}\n          >\n            {Array(activeCategoryProducts.length)\n              .fill(\"\")\n              .map((_, i) => (\n                <ProductCard\n                  item_id = {activeCategoryProducts[i].item_id} \n                  title={activeCategoryProducts[i].item_name}\n                  imageUrl={activeCategoryProducts[i].image}\n                  itemName={activeCategoryProducts[i].item_name}\n                  category={activeCategoryProducts[i].category_name}\n                  price={activeCategoryProducts[i].price}\n                  orders={activeCategoryProducts[i].num_of_orders}\n                  status={activeCategoryProducts[i].status}\n                  rating={activeCategoryProducts[i].rating}\n                  reviews={activeCategoryProducts[i].reviews}\n                />\n              ))}\n          </Grid>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default CategoryPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/Home.js",["431"],"import React from \"react\";\nimport Footer from \"../../components/Footer/Footer\";\nimport ShopNow from \"../../components/ShopNow\";\nimport Pricing from \"../../components/Pricing/Pricing\";\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\nimport BottomItems from \"../../components/Footer/BottomItems\";\nimport SearchBarHome from \"../../components/SearchBarHome\";\nimport ImageSlider from \"../../components/Slider/ImageSlider\";\nimport { SliderData } from \"../../components/Slider/SliderData\";\n// import checkLogin from \"./checkLogin\";\nimport { useHistory } from 'react-router'\nfunction Home() {\nconsole.log(\"Home page\")\n  return (\n    <>\n    <SearchBarHome />\n    <ShopNow />\n    \n      \n      <ImageSlider slides={SliderData} />;\n      <Pricing heading=''/>\n      <BottomItems />\n      <Footer />\n      <BottomFooter shopName=\"Electrica\"/>\n      \n    </>\n  );\n}\n\nexport default Home;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js",["432","433","434","435"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  Button,\n  useColorMode,\n  IconButton,\n  ReactRouterLink,\n  Img,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport Axios from \"axios\";\n\nfunction Navbar(props) {\n  var his=useHistory();\n  const MenuItems = ({ children }) => (\n    <Button\n      mt={{ base: 4, md: 0 }}\n      mr={6}\n      display=\"block\"\n      colorScheme=\"teal.500\"\n      variant=\"link\"\n      color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.100\"}\n    >\n      {children}\n    </Button>\n  );\n\n  const [show, setShow] = React.useState(false);\n  const handleToggle = () => setShow(!show);\n  \n  const { colorMode, toggleColorMode } = useColorMode();\n  console.log(\"Navigation bar\")\n  function handleLogOut() {\n    Axios.post(\"http://localhost:5000/customer/logout\").then((response) => {\n      return <Redirect to='/signin' />\n    })\n  }\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      pt=\"1.0rem\"\n      bg={colorMode === \"light\" ? \"white\" : \"#101522\"}\n      color=\"white\"\n      position=\"fixed\"\n      top=\"0\"\n      width=\"100%\"\n      zIndex=\"10000\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <Img ml=\"1.5rem\" src=\"../logo.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\n      </Flex>\n\n      <IconButton\n      display={{base:'block', md:'none'}}\n        variant=\"outline\"\n        colorScheme=\"cyan\"\n        icon={<HamburgerIcon />}\n        onClick={handleToggle}\n        mr='20px'\n      />\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ base: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n        pl=\"20px\"\n      >\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/\">\n            Home\n          </Link>\n        </MenuItems>\n        <MenuItems>\n        {props.Auth.userID === 1 ? <Link as={ReactRouterLink} to=\"/sellerdashboard/1\">\n            Dashboard\n          </Link> : <Link as={ReactRouterLink} to=\"/customerdashboard\">\n            Dashboard\n          </Link>}\n          \n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/\">\n            About us\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/\">\n            Help\n          </Link>\n        </MenuItems>\n      </Box>\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <IconButton\n          aria-label=\"Call Segun\"\n          size=\"lg\"\n          icon={<Icon as={FiShoppingCart} w={8} h={8}  />}\n          mr={{ base: \"5px\", md: \"20px\" }}\n          variant=\"ghost\"\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n        />\n        <IconButton\n          aria-label=\"Call Segun\"\n          size=\"md\"\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n          mr={{ base: \"5px\", md: \"20px\" }}\n          variant=\"ghost\"\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          onClick={toggleColorMode}\n        />\n        <a href=\"/signin\">\n          {props.Auth.isLoggedIn ? <Button\n            type=\"button\"\n            border=\"1px\"\n            variant=\"ghost\"\n            mr=\"1.5rem\"\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n            onClick= {handleLogOut}\n          >\n            Log Out\n          </Button>: <Button\n            type=\"button\"\n            border=\"1px\"\n            variant=\"ghost\"\n            mr=\"1.5rem\"\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          >\n            Log In\n          </Button> }\n          \n        </a>\n      </Box>\n\n      <Box\n        w=\"100%\"\n        h=\"5px\"\n        b=\"0px\"\n        mt=\"10px\"\n        bg={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n      />\n    </Flex>\n  );\n}\n\nexport default Navbar;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Customer/SignIn.js",["436","437","438"],"import React, { useEffect } from \"react\";\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\nimport BottomItems from \"../../components/Footer/BottomItems\";\nimport Footer from \"../../components/Footer/Footer\";\nimport SearchBarHome from \"../../components/SearchBarHome\";\nimport LogIn from \"../../components/SignIn/LogIn\";\nimport service from \"../../API_Service/checkLogin\";\nimport Axios from \"axios\";\n\nfunction SignIn(props) {\n\n  // const [isAuthorized, setIsAuthorized] = useState(false);\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // const [LoggedIn, setLoggedIn] = useState(false);\n  // checkAuthorization(response => {\n  //   setIsAuthorized(response);\n  // })\n  // checkAuthentication(response => {\n  //   setIsAuthenticated(response);\n  // })\n\n  // if (isAuthorized === isAuthenticated) {\n  //   setLoggedIn(true);\n  // } else {\n  //   setLoggedIn(false);\n  // }\n  \n  \n  return (\n    <>\n      <SearchBarHome />\n\n      <LogIn setSignInClicked={props.setSignInClicked}/>\n      <BottomItems />\n      <Footer />\n      <BottomFooter shopName=\"Electrica\" />\n    </>\n  );\n}\n\nexport default SignIn;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipmentCard.js",["439","440","441","442","443","444","445","446","447"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\n/*                  Order_ID={orderlist[i].Order_ID}\n                    Varient_ID= {orderlist[i].Varient_ID}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].payment}\n                    Date_paid={orderlist[i].Date_paid}\n                    Quantity={orderlist[i].Quantity}\n                    F_name= {orderlist[i].F_name}\n                    L_name= {orderlist[i].L_name}*/\n\nfunction ShipmentCard(props) {\n  return (\n \n    <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\n        < HStack>  \n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \n        \n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\n        </Box>\n\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box fontWeight=\"bold\"><Text color=\"red.600\"   fontSize=\"lg\">\n            {props.Order_ID}\n          </Text></Box>\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\n            {props.F_name} {props.L_name}\n          </Text></Box>\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\n            {props.item_name} \n          </Text></Box>\n        </Box>\n        \n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\n        Quantity: <b>{props.Quantity}</b>\n          </Text></Box>\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\n        Varient: <b>{props.Varient_ID} </b>\n          </Text></Box>\n        </Box>\n       \n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \n        <Text color=\"blue.700\" fontSize=\"2lg\">\n            Rs. {props.payment}\n          </Text>\n        </Box>\n\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \n        <Text color=\"gray.600\" fontSize=\"lg\">\n            Paid On: {props.Date_paid}\n          </Text>\n        </Box>\n        </HStack>\n    </Box>\n  );\n}\n\nexport default ShipmentCard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Deliverycard.js",["448","449","450","451","452","453","454","455","456"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\n/*                  Order_ID={orderlist[i].Order_ID}\n                    Varient_ID= {orderlist[i].Varient_ID}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].payment}\n                    Date_paid={orderlist[i].Date_paid}\n                    Quantity={orderlist[i].Quantity}\n                    F_name= {orderlist[i].F_name}\n                    L_name= {orderlist[i].L_name}*/\n\nfunction Deliverycard(props) {\n  return (\n \n    <Box maxW=\"parent\"  _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }}  borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\n        < HStack>  \n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \n        \n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\n        </Box>\n\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box fontWeight=\"bold\"><Text color=\"red.600\"   fontSize=\"lg\">\n            {props.Order_ID}\n          </Text></Box>\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\n            {props.F_name} {props.L_name}\n          </Text></Box>\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\n            {props.item_name} \n          </Text></Box>\n        </Box>\n        \n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\n        Quantity: <b>{props.Quantity}</b>\n          </Text></Box>\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\n        Varient: <b>{props.Varient_ID} </b>\n          </Text></Box>\n        </Box>\n       \n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \n        <Text color=\"blue.700\" fontSize=\"2lg\">\n            Rs. {props.payment}\n          </Text>\n        </Box>\n\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   >\n            <Box>\n        <Text color=\"gray.600\" fontSize=\"lg\">\n           Paid On: {props.Date_paid}\n          </Text></Box> \n          <Box> <Text color=\"gray.600\" fontSize=\"lg\">\n           Shipped On: {props.Date_shipped}\n          </Text></Box> \n        </Box>\n        </HStack>\n    </Box>\n  );\n}\n\nexport default Deliverycard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePasswordForm.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js",["457","458","459","460","461","462"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,\n    Text,\n    Divider,\n    Link,\n    Button,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\n\n\nconst CustomerDashSideBar = ({page}) => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    const sidebarButton = {\n        width:'80%',   \n        marginTop:'7px',\n        marginBottom:'7px',\n        marginLeft:'10%',\n        marginRight:'10%'\n    }\n\n    return (\n        <Box\n            width=\"auto\"\n            height={window.innerHeight-100}\n            // height=\"100%\"\n            overflow=\"hidden\"\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            pt='5'  \n           \n                    \n        >                   \n                <Link href='/customerdashboard'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Dashboard </Button> </Link>     \n          \n                <Link href='/allorders'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> My Orders  </Button> </Link>     \n         \n                <Link href='/carddetails'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Card & Bank Details  </Button></Link>     \n            \n                <Link href='/shippingaddress'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Shipping Address </Button></Link>     \n         \n                <Link href='/changepersonaldet'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Change Account Details </Button></Link>   \n\n                <Link href='/customerstats'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Order Report </Button></Link>   \n           \n        </Box>\n    )\n}\n\nexport default CustomerDashSideBar\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js",["463"],"import { useState } from 'react';\nimport{\n    FormControl,\n    FormLabel,\n    Input,\n    useToast\n\n} from \"@chakra-ui/react\";\n\nconst AddAddress = ({addAddress,trigger}) => {\n    const [First_Name,setFirstName] = useState('')\n    const [Last_Name,setLastName] = useState('')\n    const [Street,setStreet] = useState('')\n    const [City,setCity] = useState('')\n    const [State,setState] = useState('')\n    const [ZIP,setZip] = useState('')\n\n    const toast = useToast()\n\n\n    const onSubmit = (e)=>{\n        e.preventDefault()\n\n        if(!First_Name || !Last_Name || !Street || !City || !State || !ZIP){\n            alert('Empty Field')\n            return\n        }\n        \n        addAddress({First_Name,Last_Name,Street,City,State,ZIP})\n\n        setFirstName('')\n        setLastName('')\n        setStreet('')\n        setCity('')\n        setState('')\n        setZip('')\n\n        \n    }\n\n    return (\n        <form  onSubmit={onSubmit} >\n            <FormControl>\n                <FormLabel>First Name</FormLabel>\n                <Input type=\"text\" placeholder='Name' value={First_Name} onChange={(e)=>setFirstName(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Last Name</FormLabel>\n                <Input type=\"text\" placeholder='Telephone' value={Last_Name} onChange={(e)=>setLastName(e.target.value)}  />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Street</FormLabel>\n                <Input type=\"text\" placeholder='Street' value={Street} onChange={(e)=>setStreet(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>City</FormLabel>\n                <Input type=\"text\" placeholder='City' value={City} onChange={(e)=>setCity(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>State</FormLabel>\n                <Input type=\"text\" placeholder='State' value={State} onChange={(e)=>setState(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Zip</FormLabel>\n                <Input type=\"text\" placeholder='Zip' value={ZIP} onChange={(e)=>setZip(e.target.value)} />\n            </FormControl>\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Address' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\n            \n        </form>\n    )\n}\n\nexport default AddAddress\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePersonalDetForm.js",["464"],"import {\n    Box,\n    FormControl,\n    FormLabel,\n    Heading,\n    Input,\n    useToast\n  } from \"@chakra-ui/react\";\n\nimport { useState,useEffect } from 'react';\nimport Axios from \"axios\";\n\nconst ChangePersonalDetForm = () => {\n    const [UserID,setUserID] = useState('')\n    const [firstname,setFirstName] = useState('')\n    const [lastname,setLastName] = useState('')\n    const [telephone,setTelephone] = useState('')\n    const [Email,setEmail] = useState('')\n   \n    useEffect(() => {\n        Axios.get(\"http://localhost:5000/customer/user\")\n        .then((Response)=>{\n            console.log(Response.data);\n            setFirstName(Response.data.user[0].First_name);\n            setLastName(Response.data.user[0].Last_name);\n            setTelephone(Response.data.user[0].Phone_No);\n            setEmail(Response.data.user[0].Email);\n            setUserID(Response.data.user[0].UserID);\n            \n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Error loading data\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          }); \n    }, [])\n\n    \n    const toast = useToast()\n\n    const onSubmit = (e)=>{\n        e.preventDefault()\n\n        if(telephone.length!==10){\n            alert(\"Invalid Mobile Number\")\n            return\n        }\n\n\n        Axios.put('http://localhost:5000/customer/user',{UserID,firstname,lastname,telephone,Email})\n        .then((Response)=>{\n            toast({\n                position: \"bottom-right\",    \n                description: \"Successfully Updated the Personal Data\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n              })\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          });  \n    }\n\n    console.log(firstname,lastname,telephone,Email)\n\n\n    return (\n        <Box>\n            <Heading size='lg' mb='5'>Change Personal Details</Heading>\n            <form onSubmit={onSubmit} >\n                <FormControl id=\"firstname\" mb='8'>\n                    <FormLabel>First Name</FormLabel>\n                                \n                        <Input   \n                            type='text'  \n                            placeholder='First Name'       \n                            defaultValue={firstname}\n                            name='firstname'\n                            onChange={(e)=>setFirstName(e.target.value)}\n                            required\n                        />\n                </FormControl>\n\n                <FormControl id=\"lastname\" mb='8'>\n                    <FormLabel>Last Name</FormLabel>\n                                \n                        <Input \n                            type='text'  \n                            placeholder='Last Name'  \n                            defaultValue={lastname} \n                            name='lastname'\n                            onChange={(e)=>setLastName(e.target.value)}\n                            required\n                        />\n                </FormControl>\n\n                <FormControl id=\"email\" mb='8'>\n                    <FormLabel>Email</FormLabel>\n                                \n                        <Input   \n                            type='email'\n                            placeholder='Email'  \n                            defaultValue={Email} \n                            name='Email'\n                            onChange={(e)=>setEmail(e.target.value)}\n                            required\n                        />\n                </FormControl>\n\n                <FormControl id=\"tel\" mb='8'>\n                    <FormLabel>Telephone Number</FormLabel>\n                                \n                        <Input   \n                            type='number'\n                            placeholder='Telephone Number'       \n                            defaultValue={telephone}\n                            name='telephone'\n                            onChange={(e)=>setTelephone(e.target.value)}\n                            required\n                        />\n                </FormControl>\n\n                <Input mt='2' mb='2'  type=\"submit\" value='Update Details' className='btn btn-block' bg=\"teal.600\" color='white'  />\n                            \n\n\n\n\n\n            </form>\n        </Box>\n    )\n}\n\nexport default ChangePersonalDetForm\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBarHome.js",["465","466"],"import { SearchIcon } from \"@chakra-ui/icons\";\nimport React from \"react\";\nimport {\n  Input,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n  Box,\n  Flex,\n  Center,\n  useColorMode,\n} from \"@chakra-ui/react\";\n\nfunction SearchBarHome(props) {\n  const {colorMode, toggleColorMode} = useColorMode();\n\n  return (\n    <Flex\n      marginTop=\"110px\"\n\n      borderBottom='5px solid #E8E8E8'\n      bg={colorMode === 'light' ? '#E8E8E8' : '#101522'}\n    >\n      <Box w=\"500px\" padding=\"15px\" marginLeft=\"30%\" >\n        <InputGroup bg='white' rounded='50px' border='blue'>\n          <InputRightElement >\n            <IconButton\n              colorScheme={colorMode === 'light' ? 'blue' : 'red'}\n              aria-label=\"Search database\"\n              icon={<SearchIcon  />}\n            />\n          </InputRightElement>\n\n          <Input\n            placeholder={props.text}\n            name=\"search\"\n            value={props.value}\n            onChange={props.onChange}\n          />\n        </InputGroup>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default SearchBarHome;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCards.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddBankCard.js",["467"],"import { useState } from 'react';\nimport{\n    FormControl,\n    FormLabel,\n    Input,\n    Select\n} from \"@chakra-ui/react\";\n\nconst AddBankCard = ({addBankCard,trigger}) => {\n    const [card_number,setCardNumber] = useState('')\n    const [owner,setOwner] = useState('')\n    const [cvv,setCvv] = useState('')\n    const [exp_date,setExpDate] = useState('')\n    const [bank_name,setBankName] = useState('')\n    const [card_type,setType] = useState('')\n    const onSubmit = (e)=>{\n        e.preventDefault()\n\n        console.log(card_type)\n\n        if(!card_number || !owner || !cvv || !exp_date || !bank_name || !card_type){\n            alert('Empty Field')\n            return\n        }\n\n        if(card_number.toString().length!==16){\n            alert('Invalid Card Number')\n            return\n        }\n    \n        var givenDate = new Date(exp_date);\n        var today = new Date();\n        if (givenDate.getFullYear() < today.getFullYear()) {\n            alert('card is expired')\n            return\n        }\n        else if (givenDate.getFullYear() == today.getFullYear()){\n            if(givenDate.getMonth() < today.getMonth()){\n                alert('card is expired')\n                return\n            }\n        }\n       \n        addBankCard({card_number,owner,cvv,exp_date,bank_name,card_type})\n\n        setCardNumber('')\n        setOwner('')\n        setCvv('')\n        setExpDate('')\n        setBankName('')\n        setType('')\n        \n        \n    }\n\n    return (\n        <form  onSubmit={onSubmit} >\n            <FormControl>\n                <FormLabel>Bank Name</FormLabel>\n                <Input type=\"text\" placeholder='Bank Name' value={bank_name} onChange={(e)=>setBankName(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Card Number</FormLabel>\n                <Input type=\"number\" placeholder='Card Number' value={card_number} onChange={(e)=>setCardNumber(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Owner</FormLabel>\n                <Input type=\"text\" placeholder='Owner' value={owner} onChange={(e)=>setOwner(e.target.value)}  />\n            </FormControl>\n            <FormControl>\n                <FormLabel>CVV</FormLabel>\n                <Input type=\"number\" placeholder='CVV' value={cvv} onChange={(e)=>setCvv(e.target.value)} />\n            </FormControl>\n            <FormControl>\n                <FormLabel>Card Type</FormLabel>\n                <Select placeholder=\"Select Card Type\" onChange={(e)=>setType(e.target.value)}>\n                    <option value='visa'>visa</option>\n                    <option value='mastercard'>mastercard</option>\n                    <option value='amex'>amex</option>\n                 </Select>\n            </FormControl>\n            <FormControl>\n                <FormLabel>Exp Date</FormLabel>\n                <Input type=\"date\" placeholder='Exp Date' value={exp_date} onChange={(e)=>setExpDate(e.target.value)} />\n            </FormControl>\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Card Details' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\n            \n        </form>\n    )\n}\n\nexport default AddBankCard\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTiles.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/Seller/Card.js",["468","469"],"import React from 'react';\nimport {\n  Box,\n  Image,\n  Badge,\n  Grid,\n  GridItem,\n  Center,\n  Button,\n  Heading,\n} from '@chakra-ui/react';\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\nimport {  MdSend, MdZoomIn } from 'react-icons/md';\n\nfunction Card(props) {\n  return (\n    <Box\n      width=\"auto\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      p=\"10px\"\n      mb=\"10px\"\n      ml=\"20px\"\n      mr=\"20px\"\n    >\n      <Grid\n        h=\"auto\"\n        templateColumns=\"repeat(8, 1fr)\"\n        templateRows=\"repeat(3, 1fr)\"\n        gap={4}\n      >\n        <GridItem\n          colSpan={{ base: 8, md: 2 }}\n          rowSpan={{ base: 1, md: 3 }}\n          pt=\"12px\"\n        >\n          <Center>\n            <Image\n              src={props.imageUrl}\n              alt={props.imageAlt}\n              borderRadius=\"full\"\n              boxSize=\"190px\"\n            />\n          </Center>\n        </GridItem>\n\n        <GridItem colSpan={{ base: 8, md: 5 }} rowSpan={{ base: 1, md: 3 }}>\n          <Box p=\"6\">\n            <Box d=\"flex\" alignItems=\"baseline\">\n              <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                Secured\n              </Badge>\n            </Box>\n\n            <Box\n              mt=\"1\"\n              fontWeight=\"semibold\"\n              as=\"h4\"\n              lineHeight=\"tight\"\n            >\n              <Heading as=\"h5\" size=\"2xl\">\n                {props.type}\n              </Heading>\n            </Box>\n\n            <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n              <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n                {props.count}\n              </Box>\n            </Box>\n          </Box>\n        </GridItem>\n        <GridItem\n          colSpan={{ base: 8, md: 1 }}\n          rowSpan={{ base: 1, md: 3 }}\n          pt=\"50px\"\n        >\n          <Button\n            rightIcon={<ArrowForwardIcon />}\n            colorScheme=\"teal\"\n            variant=\"outline\"\n            size=\"lg\"\n            rightIcon={<MdSend/>}\n          >\n            Check\n          </Button>\n          \n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Card;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Seller/Middle.js",["470","471","472"],"import React from \"react\";\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  IconButton,\n  Tooltip,\n  Avatar,\n  Center,\n  Badge,\n  Progress\n} from \"@chakra-ui/react\";\n\nimport { AvatarBadge } from \"@chakra-ui/react\";\nimport \"./Middle.css\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport { Money, MoneyOff } from \"@material-ui/icons\";\nimport { GiCartwheel, GiShoppingBag, GiShoppingCart } from \"react-icons/gi\";\nimport { FiUserPlus } from \"react-icons/fi\";\n\nfunction Middle() {\n  return (\n    <>\n      <div className=\"dashboard\">\n        <Box\n          borderStyle=\"solid\"\n          borderColor=\"gray.800\"\n          boarderRadius=\"200px\"\n          mt=\"0px\"\n          pl=\"20px\"\n          pr=\"20px\"\n          pt=\"150px\"\n          h=\"700px\"\n          mb=\"20px\"\n          bg=\"linear-gradient( blue -80%, white 100%);\"\n        >\n          <Box\n            borderStyle=\"solid\"\n            borderColor=\"gray.200\"\n            borderWidth=\"2px\"\n            p=\"10px\"\n            pt=\"30px\"\n            mt=\"-120px\"\n            borderRadius=\"20px\"\n          >\n            <Center mb=\"5px\" mt=\"10px\">\n              <Avatar bg=\"red.500\">\n                <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n              </Avatar>\n            </Center>\n\n            <Box h=\"50px\" mb=\"70px\">\n              <Center>\n                <Text color=\"black\">C.P.Amarasena</Text>\n              </Center>\n              <Progress\n                colorScheme=\"green\"\n                size=\"xs\"\n                mr=\"45%\"\n                ml=\"45%\"\n                mb=\"5px\"\n                isIndeterminate\n              />\n              <Center mb=\"10px\">\n                <Badge variant=\"solid\" colorScheme=\"green\">\n                  Online\n                </Badge>\n              </Center>\n              \n            </Box>\n\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              mt=\"100px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Total Revenue\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.900\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    variant=\"outline\"\n                    colorScheme=\"blue\"\n                    aria-label=\"\"\n                    icon={<FaDollarSign />}\n                  />\n                  Total Revenue : 15000$\n                </Text>\n              </Tooltip>\n            </Box>\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Today Revenue\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.900\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    colorScheme=\"green\"\n                    aria-label=\"\"\n                    variant=\"outline\"\n                    icon={<Money />}\n                  />\n                  Today Revenue : 440$\n                </Text>\n              </Tooltip>\n            </Box>\n\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Today Orders\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    colorScheme=\"red\"\n                    aria-label=\"\"\n                    variant=\"outline\"\n                    icon={<GiShoppingCart size=\"20px\" />}\n                  />\n                  Today Orders : 1500\n                </Text>\n              </Tooltip>\n            </Box>\n\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Awaiting for shipment orders\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    colorScheme=\"black\"\n                    aria-label=\"\"\n                    variant=\"outline\"\n                    icon={<GiShoppingBag size=\"20px\" />}\n                  />\n                  Awaiting for shipment : 120\n                </Text>\n              </Tooltip>\n            </Box>\n            <Box\n              borderStyle=\"solid\"\n              borderColor=\"gray.200\"\n              borderWidth=\"2px\"\n              h=\"70px\"\n              m=\"10px\"\n              borderRadius=\"10px\"\n            >\n              <Tooltip label=\"Today New Users\" fontSize=\"md\">\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\n                  <IconButton\n                    m=\"10px\"\n                    colorScheme=\"cyan\"\n                    aria-label=\"\"\n                    variant=\"outline\"\n                    icon={<FiUserPlus size=\"20px\" />}\n                  />\n                  Today New Users : 60\n                </Text>\n              </Tooltip>\n            </Box>\n          </Box>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nexport default Middle;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomFooter.js",["473"],"import React from \"react\";\nimport { Button } from \"../../globalStyles\";\nimport {\n  FaFacebook,\n  FaInstagram,\n  FaYoutube,\n  FaTwitter,\n  FaLinkedin,\n} from \"react-icons/fa\";\nimport {\n  FooterContainer,\n  SocialMedia,\n  SocialMediaWrap,\n  SocialLogo,\n  SocialIcon,\n  WebsiteRights,\n  SocialIcons,\n  SocialIconLink,\n} from \"./BottomFooter.elements\";\n\nfunction BottomFooter(props) {\n  return (\n    <FooterContainer>\n      <SocialMedia>\n        <SocialMediaWrap>\n          <SocialLogo to=\"/\">\n            <SocialIcon />\n            {props.shopName}\n          </SocialLogo>\n          <WebsiteRights>Designed By University of Moratuwa | All Rights Resserved, © 2021</WebsiteRights>\n          <SocialIcons>\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Facebook\">\n              <FaFacebook />\n            </SocialIconLink>\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Instagram\">\n              <FaInstagram />\n            </SocialIconLink>\n            <SocialIconLink\n              href={\n                \"//www.youtube.com/\"\n              }\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              aria-label=\"Youtube\"\n            >\n              <FaYoutube />\n            </SocialIconLink>\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Twitter\">\n              <FaTwitter />\n            </SocialIconLink>\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"LinkedIn\">\n              <FaLinkedin />\n            </SocialIconLink>\n          </SocialIcons>\n        </SocialMediaWrap>\n      </SocialMedia>\n    </FooterContainer>\n  );\n}\n\nexport default BottomFooter;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/Footer.js",["474","475","476","477","478","479","480","481","482"],"import React from \"react\";\nimport { Button } from \"../../globalStyles\";\nimport {\n  FaFacebook,\n  FaInstagram,\n  FaYoutube,\n  FaTwitter,\n  FaLinkedin,\n} from \"react-icons/fa\";\nimport {\n  FooterContainer,\n  FooterSubscription,\n  FooterSubText,\n  FooterSubHeading,\n  Form,\n  FormInput,\n  FooterLinksContainer,\n  FooterLinksWrapper,\n  FooterLinkItems,\n  FooterLinkTitle,\n  FooterLink,\n} from \"./Footer.elements\";\nimport BottomFooter from \"./BottomFooter\";\nfunction Footer() {\n  return (\n    <div>\n      <FooterContainer>\n        <FooterSubscription>\n          <FooterSubHeading>\n            Join us and have the best items at best prices!\n          </FooterSubHeading>\n          <FooterSubText>Start shopping today and experience the premium shopping</FooterSubText>\n          \n        </FooterSubscription>\n        <FooterLinksContainer>\n          <FooterLinksWrapper>\n            <FooterLinkItems>\n              <FooterLinkTitle>About Us</FooterLinkTitle>\n              <FooterLink to=\"/sign-up\">How it works</FooterLink>\n              <FooterLink to=\"/\">Testimonials</FooterLink>\n              <FooterLink to=\"/\">Careers</FooterLink>\n              <FooterLink to=\"/\">Investors</FooterLink>\n              <FooterLink to=\"/\">Terms of Service</FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems>\n              <FooterLinkTitle>Contact Us</FooterLinkTitle>\n              <FooterLink to=\"/\">Contact</FooterLink>\n              <FooterLink to=\"/\">Support</FooterLink>\n              <FooterLink to=\"/\">Destinations</FooterLink>\n              <FooterLink to=\"/\">Sponsorships</FooterLink>\n            </FooterLinkItems>\n          </FooterLinksWrapper>\n          <FooterLinksWrapper>\n            <FooterLinkItems>\n              <FooterLinkTitle>Videos</FooterLinkTitle>\n              <FooterLink to=\"/\">Submit Video</FooterLink>\n              <FooterLink to=\"/\">Ambassadors</FooterLink>\n              <FooterLink to=\"/\">Agency</FooterLink>\n              <FooterLink to=\"/\">Influencer</FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems>\n              <FooterLinkTitle>Social Media</FooterLinkTitle>\n              <FooterLink to=\"/\">Instagram</FooterLink>\n              <FooterLink to=\"/\">Facebook</FooterLink>\n              <FooterLink to=\"/\">Youtube</FooterLink>\n              <FooterLink to=\"/\">Twitter</FooterLink>\n            </FooterLinkItems>\n          </FooterLinksWrapper>\n        </FooterLinksContainer>\n      </FooterContainer>\n    </div>\n  );\n}\n\nexport default Footer;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomItems.js",["483","484","485","486"],"import { Box, Center, Icon, SimpleGrid, useColorMode } from \"@chakra-ui/react\";\nimport { CardGiftcard, CreditCardRounded } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { GiTruck } from \"react-icons/gi\";\nimport {\n  MdAttachMoney,\n  MdCreditCard,\n  MdSecurity,\n  MdSettings,\n} from \"react-icons/md\";\nexport default function BottomItems() {\n\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    // Passing `columns={[2, null, 3]}` and `columns={{sm: 2, md: 3}}`\n    // will have the same effect.\n\n    <SimpleGrid columns={[2, null, 4]} spacing=\"0px\">\n      <Box\n        bg={colorMode === 'light' ? 'white' : '#101522' }\n        height=\"250px\"\n        borderStyle=\"solid\"\n        borderColor=\"#E8E8E8\"\n        borderWidth=\"1px\"\n      >\n        <Center>\n          <Icon as={MdAttachMoney} w={20} h={20} />{\" \"}\n        </Center>\n        <Box>\n          <Center fontWeight=\"BOLD\">\n            Great Value\n          </Center>\n        </Box>\n        <Box padding=\"5%\" textAlign=\"center\">\n          We offer competitive prices on our 1000 plus product range.\n        </Box>\n      </Box>\n      <Box\n        bg={colorMode === 'light' ? 'white' : '#101522' }\n        height=\"250px\"\n        borderStyle=\"solid\"\n        borderColor=\"#E8E8E8\"\n        borderWidth=\"1px\"\n      >\n        <Center>\n          <Icon as={MdCreditCard} w={20} h={20} />{\" \"}\n        </Center>\n        <Box>\n          <Center fontWeight=\"BOLD\">\n            Safe Payment\n          </Center>\n        </Box>\n        <Box padding=\"5%\" textAlign=\"center\">\n          Pay with the world’s most popular and secure payment methods.\n        </Box>\n      </Box>\n      <Box\n        bg={colorMode === 'light' ? 'white' : '#101522' }\n        height=\"250px\"\n        borderStyle=\"solid\"\n        borderColor=\"#E8E8E8\"\n        borderWidth=\"1px\"\n      >\n        <Center>\n          <Icon as={MdSecurity} w={20} h={20} />{\" \"}\n        </Center>\n        <Box>\n          <Center fontWeight=\"BOLD\">\n            Shop with Confidence\n          </Center>\n        </Box>\n        <Box padding=\"5%\" textAlign=\"center\">\n          Our Buyer Protection covers your purchase from click to delivery.\n        </Box>\n      </Box>\n      <Box\n        bg={colorMode === 'light' ? 'white' : '#101522' }\n        height=\"250px\"\n        borderStyle=\"solid\"\n        borderColor=\"#E8E8E8\"\n        borderWidth=\"1px\"\n      >\n        <Center>\n          <GiTruck size=\"80px\" width=\"20px\" />\n        </Center>\n        <Box>\n          <Center fontWeight=\"BOLD\">\n            Country Wide Delivery\n          </Center>\n        </Box>\n        <Box padding=\"5%\" textAlign=\"center\">\n          Pay with the world’s most popular and secure payment methods.\n        </Box>\n      </Box>\n    </SimpleGrid>\n  );\n}\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js",["487","488","489","490","491","492","493","494"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n  VStack,\n  Progress,\n  Stack,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction ReviewCountPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  const total_reviews = props.feedbacks.length;\n\n  var s5 = 0;\n  var s4 = 0;\n  var s3 = 0;\n  var s2 = 0;\n  var s1 = 0;\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].rate === 5) {\n      s5 = s5 + 1;\n    } else if (props.feedbacks[i].rate === 4) {\n      s4 = s4 + 1;\n    } else if (props.feedbacks[i].rate === 3) {\n      s3 = s3 + 1;\n    } else if (props.feedbacks[i].rate === 2) {\n      s2 = s2 + 1;\n    } else if (props.feedbacks[i].rate === 1) {\n      s1 = s1 + 1;\n    }\n  }\n\n  return (\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          5 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s5} reviews\n        </Text>\n        <Progress value={(s5 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          4 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s4} reviews\n        </Text>\n        <Progress value={(s4 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          3 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s3} reviews\n        </Text>\n        <Progress value={(s3 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          2 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s2} reviews\n        </Text>\n        <Progress value={(s2 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          1 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s1} reviews\n        </Text>\n        <Progress value={(s1 / total_reviews) * 100} />\n      </Box>\n    </Stack>\n  );\n}\n\nexport default ReviewCountPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js",["495"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction CategorizedReviewPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  var stars = (rating) => {\n    return Array(5)\n      .fill(\"\")\n      .map((_, j) => (\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\n      ));\n  };\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].rate === props.rating || props.rating === 'all') {\n      reviews.push(\n        <Box mb='10px'>\n          <HStack>\n            <Avatar\n              name={props.feedbacks[i].first_name +' ' +props.feedbacks[i].last_name}\n              src={props.feedbacks[i].customer_dp}\n            />\n            <Box\n              w=\"100%\"\n              borderWidth=\"2px\"\n              borderRadius=\"lg\"\n              p=\"10px\"\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\n            >\n              <Heading as=\"h5\" size=\"sm\">\n                {props.feedbacks[i].first_name +' ' +props.feedbacks[i].last_name}\n              </Heading>\n              <Text>{props.feedbacks[i].comment}</Text>\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n                {stars(props.feedbacks[i].rate)}\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\n                  {props.feedbacks[i].rate}/5\n                </Box>\n              </Box>\n            </Box>\n          </HStack>\n          <Replys replys={[]} />\n        </Box>\n      );\n    }\n  }\n\n  if (reviews.length === 0) {\n    reviews.push(<Text>No reviews</Text>);\n  }\n\n  return <>{reviews}</>;\n}\n\nexport default CategorizedReviewPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Slider/SliderData.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/Register.js",["496","497"],"import React, { useState } from 'react';\nimport './Register.css';\nimport FormSignup from './FormSignup';\nimport FormSuccess from './FormSuccess';\nimport Axios from \"axios\";\nimport useForm from \"./FormSignup\";\n// import { Redirect } from 'react-router-dom';\n\nconst Register = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n    console.log(\"Hello\")\n  }\n  \n  return (\n    <>\n    {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\n    background-size: cover !important; <Redirect to='/' />*/}\n      <div className='form-container'>\n\n        <div className='form-content-left'>\n          <img className='form-img' src='img/svg-2.svg' alt='Security' />\n        </div>\n        {!isSubmitted ? (\n          <FormSignup submitForm={submitForm} />\n        ) : (\n          \n          <FormSuccess />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/API_Service/checkLogin.js",["498","499"],"import Axios from \"axios\";\nimport Cookies from \"js-cookie\"\n\nfunction checkAuthorization (callback) {\n    Axios.get(\"http://localhost:5000/customer/login\")\n    .then((response) => {\n      if(response.data.LoggedIn === true) {\n        console.log(response.data);\n        callback(response.data.LoggedIn);\n      }else{\n        callback(false)\n      }\n      });\n} \n\nfunction checkAuthentication (callback) {\n        Axios.get(\"http://localhost:5000/customer/isUserAuth\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")},\n        }).then(response => {\n          if(response.status === 200) {\n              callback(true)\n          } else {\n              callback(false);\n          }\n        });\n}\nfunction isAuthenticated(){\n  Axios.get(\"http://localhost:5000/customer/login\")\n    .then((response) => {\n      console.log('is authenticated')\n      if(response.data.LoggedIn == true) {\n        console.log(response.data)\n        return true;\n      }else{\n        return false;\n      }\n      });\n}\n\nfunction clearCookie(){\n  Cookies.remove(\"user\");\n}\nfunction isLoggedIn(){\n  if(Cookies.get(\"user\") === undefined) {\n    return false;\n  }\n  return true;\n\n}\nfunction getData(){\n  if(Cookies.get(\"user\") === undefined) {\n    return null;\n  }\n  return JSON.parse(Cookies.get(\"user\"))\n}\n// function checkLoggedIn(callback) {\n//   const [isAuthorized, setIsAuthorized] = useState(false);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   const [LoggedIn, setLoggedIn] = useState(false);\n//   checkAuthorization(response => {\n//     setIsAuthorized(response);\n//   })\n//   checkAuthentication(response => {\n//     setIsAuthenticated(response);\n//   })\n\n//   if (isAuthorized === isAuthenticated) {\n//     setLoggedIn(true);\n//   } else {\n//     setLoggedIn(false);\n//   }\n//   callback(LoggedIn);\n// }\n\nexport default {\n  checkAuthorization,\n  checkAuthentication,\n  isLoggedIn,\n  isAuthenticated,\n  getData,\n  clearCookie\n}","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/LogIn.js",["500","501","502"],"import React, { useEffect, useState } from \"react\";\nimport \"./LogIn.css\";\nimport FormLogIn from \"./FormLogIn\";\nimport FormSuccess from \"./FormSuccess\";\nimport Axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\n\nfunction LogIn(props) {\n\n  \n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  // Axios.defaults.withCredentials = true;\n  // useEffect(() => {\n  //   Axios.get(\"http://localhost:5000/customer/login\").then((response) => {\n  //     console.log(response);\n  //   })\n  // }, [])\n\n  return (\n    <>\n      {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\n    background-size: cover !important; <Redirect to='/' />*/}\n      <div className=\"login-container\">\n        <div className=\"login-content-left\">\n          <img className=\"login-img\" src=\"img/svg-2.svg\" alt=\"Security\" />\n        </div>\n        {!isSubmitted ? (\n          <FormLogIn submitForm={submitForm} setSignInClicked={props.setSignInClicked}/>\n        ) : (\n          <Redirect to='/' />\n        )}\n        {/* <FormLogIn submitForm={submitForm} /> */}\n      </div>\n    </>\n  );\n};\n\nexport default LogIn;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Slider/ImageSlider.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/Pricing/Pricing.js",["503","504","505","506","507","508","509","510","511","512","513","514","515","516"],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../globalStyles\";\nimport { AiFillThunderbolt } from \"react-icons/ai\";\nimport {\n  GiAllForOne,\n  GiArtificialIntelligence,\n  GiCartwheel,\n  GiCrystalBars,\n  GiDeliveryDrone,\n  GiNewBorn,\n  GiShoppingBag,\n  GiShoppingCart,\n} from \"react-icons/gi\";\nimport { GiCutDiamond, GiRock } from \"react-icons/gi\";\nimport { GiFloatingCrystal } from \"react-icons/gi\";\nimport { IconContext } from \"react-icons/lib\";\nimport {\n  PricingSection,\n  PricingWrapper,\n  PricingHeading,\n  PricingContainer,\n  PricingCard,\n  PricingCardInfo,\n  PricingCardIcon,\n  PricingCardPlan,\n  PricingCardCost,\n  PricingCardLength,\n  PricingCardFeatures,\n  PricingCardFeature,\n} from \"./Pricing.elements\";\nimport { Box, Flex, Text, useColorMode } from \"@chakra-ui/react\";\n\nfunction Pricing(props) {\n  const { colorMode } = useColorMode();\n  const [isDark, setIsDark] = useState(false);\n\n  function handleChange(x) {\n    setIsDark(x);\n  }\n\n  useEffect(() => {\n    // Update isDark according to the color\n    {\n      colorMode === \"light\" ? handleChange(false) : handleChange(true);\n    }\n  });\n\n  return (\n    <IconContext.Provider value={{ color: \"#a9b3c1\", size: 64 }}>\n      {/**colorMode === \"light\" ? \"white\" : \"black\"**/}\n      <Flex\n        p=\"10px 0 160px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        bg={colorMode === \"light\" ? \"white\" : \"#101522\"}\n      >\n        <PricingWrapper>\n          <PricingHeading>{props.heading} </PricingHeading>\n          <PricingContainer>\n            <PricingCard to=\"/\">\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiShoppingBag\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\n                  />\n                </PricingCardIcon>\n\n                <PricingCardPlan>All Categories</PricingCardPlan>\n                <PricingCardCost>6+</PricingCardCost>\n                <PricingCardLength>categories</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>\n                    100+ New Users Everyday\n                  </PricingCardFeature>\n                  <PricingCardFeature>\n                    Best Store in Sri Lanka\n                  </PricingCardFeature>\n                  <PricingCardFeature>Trending Items</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n\n            <PricingCard to=\"/\">\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiNewBorn\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\n                  />\n                </PricingCardIcon>\n                <PricingCardPlan>New Arrivals</PricingCardPlan>\n                <PricingCardCost>150+</PricingCardCost>\n                <PricingCardLength>arrivals per day</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>\n                    Trending shop in the country\n                  </PricingCardFeature>\n                  <PricingCardFeature>Premium Shopping</PricingCardFeature>\n                  <PricingCardFeature>Buy and Feel It</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n\n            <PricingCard to=\"/\">\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiCutDiamond\n                    color={colorMode === \"light\" ? \"#CCCCCC\" : \"white\"}\n                  />\n                </PricingCardIcon>\n                <PricingCardPlan>Most Ordered Items</PricingCardPlan>\n                <PricingCardCost>500+</PricingCardCost>\n                <PricingCardLength>orders per day</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>\n                    You will experience the difference\n                  </PricingCardFeature>\n                  <PricingCardFeature>\n                    Best Prices for Best Products\n                  </PricingCardFeature>\n                  <PricingCardFeature>24/7 Support</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n          </PricingContainer>\n        </PricingWrapper>\n      </Flex>\n    </IconContext.Provider>\n  );\n}\nexport default Pricing;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShopNow.js",["517","518","519","520","521","522"],"import {\n  Button,\n  ReactRouterLink,\n  Link,\n  Box,\n  Text,\n  Heading,\n  Flex,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { GiShoppingCart } from \"react-icons/gi\";\n\nimport \"./ShopNow.css\";\n\nfunction ShopNow() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <div className=\"hero-container\">\n      <Flex>\n        <video src=\"/videos/shop.mp4\" autoPlay loop muted />\n      </Flex>\n      <Heading as=\"h1\" size=\"4xl\">\n        LOTS OF FANCY ITEMS\n      </Heading>\n\n      <p>What are you waiting for?</p>\n      <div>\n        <a href=\"#\">\n          <Box\n            as=\"button\"\n            p={4}\n            color={colorMode === \"light\" ? \"white\" : \"black\"}\n            fontWeight=\"bold\"\n            borderRadius=\"15px\"\n            bgGradient={colorMode === \"light\" ? \"linear(to-r, black, blue.600)\" : \"linear(to-r, white, blue.600)\"}\n            _hover={{\n              bgGradient: \"linear(to-r, red, white)\",\n            }}\n          >\n            SHOP NOW\n          </Box>\n        </a>\n        <GiShoppingCart\n          className=\"cart-icon\"\n          size=\"100px\"\n          color={colorMode === \"light\" ? \"white\" : \"black\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ShopNow;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js",["523","524","525","526","527"],"import {React, useState} from 'react'\nimport {\n    Box,\n    Button,\n    GridItem,\n    useColorMode,\n    useDisclosure,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    ButtonGroup,\n  } from \"@chakra-ui/react\";\n\nimport { ImUser, ImLocation } from \"react-icons/im\";\n\n\nconst ShipAddress = ({address,deleteAddress,updateAddress}) => {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return(\n        <GridItem>\n        <Box  \n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            borderRadius='md'\n            border='1px'\n            borderColor='cyan.600'\n            p='6'\n            m='4'\n            pb='3'\n           \n            >\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                    <ImUser />\n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"lg\"       \n                        ml=\"2\"\n                    >\n                        { address.first_Name +\" \" +  address.last_Name }\n                    </Box>\n                </Box> \n                \n                <Box d=\"flex\" alignItems=\"baseline\" mt='2' mb='5'>\n                \n                    <ImLocation m='3'/>\n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        <Box>{ address.street }</Box>\n                        <Box>{ address.city }</Box>\n                        <Box>{ address.state }</Box>\n                        <Box>{ address.zip }</Box>\n                    </Box>\n                </Box> \n               \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n\n                    {/* Delete Address */}\n                \n                    <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader fontWeight=\"semibold\">Delete Shipping Address</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody>\n                            Are you sure you want to delete the shipping address?\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteAddress(address.address_id)}}>Delete</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                   \n                </Box>\n\n        </Box>\n        </GridItem>\n    )\n}\n\nexport default ShipAddress\n\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCard.js",["528","529","530","531","532","533","534","535"],"import {React, useState} from 'react'\nimport {\n    Box,\n    Button,\n    GridItem,\n    useColorMode,\n    useDisclosure,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    ButtonGroup,\n    Heading,\n    HStack,\n    Spacer,\n    Image\n  } from \"@chakra-ui/react\";\n\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\n\n\nconst BankCard = ({bankcard,deleteBankCard}) => {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return(\n        <GridItem>\n        <Box  \n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n            borderRadius='md'\n            border='1px'\n            borderColor='cyan.600'\n            p='6'\n            m='4'\n            pb='3'\n           \n            >\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                    \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"lg\"       \n                        ml=\"2\"\n                    >\n                       <Heading size='lg'> x x x x x x x x {bankcard.card_number.toString().substr(12,15)} </Heading>\n                    </Box>\n                </Box> \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                   \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                       \n                    >\n                        { bankcard.owner }\n                    </Box>\n                </Box> \n               \n               <HStack mb='4'>\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                    <Box\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        {bankcard.exp_date}\n                    </Box>\n                </Box> \n                <Spacer />\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                <Image\n                    width='70px'\n                    src={`../${bankcard.card_type}.png`}\n                    />\n                </Box> \n                </HStack>\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n\n                 \n                    {/* Delete Address */}\n                \n                    <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader fontWeight=\"semibold\">Delete Card Details</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody>\n                            Are you sure you want to delete card details?\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteBankCard(bankcard.card_id)}}>Delete</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                   \n                </Box>\n\n        </Box>\n        </GridItem>\n    )\n}\n\nexport default BankCard\n\n\n\n    ","/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderTile.js",["536","537","538","539","540","541"],"\nimport {\n    Box,\n    Grid,\n    GridItem,\n    useColorMode,\n    SimpleGrid,\n    Heading,\n    Text,\n    Image,\n    HStack,\n    Badge,\n    Button,\n    VStack,\n    Link,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverArrow,\n    PopoverBody,\n    PopoverCloseButton,\n    PopoverFooter,\n    ButtonGroup\n  } from \"@chakra-ui/react\";\n\n  import OrderItem from \"./OrderItemTile\";\n\nconst OrderTile = ({order,cancelOrder,confirmOrder}) => {\n\n    const { colorMode, toggleColorMode } = useColorMode();\n// try with normal functions\n    const StatusBadge = ({status})=>{\n        if(status==='shipped'){\n            return (<Badge colorScheme=\"green\">Shipped</Badge>)\n        }\n        else if (status==='paid'){\n            return (<Badge colorScheme=\"yellow\">Paid</Badge>)\n        }\n        else if (status==='cancelled'){\n            return (<Badge colorScheme=\"red\">Cancelled</Badge>)\n        }\n        else if (status==='delivered'){\n            return (<Badge colorScheme=\"green\">Delivered</Badge>)\n        }\n        else{\n            return <div></div>\n        }\n    }  \n    \n    // calculate the total price of the order\n    const totPrice = (list) =>{\n        console.log(\"Price\",list)\n        var price = 0\n        var list = list.substring(1,list.length-1)\n        list = list.split(\",\")\n        for(var i=0; i<list.length;i++){\n            price+=parseFloat(list[i])\n        }\n        return price.toFixed(2)\n    }\n\n\n\n    const OrderActions = ({status})=>{\n        if(status=='shipped'){\n            return (<VStack>\n                <Link href={\"https://parcelsapp.com/en/tracking/\"+order.Track} isExternal><Button colorScheme='teal' size='xs'>Track Order</Button></Link>\n                <Button colorScheme='teal' size='xs' onClick={()=>{confirmOrder(order.order_id)}}>Confirm Received</Button>\n                \n            </VStack>)\n        }\n        else if (status=='paid'){\n            return (\n            <Box>\n                   \n                <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme='teal' size='xs'  >Cancel Order</Button>\n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader textAlign='left' fontWeight=\"semibold\">Cancel the order</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody textAlign='center'>\n                            Are you really want to cancel the order\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{cancelOrder(order.order_id)}}>Cancel Order</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                  \n                </Box>\n            )\n        }\n        else{\n            return <div></div>\n        }\n    }\n\n\n    const mapOrderItems = (order)=>{\n        var finalList = []\n        // console.log(\"order\",order)\n        var itemIDList= order.Item_ID\n        // console.log(\"item ids\",itemIDList)\n        itemIDList = itemIDList.substring(1,itemIDList.length-1)\n        itemIDList = itemIDList.split(\",\")\n\n        var nameList = order.Name\n        nameList = nameList.substring(1,nameList.length-1)\n        nameList = nameList.split(\",\") \n\n        var imageList = order.Image\n        imageList = imageList.substring(1,imageList.length-1)\n        imageList = imageList.split(\",\")\n\n\n        for(var i=0;i<nameList.length;i++){\n            var a = {\n                \"ID\":i,\n                \"Item_ID\":itemIDList[i].replace(/\\s/g, ''),    // to get the item id for feedbacks\n                \"Name\":nameList[i].replace(/\\s/g, ''),\n                \"Image\":imageList[i].replace(/\\s/g, '')\n            }\n            finalList.push(a);\n        }\n        // console.log(\"final\",finalList)\n        return finalList;\n    }\n\n\n\n    var orders = mapOrderItems(order);\n\n\n    const OrderItemTiles = ({orders}) => {\n        return (\n            <>\n               {    \n                    \n                   orders.map((ord)=>(\n                       <OrderItem key={ord.ID} Item_ID={ord.Item_ID}  Name={ord.Name} Image={ord.Image} Order_ID={order.order_id}> </OrderItem>\n                       )\n                )}\n            </>\n        )\n    }\n\n\n    return (\n        <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  m='5' color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\n            <Grid>\n                <GridItem p='2' bg={colorMode === \"light\" ? \"teal.500\" : \"teal.50\"} color={colorMode === \"light\" ? \"teal.50\" : \"teal.500\"} >\n                    <SimpleGrid columns={3} textAlign='center'>\n                        <Box>\n                            <Heading as='h6' size='xs'>Order ID</Heading>\n                            <Text>{order.order_id}</Text>\n                        </Box>\n                        <Box>\n                            <Heading as='h6' size='xs'>Order Date</Heading>\n                            <Text>{order.ordered_date.substring(0, 10)}</Text>\n                        </Box>\n                        <Box>\n                            <Heading as='h6' size='xs'>Order Amount</Heading>\n                            <Text>{totPrice(order.Price)}</Text>\n                        </Box>\n                    </SimpleGrid>\n\n                </GridItem>\n                <GridItem p='2'  color={colorMode === \"light\" ? \"teal.800\" : \"teal.50\"} >\n\n                \n                    <Grid templateColumns=\"repeat(3, 1fr)\">\n                        <GridItem>\n                            <SimpleGrid>\n\n                            <OrderItemTiles  orders={orders} />\n                            \n                            </SimpleGrid>\n                        </GridItem>\n                        <GridItem>\n                        <Box textAlign='center'>\n                           <StatusBadge  status={order.order_status}/>\n                        </Box>\n                        </GridItem>\n                        <GridItem>\n                        <Box textAlign='center'>\n                           \n                           <OrderActions status={order.order_status}/> \n                         \n                      </Box>\n                        </GridItem>\n                    </Grid>\n\n                </GridItem>\n             \n\n            </Grid>\n        </Box>\n    )\n}\n\n \nexport default OrderTile\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js",["542","543"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  Image,\n  Badge,\n  Link,\n  ReactRouterLink\n} from \"@chakra-ui/react\";\nimport { arrayBufferToBinaryString } from \"blob-util\";\nimport React, { useState } from \"react\";\n\n\nfunction ProductCard(props) {\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Image\n        src={`data:image/png;base64,${arrayBufferToBinaryString(props.imageUrl ? props.imageUrl.data : '')}`}\n        alt=\"product image\"\n        w=\"200px\"\n        h=\"200px\"\n      />\n      <Box p=\"6\">\n        <Badge\n          borderRadius=\"full\"\n          px=\"2\"\n          colorScheme=\"yellow\"\n          variant=\"outline\"\n          fontSize=\"9px\"\n        >\n          {props.category}\n        </Badge>\n        <Box\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          fontSize=\"xl\"\n          isTruncated\n        >\n          <Link href={`/productpage/${props.item_id}`}>{props.title}</Link>\n        </Box>\n\n        <Box>\n          <Text color=\"gray.600\" fontSize=\"3xl\">\n            Rs. {props.price}\n          </Text>\n        </Box>\n\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\n          <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\n          >\n            {props.status}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {props.orders} Orders\n          </Box>\n        </Box>\n\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {props.reviews} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ProductCard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js",["544"],"import {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  HStack,\n  VStack,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction Replys(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const dp = \"\";\n\n  var replys = [];\n  for (var i = 0; i < props.replys.length; i++) {\n    replys.push(\n      <HStack spacing=\"10px\" w=\"100%\">\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          p=\"10px\"\n          mt=\"20px\"\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\n        >\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\n          <Text>{props.replys[i]}</Text>\n        </Box>\n      </HStack>\n    );\n  }\n\n  return (\n    <Box ml=\"100px\" mt='10px'>\n      <VStack w=\"100%\">{replys}</VStack>\n    </Box>\n  );\n}\n\nexport default Replys;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/Footer.elements.js",["545"],"import styled from 'styled-components';\nimport { FaMagento } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nexport const FooterContainer = styled.div`\n  background-color: #E8E8E8;\n  padding: 4rem 0 2rem 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FooterSubscription = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-bottom: 24px;\n  padding: 24px;\n  color: #fff;\n`;\n\nexport const FooterSubHeading = styled.p`\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\n    'Lucida Sans', Arial, sans-serif;\n  margin-bottom: 24px;\n  font-size: 24px;\n  color: black;\n`;\n\nexport const FooterSubText = styled.p`\n  margin-bottom: 24px;\n  font-size: 20px;\n  color: black;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n    width: 80%;\n  }\n`;\n\nexport const FormInput = styled.input`\n  padding: 10px 20px;\n  border-radius: 2px;\n  margin-right: 10px;\n  outline: none;\n  border: none;\n  font-size: 16px;\n  border: 1px solid #fff;\n\n  &::placeholder {\n    color: #242424;\n  }\n\n  @media screen and (max-width: 820px) {\n    width: 100%;\n    margin: 0 0 16px 0;\n  }\n`;\n\nexport const FooterLinksContainer = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  display: flex;\n  justify-content: center;\n  color: black;\n\n  @media screen and (max-width: 820px) {\n    padding-top: 32px;\n  }\n`;\n\nexport const FooterLinksWrapper = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n  }\n`;\n\nexport const FooterLinkItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 16px;\n  text-align: left;\n  width: 160px;\n  box-sizing: border-box;\n  color: black;\n\n  @media screen and (max-width: 420px) {\n    margin: 0;\n    padding: 10px;\n    width: 100%;\n  }\n`;\n\nexport const FooterLinkTitle = styled.h2`\n  margin-bottom: 16px;\n  font-size: 20px;\n  \n`;\n\nexport const FooterLink = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  margin-bottom: 0.5rem;\n  color: black;\n  &:hover {\n    color: #0467fb;\n    transition: 0.3s ease-out;\n  }\n`;\n\n","/Users/pasanmadushan/Desktop/Front-end-react/src/globalStyles.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/Footer/BottomFooter.elements.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/FormSuccess.js",["546","547"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport { Button, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport \"./Register.css\";\n\nconst FormSuccess = () => {\n  return (\n    <div className=\"form-content-right\">\n      <h1 className=\"form-success\">\n        You have successfully registered!\n        <br />\n        Now Log In{\" \"}\n        <a href=\"signin\">\n          <Button\n            rightIcon={<ArrowForwardIcon />}\n            colorScheme=\"red\"\n            variant=\"outline\"\n          >\n            Sign In\n          </Button>\n        </a>\n      </h1>\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\n    </div>\n  );\n};\n\nexport default FormSuccess;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/FormSignup.js",["548"],"import React from \"react\";\nimport validate from \"./validateInfo\";\nimport useForm from \"./useForm\";\nimport \"./Register.css\";\n// Promise based HTTP client for the node.js\nimport Axios from \"axios\";\n\nconst FormSignup = ({ submitForm }) => {\n\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    submitForm,\n    validate\n  );\n  \n  return (\n    <div className=\"form-content-right\">\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\n        <h1>\n          Get started and have a premium shopping experience!\n          <br />\n          Create your account by filling out the information below.\n        </h1>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">First Name</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            name=\"firstname\"\n            placeholder=\"Enter your first name\"\n            value={values.firstname}\n            onChange={handleChange}\n          />\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\n          {errors.firstname && <p>{errors.firstname}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Last Name</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            name=\"lastname\"\n            placeholder=\"Enter your last name\"\n            value={values.lastname}\n            onChange={handleChange}\n          />\n          {/*If there are errors that means left side term is true, errors.username will be shown*/}\n          {errors.lastname && <p>{errors.lastname}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Phone Number</label>\n          <input\n            className=\"form-input\"\n            type=\"tel\"\n            name=\"phonenumber\"\n            placeholder=\"Enter your phone number\"\n            value={values.phonenumber}\n            onChange={handleChange}\n          />\n          {errors.phonenumber && <p>{errors.phonenumber}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Email</label>\n          <input\n            className=\"form-input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Password</label>\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label className=\"form-label\">Confirm Password</label>\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            name=\"password2\"\n            placeholder=\"Confirm your password\"\n            value={values.password2}\n            onChange={handleChange}\n          />\n          {errors.password2 && <p>{errors.password2}</p>}\n        </div>\n        <button className=\"form-input-btn\" type=\"submit\" >\n          Sign up\n        </button>\n        <span className=\"form-input-login\">\n          Already have an account? Login <a href=\"signin\">here</a>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default FormSignup;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/FormSuccess.js",["549","550"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport { Button, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport \"./LogIn.css\";\n\nconst FormSuccess = () => {\n  return (\n    <div className=\"form-content-right\">\n      <h1 className=\"form-success\">\n        You have successfully registered!\n        <br />\n        Now Log In{\" \"}\n        <a href=\"signin\">\n          <Button\n            rightIcon={<ArrowForwardIcon />}\n            colorScheme=\"red\"\n            variant=\"outline\"\n          >\n            Sign In\n          </Button>\n        </a>\n      </h1>\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\n    </div>\n  );\n};\n\nexport default FormSuccess;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/FormLogIn.js",["551","552","553","554"],"import React, { useEffect } from \"react\";\nimport validate from \"./validateInfo\";\nimport useForm from \"./useForm\";\nimport \"./LogIn.css\";\n// Promise based HTTP client for the node.js\nimport Axios from \"axios\";\nimport { Button } from \"@chakra-ui/react\";\n\nfunction FormLogIn(props){\n\n  const { handleChange, handleSubmit,  values, errors, loginStatus } = useForm(\n    props.submitForm,\n    validate,\n    props.setSignInClicked\n  );\n  \n  \n  return (\n    <div className=\"login-content-right\">\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\n        <h1>\n          Welcome!!!\n          <br />\n          Sign in to continue shopping!\n          <br />\n          <br />\n          \n        </h1>\n        <h1 className=\"login-status\"> </h1> \n        {/* <Button color='red' onClick={userAuthenticated}>Check if</Button> */}\n        <div className=\"login-inputs\">\n          <label className=\"login-label\">Email</label>\n          <input\n            className=\"login-input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className=\"login-inputs\">\n          <label className=\"login-label\">Password</label>\n          <input\n            className=\"login-input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n        \n        <button className=\"login-input-btn\" type=\"submit\">\n          Sign In\n        </button>\n        <span className=\"login-input-login\">\n          Don't have an account? Sign up <a href=\"signup\">here</a>\n        </span>\n      </form>\n    </div>\n  );\n}\n\nexport default FormLogIn;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Pricing/Pricing.elements.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/validateInfo.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignUp/useForm.js",["555"],"import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n//custom hook\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    phonenumber: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const firstName = values.firstname;\n  const lastName = values.lastname;\n  const email = values.email;\n  const phoneNumber = values.phonenumber;\n  const password = values.password;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    if (Object.keys(errors).length === 0) {\n      Axios.post(\"http://localhost:5000/customer/register\", {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phoneNumber: phoneNumber,\n        password: password,\n      }).then((response) => {\n        console.log(response);\n      });\n    }\n  };\n\n  useEffect(() => {\n    //If there are no errors and submitted it wil call submitForm function(callback())\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/useForm.js",["556","557","558"],"import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Cookies from \"js-cookie\"\n//custom hook\n\nconst useForm = (callback, validate, setSignInClicked) => {\n  Axios.defaults.withCredentials = true;\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  const email = values.email;\n  const password = values.password;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    if (Object.keys(errors).length === 0) {\n      Axios.post(\"http://localhost:5000/customer/login\", {\n        email: email,\n        password: password,\n      }).then((response) => {\n        if (!response.data.auth) {\n          console.log(response);\n          setLoginStatus(false);\n          \n        } else {\n          // console.log(response.data);\n          localStorage.setItem(\"token\", response.data.token);\n          // Store user in localstorage\n          // localStorage.setItem(\"user2\", response.data.result[0]);\n          // Cookies.set('user', response.data.result[0], { expires: 1 })\n          setLoginStatus(true);\n          setSignInClicked(true);\n        }\n      });\n    }\n  };\nconst userAuthenticated = () => {\n    Axios.get(\"http://localhost:5000/customer/isUserAuth\", {\n    headers: {\n      \"x-access-token\": localStorage.getItem(\"token\")},\n    }).then(response => {\n      console.log(response.status);\n    });\n  };\n\n  useEffect(() => {\n    // Axios.get(\"http://localhost:5000/customer/login\").then((response) => {\n    //   if(response.data.LoggedIn === true) {\n    //         setLoginStatus(response.data.user[0].First_name + \" \" + response.data.user[0].Last_name);\n    //   }\n      \n    // });\n    \n    //If there are no errors and submitted it wil call submitForm function(callback())\n    //response.data is an array. message is a attribute of it\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n     }\n  }, [errors]);\n\n  return { handleChange, handleSubmit, values, errors, loginStatus };\n};\n\nexport default useForm;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SignIn/validateInfo.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ErrorModel.js",[],["559","560"],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/OrderItemTile.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/OrderView.js",["561","562","563","564","565","566","567"],"import {\n  Box,\n  Text,\n  Img,\n  Button,\n  Center,\n  Grid,\n  GridItem,\n  Heading,\n  VStack,\n  HStack,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Deliverycard from \"../components/Deliverycard\";\nimport { arrayBufferToBinaryString } from \"blob-util\";\nimport { useParams } from \"react-router-dom\";\n\nfunction OrderView() {\n  let { id } = useParams();\n\n  const [data, setData] = useState({ orderitems: [] });\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/orders/orderdetails/${id}`)\n      .then((response) => {\n        setData(response.data.order[0]);\n      });\n  }, []);\n\n  console.log(data);\n\n  const arrMax = (arr) => Math.max(...arr);\n\n  var delivery_times = [];\n\n  data.orderitems.forEach((item) => {\n    delivery_times.push(item.delivery_time);\n  });\n\n  var maximum_delivery_time = arrMax(delivery_times);\n\n  return (\n    <Box\n      pt=\"120px\"\n      pl={{ base: \"5px\", sm: \"100px\" }}\n      pr={{ base: \"5px\", sm: \"100px\" }}\n    >\n      <Heading\n        as=\"h3\"\n        size=\"base\"\n        color=\"gray.600\"\n        mb=\"5px\"\n        bg=\"gray.300\"\n        p=\"5px\"\n      >\n        <HStack>\n          <Box>Order Details :</Box>\n          <Box size=\"xs\" color=\"red.600\">\n            {data.order_id}\n          </Box>\n        </HStack>\n      </Heading>\n      <Box height=\"80px\">\n        <HStack>\n          <b size=\"base\">\n            Deliver within {maximum_delivery_time} days from ordered date{\" \"}\n            {data.order_date}\n          </b>\n          <Box>\n            <Button\n              ml=\"60px\"\n              _hover={{ bg: \"blue.300\", transform: \"scale(1.01)\" }}\n            >\n              Print Shipping Lable\n            </Button>\n          </Box>\n        </HStack>\n\n        <p>\n          Make sure you ship your order within the handling time you specified\n          in the listing. Estimated delivery date shown to buyer:{\" \"}\n          {maximum_delivery_time} days from ordered date\n        </p>\n      </Box>\n\n      <Box width=\"100%\">\n        <HStack>\n          <Box width=\"100%\">\n            <Heading\n              as=\"h3\"\n              size=\"base\"\n              color=\"gray.600\"\n              mb=\"5px\"\n              bg=\"gray.300\"\n              p=\"5px\"\n            >\n              Purchase Details\n            </Heading>\n            <Box height=\"250px\">\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\n                <GridItem fontWeight=\"bold\">Buyer</GridItem>\n                <GridItem fontWeight=\"semibold\">\n                  {data.firstname} {data.lastname}\n                </GridItem>\n                <GridItem fontWeight=\"bold\">E-mail</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.email}</GridItem>\n                <GridItem fontWeight=\"bold\">Phone</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.phone_number}</GridItem>\n                <GridItem fontWeight=\"bold\">Date sold</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.order_date}</GridItem>\n                <GridItem fontWeight=\"bold\">Date paid</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.order_date}</GridItem>\n              </Grid>\n            </Box>\n          </Box>\n\n          <Box width=\"100%\">\n            <Heading\n              as=\"h3\"\n              size=\"base\"\n              color=\"gray.600\"\n              mb=\"5px\"\n              bg=\"gray.300\"\n              p=\"5px\"\n            >\n              Shipping Details\n            </Heading>\n\n            <Box height=\"250px\">\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={2}>\n                <GridItem fontWeight=\"bold\">Tracking</GridItem>\n                <GridItem fontWeight=\"semibold\">\n                  {data.tracking_number}\n                </GridItem>\n                <GridItem fontWeight=\"bold\">Ship_to</GridItem>\n                <GridItem fontWeight=\"semibold\">\n                  {data.address_firstname} {data.address_lastname}\n                </GridItem>\n                <GridItem fontWeight=\"bold\">Street</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.street}</GridItem>\n                <GridItem fontWeight=\"bold\">City</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.city}</GridItem>\n                <GridItem fontWeight=\"bold\">State</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.state}</GridItem>\n                <GridItem fontWeight=\"bold\">Zip Code</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.zip}</GridItem>\n                <GridItem fontWeight=\"bold\">Country of origin</GridItem>\n                <GridItem fontWeight=\"semibold\">Sri Lanka</GridItem>\n                <GridItem fontWeight=\"bold\">Phone</GridItem>\n                <GridItem fontWeight=\"semibold\">{data.phone_number}</GridItem>\n              </Grid>\n            </Box>\n          </Box>\n        </HStack>\n\n        <Box width=\"100%\">\n          <Heading\n            as=\"h3\"\n            size=\"base\"\n            color=\"gray.600\"\n            mb=\"5px\"\n            bg=\"gray.300\"\n            p=\"5px\"\n          >\n            Items\n          </Heading>\n          <Box height=\"auto\" pb=\"100px\">\n            {Array(data.orderitems.length)\n              .fill(\"\")\n              .map((_, i) => (\n                <Box\n                  w=\"100%\"\n                  _hover={{ bg: \"yellow.100\", transform: \"scale(1.01)\" }}\n                  borderRadius=\"lg\"\n                  overflow=\"hidden\"\n                  mb=\"5px\"\n                  borderWidth=\"1px\"\n                >\n                  <HStack>\n                    <Box width=\"50%\" fontWeight=\"semibold\" height=\"80px\">\n                      <Box>\n                        <Img\n                          src={`data:image/png;base64,${arrayBufferToBinaryString(\n                            data.orderitems[i].image.data\n                          )}`}\n                          alt={\"picture\"}\n                          w=\"100px\"\n                          h=\"100px\"\n                        />\n                      </Box>\n                    </Box>\n\n                    <Box width=\"100%\" fontWeight=\"semibold\" height=\"80px\">\n                      <Box fontWeight=\"bold\">\n                        <Text color=\"red.600\" fontSize=\"lg\">\n                          {data.orderitems[i].item_name}\n                        </Text>\n                      </Box>\n                    </Box>\n                    <VStack>\n                      <Box width=\"200px\" fontWeight=\"semibold\" height=\"40px\">\n                        <Box>\n                          <Text color=\"gray.600\" fontSize=\"lg\">\n                            Variant: <b>{data.orderitems[i].variant_name}</b>\n                          </Text>\n                        </Box>\n                      </Box>\n                      <Box width=\"200px\" fontWeight=\"semibold\" height=\"40px\">\n                        <Box>\n                          <Text color=\"gray.600\" fontSize=\"lg\">\n                            Quantity:{\" \"}\n                            <b>{data.orderitems[i].ordered_quantity}</b>\n                          </Text>\n                        </Box>\n                      </Box>\n                    </VStack>\n\n                    <Box\n                      width=\"50%\"\n                      height=\"80px\"\n                      fontWeight=\"semibold\"\n                      textAlign=\"center\"\n                    >\n                      <Text color=\"blue.700\" fontSize=\"2lg\">\n                        Rs. {data.orderitems[i].price}\n                      </Text>\n                    </Box>\n\n                    <Box width=\"80%\" fontWeight=\"semibold\" height=\"80px\">\n                      <Text color=\"gray.600\" fontSize=\"lg\">\n                        Total:{\" \"}\n                        {data.orderitems[i].price *\n                          data.orderitems[i].ordered_quantity}\n                      </Text>\n                    </Box>\n                  </HStack>\n                </Box>\n              ))}\n            <Box\n              borderRadius=\"lg\"\n              overflow=\"hidden\"\n              mb=\"5px\"\n              borderWidth=\"1px\"\n              p=\"50px\"\n            >\n              <HStack spacing='50px'>\n                <Text fontSize=\"2xl\">\n                  Order Total: \n                </Text>\n                <Heading fontSize=\"4xl\">\n                  Rs. {data.order_total}\n                </Heading>\n              </HStack>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default OrderView;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ProductPopularityReport.js",["568","569"],"import React, { useEffect, useState } from \"react\";\nimport ReportProduct from \"../components/ReportProduct\";\n\nfunction ReportProductPopularity() {\n  return (\n    <>\n      <ReportProduct />\n    </>\n  );\n}\n\nexport default ReportProductPopularity;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SellerAllOrders.js",["570","571"],"import {\n    Box,\n    Button,\n    Center,\n    Grid,\n    GridItem,\n    Heading,\n    VStack,\n  } from \"@chakra-ui/react\";\n  import React, { useState,useEffect } from \"react\";\n  import axios from \"axios\";\n  import Deliverycard from \"../components/AllOrdersCard\";\n  import SearchBar from \"../components/SearchBar\";\n\n  \n  function AwaitingDelivery() {\n    \n    var [orderlist, setorderlist] = useState([{}])\n  \n\n\n  \n    useEffect(() => {\n      axios\n        .get(`http://localhost:5000/orders/`)\n        .then((response) => {\n          console.log(response.data.orders)\n          setorderlist(response.data.orders)\n        });\n  \n    }, []);\n   \n  \n    const searchBarText = `Search in All Orders`;\n    const HandleChange = (event) => {\n        var value = event.target.value;\n        axios\n        .post(\"http://localhost:5000/orders\",{\n          \"order_id\":`${value}`\n        })\n        .then((response) => {\n          let data = response.data.orders;\n          setorderlist(data);\n        });\n      \n      };\n\n  \n    return (\n      <Box\n        pt=\"150px\"\n        pl={{ base: \"10px\", sm: \"100px\" }}\n        pr={{ base: \"10px\", sm: \"100px\" }}\n      >\n        <Center mb='10px'>\n          <SearchBar onChange={HandleChange} text={searchBarText} />\n        </Center>\n        <Grid\n          templateColumns=\"repeat(1, 1fr)\" gap={6}\n        >\n          <GridItem  bg=\"gray.300\" p=\"10px\">\n            <Heading as=\"h3\" size=\"xl\" color=\"gray.600\" mb=\"10px\">\n              All Orders\n            </Heading>\n          </GridItem>\n\n          <GridItem \n          \n          h=\"auto\" templateColumns=\"repeat(1, 1fr)\" gap={2} >\n            \n            \n              {Array(orderlist.length)\n                .fill(\"\")\n                .map((_, i) => (\n                  <Deliverycard \n                    \n\n                    Order_ID={orderlist[i].order_id}\n                    Variant_Name= {orderlist[i].variant_name}\n                    imageUrl={orderlist[i].image}\n                    item_name= {orderlist[i].item_name}\n                    payment= {orderlist[i].price*orderlist[i].quantity}\n                    Date_paid={orderlist[i].ordered_date}\n                    Date_shipped={orderlist[i].ordered_date}\n                    Quantity={orderlist[i].quantity}\n                    F_name= {orderlist[i].first_name}\n                    L_name= {orderlist[i].last_name}\n                    Order_status={orderlist[i].order_status}\n                    \n                  />\n                ))}\n           \n          </GridItem>\n          \n        </Grid>\n      </Box>\n    );\n  }\n  \n  export default AwaitingDelivery;\n  ","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AllOrdersCard.js",["572","573","574","575","576","577","578","579","580","581"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\n\n\nfunction ShipmentCard(props) {\n  return (\n \n    <Box w=\"100%\"   _hover={{ bg: \"yellow.100\" ,transform: \"scale(1.01)\" }} borderRadius=\"lg\" overflow=\"hidden\" mb=\"5px\" borderWidth=\"1px\">\n        < HStack>  \n        <Box width=\"50%\" fontWeight=\"semibold\"  height=\"80px\"    > \n        \n        <Box><Img src={props.imageUrl} alt={props.imageAlt} w='80px' h='80px' /></Box>\n        </Box>\n\n        <Box width=\"100%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box  fontWeight=\"bold\"><Text  color=\"red.600\"   fontSize=\"lg\">\n            <a href={`/orderview/${props.Order_ID}`}>{props.Order_ID}</a>\n          </Text></Box>\n        <Box><Text color=\"black.600\" fontSize=\"2lg\">\n            {props.F_name} {props.L_name}\n          </Text></Box>\n        <Box><Text color=\"blue.600\"   fontSize=\"lg\">\n            {props.item_name} \n          </Text></Box>\n        </Box>\n        \n        <Box width=\"80%\" fontWeight=\"semibold\"  height=\"80px\"   > \n        <Box><Text color=\"gray.600\" fontSize=\"lg\">\n        Quantity: <b>{props.Quantity}</b>\n          </Text></Box>\n        <Box><Text color=\"gray.600\" fontSize=\"lg\" >\n        Variant: <b>{props.Variant_Name} </b>\n          </Text></Box>\n        </Box>\n       \n        <Box  width=\"50%\" height=\"80px\"  fontWeight=\"semibold\" textAlign=\"center\"  > \n        <Text color=\"blue.700\" fontSize=\"2lg\">\n            Rs. {props.payment}\n          </Text>\n\n        </Box>\n\n        <Box width=\"80%\" fontWeight=\"semibold\"   height=\"80px\"   > \n        <Text color=\"gray.600\" fontSize=\"lg\">\n            Paid On: {props.Date_paid}\n          </Text>\n        <Box> <Text color=\"gray.600\" fontSize=\"lg\">\n        {props.Order_status===\"shipped\" ?'Shipped On :' + props.Date_shipped: 'Not Yet Shipped'+\" | Status :\" +props.Order_status}\n        </Text></Box> \n        </Box>\n        </HStack>\n    </Box>\n  );\n}\n\nexport default ShipmentCard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReportProduct.js",["582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600"],"import React, { useState } from \"react\";\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  IconButton,\n  Tooltip,\n  Avatar,\n  Center,\n  Badge,\n  Progress,\n  GridItem,\n  Heading,\n  SimpleGrid,\n  useColorMode,\n  Grid,\n  FormControl,\n  FormLabel,\n  Input,\n} from \"@chakra-ui/react\";\n\nimport { AvatarBadge } from \"@chakra-ui/react\";\n// import \"./Middle.css\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport { Money, MoneyOff } from \"@material-ui/icons\";\nimport { GiCartwheel, GiShoppingBag, GiShoppingCart } from \"react-icons/gi\";\nimport { FiUserPlus } from \"react-icons/fi\";\n\nfunction ReportProduct() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  return (\n    <>\n      <div className=\"dashboard\">\n        <Box\n          borderStyle=\"solid\"\n          borderColor=\"gray.800\"\n          boarderRadius=\"200px\"\n          mt=\"0px\"\n          pl=\"20px\"\n          pr=\"20px\"\n          pt=\"250px\"\n          h=\"460px\"\n          mb=\"20px\"\n        >\n          <Box\n            borderStyle=\"solid\"\n            borderColor=\"gray.200\"\n            borderWidth=\"2px\"\n            p=\"10px\"\n            pt=\"30px\"\n            mt=\"-120px\"\n            borderRadius=\"20px\"\n            bg={colorMode === \"light\" ? \"white\" : \"cyan.900\"}\n          >\n            <Center>\n              <Heading as=\"h2\" size=\"2xl\">\n                Product Popularity Report\n              </Heading>\n            </Center>\n            <SimpleGrid columns={2} spacing={10}>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n\n</SimpleGrid>\n            <FormControl>\n            <SimpleGrid columns={2} spacing={10}>\n                <FormLabel>Start Date</FormLabel>\n                <Input\n                  type=\"date\"\n                  placeholder=\"Exp Date\"\n                  value={startDate}\n                  onChange={(e) => setStartDate(e.target.value)}\n                />\n                <FormLabel>End Date</FormLabel>\n                <Input\n                  type=\"date\"\n                  placeholder=\"Exp Date\"\n                  value={endDate}\n                  onChange={(e) => setEndDate(e.target.value)}\n                />\n</SimpleGrid>\n\n              </FormControl>\n          </Box>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nexport default ReportProduct;\n\n{/* <GridItem>\n<Box\n  bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n  borderRadius=\"20px\"\n  color=\"white\"\n  m=\"20px\"\n  p=\"50px\"\n>\n  <SimpleGrid columns={5} spacing={5} pt=\"10px\" pb=\"10px\">\n    <Box textAlign=\"center\">\n      <Heading\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n        as=\"h4\"\n        size=\"lg\"\n      >\n        {\" \"}\n        Rs.\n      </Heading>\n      <Text\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      >\n        {\" \"}\n        Total Revenue\n      </Text>\n    </Box>\n\n    <Box textAlign=\"center\">\n      <Heading\n        as=\"h4\"\n        size=\"lg\"\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      >\n        {\" \"}\n        Rs.\n      </Heading>\n\n      <Text\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      >\n        Today Revenue\n      </Text>\n    </Box>\n\n    <Box textAlign=\"center\">\n      <Heading\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n        as=\"h4\"\n        size=\"lg\"\n      >\n        {\" \"}\n      </Heading>\n      <Text\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      >\n        Awaiting for shipment\n      </Text>\n    </Box>\n    <Box textAlign=\"center\">\n      <Heading\n        as=\"h4\"\n        size=\"lg\"\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      >\n        {\" \"}\n      </Heading>\n      <Text\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      >\n        Awaiting for delivery\n      </Text>\n    </Box>\n    <Box textAlign=\"center\">\n      <Heading\n        as=\"h4\"\n        size=\"lg\"\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      >\n        {\" \"}\n      </Heading>\n\n      <Text\n        textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      >\n        Today New Users\n      </Text>\n    </Box>\n  </SimpleGrid>\n</Box>\n\n</GridItem> */}","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/QuarterReport.js",["601","602","603","604","605","606","607","608","609","610","611"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,\n    Flex,\n    Spacer,\n    useColorMode,\n    useToast,\n    FormControl,\n    Input,\n    Table,\n    Thead,\n    Tbody,\n    Tfoot,\n    Tr,\n    Th,\n    Td,\n    TableCaption,\n    Select\n\n  } from \"@chakra-ui/react\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport Axios from \"axios\";\n\n\n// const ReportItems  = ({stats})=>{\n//     return (\n//         <>\n//            {    \n//                stats.map((stat)=>(\n//                    <ReportItem key={stat.order_id} stat={stat}>  </ReportItem>\n//                    )\n//             )}\n//         </>\n//     )\n// }\n\n\n// const ReportItem = ({stat}) =>{\n//     return(\n//         <Tbody>                            \n//             <Tr>\n//                 <Td>{stat.order_id}</Td>\n//                 <Td>{stat.description.substring(1,stat.description.length-1)}</Td>\n//                 <Td>{stat.ordered_date}</Td>\n//                 <Td>{stat.nb_of_items}</Td>\n//                 <Td>{stat.price}</Td>\n//             </Tr>                             \n//         </Tbody>   \n//     )\n// }\n\n\n\nconst QuarterReport = () => {\n    const toast = useToast()\n  \n    const { colorMode, toggleColorMode } = useColorMode();\n    const [year, setYear] = useState([]);\n    const [tableDetails, setTableDetails] = useState([]);\n    \n\n    const onSubmit  = (e)=>{\n        e.preventDefault()\n\n        if(year.length===0){\n            alert('Select an year')\n            return\n        }\n\n        \n\n\n\n\n\n\n\n\n    }\n\n\n\n  return (\n    <Box\n      pt=\"100px\"\n    >\n      <Grid templateColumns=\"repeat(2, 1fr)\">\n      <Box \n        width=\"auto\"\n        h=\"auto\"                   \n        overflow=\"hidden\"                    \n        pb=\"5px\"                      \n        >        \n    </Box>\n\n      <GridItem colSpan={2} bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'>  Quarterly Sales Report </Heading> \n                                    </Box>\n                                    <Spacer />\n                                    <form onSubmit={onSubmit}>  \n                                    <Flex>  \n                                    \n                                    <FormControl>\n                                            <Select color='white' placeholder=\"Select Year\" onChange={(e)=>setYear(e.target.value)}>\n                                                <option value='2018'>2018</option>\n                                                <option value='2019'>2019</option>\n                                                <option value='2020'>2020</option>\n                                                <option value='2021'>2021</option>\n                                            </Select>\n                                        </FormControl>\n                    \n                                    <Input ml='2' type=\"submit\" value='Generate'  className='btn btn-block' bg=\"teal\" color='white' />\n                                   \n                                    </Flex>\n                                    </form>\n                                 </Flex>\n                            </GridItem>\n\n\n\n        {/* stats view */}\n        <GridItem>\n            \n        \n        </GridItem>  \n\n\n        {/* Table by product sales */}\n        <GridItem colSpan={2} m='5'>\n        \n\n        <Table variant=\"simple\">\n            <TableCaption>Sales reports of specific products of 2020 Business Year (2020/01/01-2020/12/31)</TableCaption>\n                <Thead backgroundColor='cyan.100'>\n                    <Tr color='white'>\n                            <Th>Item ID</Th>\n                            <Th>Item Name</Th>\n                            <Th>Q1</Th>\n                            <Th>Q2</Th>\n                            <Th>Q3</Th>\n                            <Th>Q4</Th>\n                    </Tr>\n                </Thead>\n                                    \n            <Tfoot backgroundColor='cyan.100'>\n                    <Tr>\n                        <Th>Total</Th>\n                        <Th></Th>\n                        <Th> Q1 total</Th>\n                        <Th> Q2 total </Th> \n                        <Th> Q3 total </Th> \n                        <Th> Q4 total </Th> \n                       \n                                            \n                    </Tr>\n            </Tfoot>\n        </Table>                     \n        \n        </GridItem>                  \n\n                            \n                         \n\n            \n      </Grid>\n    </Box>\n  );\n};\n\nexport default withRouter(QuarterReport);\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerStats.js",["612","613","614","615","616"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,\n    Flex,\n    Spacer,\n    useColorMode,\n    useToast,\n    FormControl,\n    Input,\n    Table,\n    Thead,\n    Tbody,\n    Tfoot,\n    Tr,\n    Th,\n    Td,\n\n  } from \"@chakra-ui/react\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport Axios from \"axios\";\n\n\nconst ReportItems  = ({stats})=>{\n    return (\n        <>\n           {    \n               stats.map((stat)=>(\n                   <ReportItem key={stat.order_id} stat={stat}>  </ReportItem>\n                   )\n            )}\n        </>\n    )\n}\n\n\nconst ReportItem = ({stat}) =>{\n    return(\n        <Tbody>                            \n            <Tr>\n                <Td>{stat.order_id}</Td>\n                <Td>{stat.description.substring(1,stat.description.length-1)}</Td>\n                <Td>{stat.ordered_date}</Td>\n                <Td>{stat.nb_of_items}</Td>\n                <Td>{stat.price}</Td>\n            </Tr>                             \n        </Tbody>   \n    )\n}\n\n\nconst CustomerStats = () => {\n    const toast = useToast()\n  \n    const { colorMode, toggleColorMode } = useColorMode();\n    const [startDate, setStartDate] = useState([]);\n    const [endDate,setEndDate]  = useState([]);\n    const [stats, setStats] = useState([]);\n    const [total,setTotal] = useState([]);\n\n    const onSubmit = (e)=>{\n        e.preventDefault()\n\n        if(startDate.length===0 || endDate.length ===0){\n            alert('Enter time period')\n            return\n        }\n\n        var formStartDate = startDate.replace(/-/g, \"/\");\n        var formEndDate = endDate.replace(/-/g, \"/\");\n\n        Axios.post(\"http://localhost:5000/customer/generatereport\",{start_date:formStartDate, end_date:formEndDate})\n        .then((Response)=>{\n            \n            // console.log(\"came\",Response.data.stats)\n           setStats(Response.data.stats)\n\n           var sum = 0\n           for(var i=0;i<Response.data.stats.length;i++){\n               sum=sum+parseFloat(Response.data.stats[i].price)\n           }\n           \n           setTotal(sum)\n\n\n           if(Response.data.stats.length===0){\n            toast({\n                position: \"bottom-right\",    \n                description: \"No any orders in this time period\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n           }\n           else{\n            toast({\n                position: \"bottom-right\",    \n                description: \"Customer Report Generated Successfully\",\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n              })\n            }\n        })\n        .catch((err) => {\n            toast({\n                position: \"bottom-right\",    \n                description: \"Internal Server Error. Try again later\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              })\n          });  \n\n    }\n\n\n\n  return (\n    <Box\n      pt=\"100px\"\n      // pl={{ base: \"10px\", sm: \"100px\" }}\n      // pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Grid templateColumns=\"repeat(5, 1fr)\" templateRows=\"repeat(2, 1fr)\">\n        <GridItem colSpan={1} rowSpan={2}>\n          <CustomerDashSideBar page=\"dashboard\" />\n        </GridItem>\n\n        <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\n\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> Customer Order Report </Heading> \n                                    </Box>\n                                    <Spacer />\n                                    <form onSubmit={onSubmit}>  \n                                    <Flex>  \n                                    \n                                    <FormControl mr='2' >\n                                        <Input type=\"date\" color='white' placeholder=\"starting date\"  value={startDate} onChange={(e)=>setStartDate(e.target.value)} />\n                                    </FormControl>\n                                    <FormControl mr='2' >\n                                        <Input type=\"date\" color='white' placeholder=\"end date\" value={endDate}  onChange={(e)=>setEndDate(e.target.value)} />\n                                    </FormControl>\n                                    <Input  type=\"submit\" value='Search'  className='btn btn-block' bg=\"teal\" color='white' />\n                                   \n                                    </Flex>\n                                    </form>\n                                 </Flex>\n                            </GridItem>\n\n                            <GridItem colSpan={3} m='5'>\n\n                            <Table variant=\"simple\">\n                                {/* <TableCaption>Imperial to metric conversion factors</TableCaption> */}\n                                    <Thead backgroundColor='cyan.100'>\n                                        <Tr color='white'>\n                                            <Th>Order ID</Th>\n                                            <Th>Description</Th>\n                                            <Th>Order Date</Th>\n                                            <Th>No of Items</Th>\n                                            <Th >Price</Th>\n                                        </Tr>\n                                    </Thead>\n                                    \n                                    <ReportItems stats={stats} />\n\n                                    <Tfoot backgroundColor='cyan.100'>\n                                        <Tr>\n                                            <Th></Th>\n                                            <Th></Th>\n                                            <Th></Th>\n                                            <Th> Total Spent </Th>\n                                            <Th>{total}</Th>\n                                            \n                                        </Tr>\n                                    </Tfoot>\n                            </Table>                     \n                            </GridItem>              \n                        </Grid>\n                        \n\n                </GridItem>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default withRouter(CustomerStats);\n",{"ruleId":"617","replacedBy":"618"},{"ruleId":"619","replacedBy":"620"},{"ruleId":"621","severity":1,"message":"622","line":13,"column":8,"nodeType":"623","messageId":"624","endLine":13,"endColumn":23},{"ruleId":"621","severity":1,"message":"625","line":3,"column":5,"nodeType":"623","messageId":"624","endLine":3,"endColumn":11},{"ruleId":"621","severity":1,"message":"626","line":8,"column":5,"nodeType":"623","messageId":"624","endLine":8,"endColumn":11},{"ruleId":"621","severity":1,"message":"627","line":17,"column":23,"nodeType":"623","messageId":"624","endLine":17,"endColumn":48},{"ruleId":"621","severity":1,"message":"625","line":3,"column":5,"nodeType":"623","messageId":"624","endLine":3,"endColumn":11},{"ruleId":"621","severity":1,"message":"626","line":8,"column":5,"nodeType":"623","messageId":"624","endLine":8,"endColumn":11},{"ruleId":"621","severity":1,"message":"627","line":17,"column":23,"nodeType":"623","messageId":"624","endLine":17,"endColumn":48},{"ruleId":"621","severity":1,"message":"628","line":8,"column":5,"nodeType":"623","messageId":"624","endLine":8,"endColumn":18},{"ruleId":"621","severity":1,"message":"629","line":12,"column":17,"nodeType":"623","messageId":"624","endLine":12,"endColumn":25},{"ruleId":"621","severity":1,"message":"630","line":12,"column":27,"nodeType":"623","messageId":"624","endLine":12,"endColumn":36},{"ruleId":"621","severity":1,"message":"631","line":19,"column":24,"nodeType":"623","messageId":"624","endLine":19,"endColumn":39},{"ruleId":"621","severity":1,"message":"632","line":21,"column":11,"nodeType":"623","messageId":"624","endLine":21,"endColumn":16},{"ruleId":"633","severity":1,"message":"634","line":60,"column":8,"nodeType":"635","endLine":60,"endColumn":10,"suggestions":"636"},{"ruleId":"637","severity":1,"message":"638","line":139,"column":37,"nodeType":"639","messageId":"640","endLine":139,"endColumn":39},{"ruleId":"621","severity":1,"message":"631","line":145,"column":24,"nodeType":"623","messageId":"624","endLine":145,"endColumn":39},{"ruleId":"621","severity":1,"message":"641","line":1,"column":10,"nodeType":"623","messageId":"624","endLine":1,"endColumn":17},{"ruleId":"621","severity":1,"message":"626","line":2,"column":35,"nodeType":"623","messageId":"624","endLine":2,"endColumn":41},{"ruleId":"621","severity":1,"message":"642","line":2,"column":50,"nodeType":"623","messageId":"624","endLine":2,"endColumn":54},{"ruleId":"621","severity":1,"message":"643","line":7,"column":17,"nodeType":"623","messageId":"624","endLine":7,"endColumn":26},{"ruleId":"621","severity":1,"message":"644","line":13,"column":10,"nodeType":"623","messageId":"624","endLine":13,"endColumn":15},{"ruleId":"621","severity":1,"message":"645","line":10,"column":5,"nodeType":"623","messageId":"624","endLine":10,"endColumn":9},{"ruleId":"621","severity":1,"message":"631","line":15,"column":24,"nodeType":"623","messageId":"624","endLine":15,"endColumn":39},{"ruleId":"621","severity":1,"message":"626","line":24,"column":3,"nodeType":"623","messageId":"624","endLine":24,"endColumn":9},{"ruleId":"621","severity":1,"message":"646","line":30,"column":10,"nodeType":"623","messageId":"624","endLine":30,"endColumn":20},{"ruleId":"621","severity":1,"message":"631","line":39,"column":22,"nodeType":"623","messageId":"624","endLine":39,"endColumn":37},{"ruleId":"621","severity":1,"message":"647","line":91,"column":9,"nodeType":"623","messageId":"624","endLine":91,"endColumn":20},{"ruleId":"621","severity":1,"message":"631","line":21,"column":24,"nodeType":"623","messageId":"624","endLine":21,"endColumn":39},{"ruleId":"633","severity":1,"message":"634","line":44,"column":8,"nodeType":"635","endLine":44,"endColumn":10,"suggestions":"648"},{"ruleId":"633","severity":1,"message":"634","line":89,"column":8,"nodeType":"635","endLine":89,"endColumn":10,"suggestions":"649"},{"ruleId":"621","severity":1,"message":"650","line":3,"column":5,"nodeType":"623","messageId":"624","endLine":3,"endColumn":11},{"ruleId":"621","severity":1,"message":"641","line":11,"column":10,"nodeType":"623","messageId":"624","endLine":11,"endColumn":17},{"ruleId":"621","severity":1,"message":"651","line":11,"column":19,"nodeType":"623","messageId":"624","endLine":11,"endColumn":28},{"ruleId":"621","severity":1,"message":"652","line":11,"column":48,"nodeType":"623","messageId":"624","endLine":11,"endColumn":56},{"ruleId":"621","severity":1,"message":"653","line":13,"column":18,"nodeType":"623","messageId":"624","endLine":13,"endColumn":29},{"ruleId":"621","severity":1,"message":"654","line":17,"column":5,"nodeType":"623","messageId":"624","endLine":17,"endColumn":21},{"ruleId":"621","severity":1,"message":"655","line":18,"column":5,"nodeType":"623","messageId":"624","endLine":18,"endColumn":19},{"ruleId":"621","severity":1,"message":"629","line":20,"column":17,"nodeType":"623","messageId":"624","endLine":20,"endColumn":25},{"ruleId":"621","severity":1,"message":"656","line":21,"column":18,"nodeType":"623","messageId":"624","endLine":21,"endColumn":29},{"ruleId":"621","severity":1,"message":"657","line":21,"column":31,"nodeType":"623","messageId":"624","endLine":21,"endColumn":42},{"ruleId":"621","severity":1,"message":"658","line":22,"column":8,"nodeType":"623","messageId":"624","endLine":22,"endColumn":17},{"ruleId":"633","severity":1,"message":"634","line":47,"column":8,"nodeType":"635","endLine":47,"endColumn":10,"suggestions":"659"},{"ruleId":"621","severity":1,"message":"631","line":124,"column":24,"nodeType":"623","messageId":"624","endLine":124,"endColumn":39},{"ruleId":"621","severity":1,"message":"660","line":9,"column":3,"nodeType":"623","messageId":"624","endLine":9,"endColumn":15},{"ruleId":"621","severity":1,"message":"653","line":12,"column":18,"nodeType":"623","messageId":"624","endLine":12,"endColumn":29},{"ruleId":"621","severity":1,"message":"661","line":13,"column":17,"nodeType":"623","messageId":"624","endLine":13,"endColumn":23},{"ruleId":"621","severity":1,"message":"626","line":13,"column":25,"nodeType":"623","messageId":"624","endLine":13,"endColumn":31},{"ruleId":"621","severity":1,"message":"641","line":18,"column":3,"nodeType":"623","messageId":"624","endLine":18,"endColumn":10},{"ruleId":"621","severity":1,"message":"651","line":19,"column":3,"nodeType":"623","messageId":"624","endLine":19,"endColumn":12},{"ruleId":"621","severity":1,"message":"662","line":23,"column":8,"nodeType":"623","messageId":"624","endLine":23,"endColumn":32},{"ruleId":"621","severity":1,"message":"663","line":24,"column":8,"nodeType":"623","messageId":"624","endLine":24,"endColumn":26},{"ruleId":"621","severity":1,"message":"664","line":28,"column":9,"nodeType":"623","messageId":"624","endLine":28,"endColumn":11},{"ruleId":"621","severity":1,"message":"665","line":32,"column":16,"nodeType":"623","messageId":"624","endLine":32,"endColumn":23},{"ruleId":"621","severity":1,"message":"666","line":8,"column":10,"nodeType":"623","messageId":"624","endLine":8,"endColumn":13},{"ruleId":"621","severity":1,"message":"667","line":8,"column":15,"nodeType":"623","messageId":"624","endLine":8,"endColumn":19},{"ruleId":"621","severity":1,"message":"668","line":9,"column":10,"nodeType":"623","messageId":"624","endLine":9,"endColumn":26},{"ruleId":"669","severity":1,"message":"670","line":4,"column":26,"nodeType":"671","messageId":"672","endLine":4,"endColumn":40,"fix":"673"},{"ruleId":"617","replacedBy":"674"},{"ruleId":"619","replacedBy":"675"},{"ruleId":"621","severity":1,"message":"676","line":27,"column":10,"nodeType":"623","messageId":"624","endLine":27,"endColumn":18},{"ruleId":"621","severity":1,"message":"677","line":36,"column":8,"nodeType":"623","messageId":"624","endLine":36,"endColumn":18},{"ruleId":"621","severity":1,"message":"678","line":37,"column":10,"nodeType":"623","messageId":"624","endLine":37,"endColumn":16},{"ruleId":"621","severity":1,"message":"679","line":42,"column":11,"nodeType":"623","messageId":"624","endLine":42,"endColumn":20},{"ruleId":"621","severity":1,"message":"631","line":42,"column":22,"nodeType":"623","messageId":"624","endLine":42,"endColumn":37},{"ruleId":"633","severity":1,"message":"680","line":95,"column":6,"nodeType":"635","endLine":95,"endColumn":8,"suggestions":"681"},{"ruleId":"621","severity":1,"message":"682","line":6,"column":5,"nodeType":"623","messageId":"624","endLine":6,"endColumn":12},{"ruleId":"621","severity":1,"message":"683","line":15,"column":10,"nodeType":"623","messageId":"624","endLine":15,"endColumn":19},{"ruleId":"621","severity":1,"message":"684","line":16,"column":8,"nodeType":"623","messageId":"624","endLine":16,"endColumn":14},{"ruleId":"633","severity":1,"message":"634","line":44,"column":6,"nodeType":"635","endLine":44,"endColumn":8,"suggestions":"685"},{"ruleId":"621","severity":1,"message":"631","line":73,"column":22,"nodeType":"623","messageId":"624","endLine":73,"endColumn":37},{"ruleId":"621","severity":1,"message":"631","line":36,"column":22,"nodeType":"623","messageId":"624","endLine":36,"endColumn":37},{"ruleId":"686","severity":1,"message":"687","line":48,"column":11,"nodeType":"623","messageId":"688","endLine":48,"endColumn":14},{"ruleId":"621","severity":1,"message":"689","line":11,"column":10,"nodeType":"623","messageId":"624","endLine":11,"endColumn":20},{"ruleId":"621","severity":1,"message":"630","line":1,"column":17,"nodeType":"623","messageId":"624","endLine":1,"endColumn":26},{"ruleId":"621","severity":1,"message":"629","line":1,"column":28,"nodeType":"623","messageId":"624","endLine":1,"endColumn":36},{"ruleId":"621","severity":1,"message":"690","line":5,"column":3,"nodeType":"623","messageId":"624","endLine":5,"endColumn":10},{"ruleId":"621","severity":1,"message":"691","line":20,"column":7,"nodeType":"623","messageId":"624","endLine":20,"endColumn":10},{"ruleId":"621","severity":1,"message":"630","line":1,"column":17,"nodeType":"623","messageId":"624","endLine":1,"endColumn":26},{"ruleId":"621","severity":1,"message":"692","line":7,"column":8,"nodeType":"623","messageId":"624","endLine":7,"endColumn":15},{"ruleId":"621","severity":1,"message":"693","line":8,"column":8,"nodeType":"623","messageId":"624","endLine":8,"endColumn":13},{"ruleId":"621","severity":1,"message":"652","line":1,"column":10,"nodeType":"623","messageId":"624","endLine":1,"endColumn":18},{"ruleId":"621","severity":1,"message":"660","line":5,"column":3,"nodeType":"623","messageId":"624","endLine":5,"endColumn":15},{"ruleId":"621","severity":1,"message":"694","line":6,"column":3,"nodeType":"623","messageId":"624","endLine":6,"endColumn":9},{"ruleId":"621","severity":1,"message":"656","line":7,"column":3,"nodeType":"623","messageId":"624","endLine":7,"endColumn":14},{"ruleId":"621","severity":1,"message":"626","line":9,"column":3,"nodeType":"623","messageId":"624","endLine":9,"endColumn":9},{"ruleId":"621","severity":1,"message":"690","line":10,"column":3,"nodeType":"623","messageId":"624","endLine":10,"endColumn":10},{"ruleId":"621","severity":1,"message":"695","line":11,"column":3,"nodeType":"623","messageId":"624","endLine":11,"endColumn":8},{"ruleId":"621","severity":1,"message":"696","line":12,"column":3,"nodeType":"623","messageId":"624","endLine":12,"endColumn":8},{"ruleId":"621","severity":1,"message":"629","line":15,"column":17,"nodeType":"623","messageId":"624","endLine":15,"endColumn":25},{"ruleId":"621","severity":1,"message":"652","line":1,"column":10,"nodeType":"623","messageId":"624","endLine":1,"endColumn":18},{"ruleId":"621","severity":1,"message":"660","line":5,"column":3,"nodeType":"623","messageId":"624","endLine":5,"endColumn":15},{"ruleId":"621","severity":1,"message":"694","line":6,"column":3,"nodeType":"623","messageId":"624","endLine":6,"endColumn":9},{"ruleId":"621","severity":1,"message":"656","line":7,"column":3,"nodeType":"623","messageId":"624","endLine":7,"endColumn":14},{"ruleId":"621","severity":1,"message":"626","line":9,"column":3,"nodeType":"623","messageId":"624","endLine":9,"endColumn":9},{"ruleId":"621","severity":1,"message":"690","line":10,"column":3,"nodeType":"623","messageId":"624","endLine":10,"endColumn":10},{"ruleId":"621","severity":1,"message":"695","line":11,"column":3,"nodeType":"623","messageId":"624","endLine":11,"endColumn":8},{"ruleId":"621","severity":1,"message":"696","line":12,"column":3,"nodeType":"623","messageId":"624","endLine":12,"endColumn":8},{"ruleId":"621","severity":1,"message":"629","line":15,"column":17,"nodeType":"623","messageId":"624","endLine":15,"endColumn":25},{"ruleId":"621","severity":1,"message":"697","line":3,"column":5,"nodeType":"623","messageId":"624","endLine":3,"endColumn":9},{"ruleId":"621","severity":1,"message":"698","line":4,"column":5,"nodeType":"623","messageId":"624","endLine":4,"endColumn":13},{"ruleId":"621","severity":1,"message":"690","line":5,"column":5,"nodeType":"623","messageId":"624","endLine":5,"endColumn":12},{"ruleId":"621","severity":1,"message":"645","line":6,"column":5,"nodeType":"623","messageId":"624","endLine":6,"endColumn":9},{"ruleId":"621","severity":1,"message":"682","line":7,"column":5,"nodeType":"623","messageId":"624","endLine":7,"endColumn":12},{"ruleId":"621","severity":1,"message":"631","line":17,"column":24,"nodeType":"623","messageId":"624","endLine":17,"endColumn":39},{"ruleId":"621","severity":1,"message":"632","line":18,"column":11,"nodeType":"623","messageId":"624","endLine":18,"endColumn":16},{"ruleId":"633","severity":1,"message":"634","line":40,"column":8,"nodeType":"635","endLine":40,"endColumn":10,"suggestions":"699"},{"ruleId":"621","severity":1,"message":"650","line":10,"column":3,"nodeType":"623","messageId":"624","endLine":10,"endColumn":9},{"ruleId":"621","severity":1,"message":"631","line":15,"column":21,"nodeType":"623","messageId":"624","endLine":15,"endColumn":36},{"ruleId":"637","severity":1,"message":"638","line":37,"column":42,"nodeType":"639","messageId":"640","endLine":37,"endColumn":44},{"ruleId":"621","severity":1,"message":"700","line":13,"column":19,"nodeType":"623","messageId":"624","endLine":13,"endColumn":27},{"ruleId":"701","severity":1,"message":"702","line":84,"column":13,"nodeType":"703","endLine":84,"endColumn":34},{"ruleId":"621","severity":1,"message":"704","line":3,"column":3,"nodeType":"623","messageId":"624","endLine":3,"endColumn":17},{"ruleId":"621","severity":1,"message":"705","line":17,"column":17,"nodeType":"623","messageId":"624","endLine":17,"endColumn":25},{"ruleId":"621","severity":1,"message":"706","line":18,"column":10,"nodeType":"623","messageId":"624","endLine":18,"endColumn":21},{"ruleId":"621","severity":1,"message":"625","line":2,"column":10,"nodeType":"623","messageId":"624","endLine":2,"endColumn":16},{"ruleId":"621","severity":1,"message":"625","line":2,"column":10,"nodeType":"623","messageId":"624","endLine":2,"endColumn":16},{"ruleId":"621","severity":1,"message":"707","line":4,"column":3,"nodeType":"623","messageId":"624","endLine":4,"endColumn":13},{"ruleId":"621","severity":1,"message":"708","line":5,"column":3,"nodeType":"623","messageId":"624","endLine":5,"endColumn":14},{"ruleId":"621","severity":1,"message":"709","line":6,"column":3,"nodeType":"623","messageId":"624","endLine":6,"endColumn":12},{"ruleId":"621","severity":1,"message":"710","line":7,"column":3,"nodeType":"623","messageId":"624","endLine":7,"endColumn":12},{"ruleId":"621","severity":1,"message":"711","line":8,"column":3,"nodeType":"623","messageId":"624","endLine":8,"endColumn":13},{"ruleId":"621","severity":1,"message":"642","line":15,"column":3,"nodeType":"623","messageId":"624","endLine":15,"endColumn":7},{"ruleId":"621","severity":1,"message":"712","line":16,"column":3,"nodeType":"623","messageId":"624","endLine":16,"endColumn":12},{"ruleId":"621","severity":1,"message":"713","line":23,"column":8,"nodeType":"623","messageId":"624","endLine":23,"endColumn":20},{"ruleId":"621","severity":1,"message":"714","line":2,"column":10,"nodeType":"623","messageId":"624","endLine":2,"endColumn":22},{"ruleId":"621","severity":1,"message":"715","line":2,"column":24,"nodeType":"623","messageId":"624","endLine":2,"endColumn":41},{"ruleId":"621","severity":1,"message":"716","line":9,"column":3,"nodeType":"623","messageId":"624","endLine":9,"endColumn":13},{"ruleId":"621","severity":1,"message":"631","line":13,"column":22,"nodeType":"623","messageId":"624","endLine":13,"endColumn":37},{"ruleId":"621","severity":1,"message":"661","line":3,"column":3,"nodeType":"623","messageId":"624","endLine":3,"endColumn":9},{"ruleId":"621","severity":1,"message":"694","line":5,"column":3,"nodeType":"623","messageId":"624","endLine":5,"endColumn":9},{"ruleId":"621","severity":1,"message":"690","line":8,"column":3,"nodeType":"623","messageId":"624","endLine":8,"endColumn":10},{"ruleId":"621","severity":1,"message":"626","line":9,"column":3,"nodeType":"623","messageId":"624","endLine":9,"endColumn":9},{"ruleId":"621","severity":1,"message":"717","line":14,"column":8,"nodeType":"623","messageId":"624","endLine":14,"endColumn":14},{"ruleId":"621","severity":1,"message":"679","line":17,"column":11,"nodeType":"623","messageId":"624","endLine":17,"endColumn":20},{"ruleId":"621","severity":1,"message":"631","line":17,"column":22,"nodeType":"623","messageId":"624","endLine":17,"endColumn":37},{"ruleId":"621","severity":1,"message":"718","line":18,"column":7,"nodeType":"623","messageId":"624","endLine":18,"endColumn":14},{"ruleId":"621","severity":1,"message":"631","line":14,"column":22,"nodeType":"623","messageId":"624","endLine":14,"endColumn":37},{"ruleId":"621","severity":1,"message":"693","line":5,"column":8,"nodeType":"623","messageId":"624","endLine":5,"endColumn":13},{"ruleId":"621","severity":1,"message":"719","line":6,"column":8,"nodeType":"623","messageId":"624","endLine":6,"endColumn":15},{"ruleId":"637","severity":1,"message":"638","line":32,"column":33,"nodeType":"639","messageId":"640","endLine":32,"endColumn":35},{"ruleId":"720","severity":1,"message":"721","line":77,"column":1,"nodeType":"722","endLine":84,"endColumn":2},{"ruleId":"621","severity":1,"message":"630","line":1,"column":17,"nodeType":"623","messageId":"624","endLine":1,"endColumn":26},{"ruleId":"621","severity":1,"message":"723","line":4,"column":8,"nodeType":"623","messageId":"624","endLine":4,"endColumn":19},{"ruleId":"621","severity":1,"message":"693","line":5,"column":8,"nodeType":"623","messageId":"624","endLine":5,"endColumn":13},{"ruleId":"621","severity":1,"message":"724","line":3,"column":10,"nodeType":"623","messageId":"624","endLine":3,"endColumn":27},{"ruleId":"621","severity":1,"message":"725","line":5,"column":3,"nodeType":"623","messageId":"624","endLine":5,"endColumn":14},{"ruleId":"621","severity":1,"message":"726","line":6,"column":3,"nodeType":"623","messageId":"624","endLine":6,"endColumn":27},{"ruleId":"621","severity":1,"message":"706","line":7,"column":3,"nodeType":"623","messageId":"624","endLine":7,"endColumn":14},{"ruleId":"621","severity":1,"message":"727","line":8,"column":3,"nodeType":"623","messageId":"624","endLine":8,"endColumn":16},{"ruleId":"621","severity":1,"message":"728","line":9,"column":3,"nodeType":"623","messageId":"624","endLine":9,"endColumn":18},{"ruleId":"621","severity":1,"message":"729","line":12,"column":3,"nodeType":"623","messageId":"624","endLine":12,"endColumn":17},{"ruleId":"621","severity":1,"message":"730","line":14,"column":24,"nodeType":"623","messageId":"624","endLine":14,"endColumn":30},{"ruleId":"621","severity":1,"message":"731","line":15,"column":10,"nodeType":"623","messageId":"624","endLine":15,"endColumn":27},{"ruleId":"621","severity":1,"message":"732","line":18,"column":3,"nodeType":"623","messageId":"624","endLine":18,"endColumn":17},{"ruleId":"621","severity":1,"message":"666","line":31,"column":10,"nodeType":"623","messageId":"624","endLine":31,"endColumn":13},{"ruleId":"621","severity":1,"message":"645","line":31,"column":21,"nodeType":"623","messageId":"624","endLine":31,"endColumn":25},{"ruleId":"621","severity":1,"message":"733","line":35,"column":10,"nodeType":"623","messageId":"624","endLine":35,"endColumn":16},{"ruleId":"734","severity":1,"message":"735","line":43,"column":5,"nodeType":"736","messageId":"737","endLine":45,"endColumn":6},{"ruleId":"621","severity":1,"message":"625","line":2,"column":3,"nodeType":"623","messageId":"624","endLine":2,"endColumn":9},{"ruleId":"621","severity":1,"message":"738","line":3,"column":3,"nodeType":"623","messageId":"624","endLine":3,"endColumn":18},{"ruleId":"621","severity":1,"message":"739","line":4,"column":3,"nodeType":"623","messageId":"624","endLine":4,"endColumn":7},{"ruleId":"621","severity":1,"message":"645","line":6,"column":3,"nodeType":"623","messageId":"624","endLine":6,"endColumn":7},{"ruleId":"621","severity":1,"message":"631","line":17,"column":22,"nodeType":"623","messageId":"624","endLine":17,"endColumn":37},{"ruleId":"740","severity":1,"message":"741","line":29,"column":9,"nodeType":"742","endLine":29,"endColumn":21},{"ruleId":"621","severity":1,"message":"629","line":1,"column":16,"nodeType":"623","messageId":"624","endLine":1,"endColumn":24},{"ruleId":"621","severity":1,"message":"743","line":24,"column":13,"nodeType":"623","messageId":"624","endLine":24,"endColumn":19},{"ruleId":"621","severity":1,"message":"744","line":24,"column":21,"nodeType":"623","messageId":"624","endLine":24,"endColumn":27},{"ruleId":"621","severity":1,"message":"745","line":24,"column":29,"nodeType":"623","messageId":"624","endLine":24,"endColumn":36},{"ruleId":"621","severity":1,"message":"631","line":26,"column":24,"nodeType":"623","messageId":"624","endLine":26,"endColumn":39},{"ruleId":"621","severity":1,"message":"629","line":1,"column":16,"nodeType":"623","messageId":"624","endLine":1,"endColumn":24},{"ruleId":"621","severity":1,"message":"746","line":23,"column":10,"nodeType":"623","messageId":"624","endLine":23,"endColumn":16},{"ruleId":"621","severity":1,"message":"747","line":23,"column":17,"nodeType":"623","messageId":"624","endLine":23,"endColumn":24},{"ruleId":"621","severity":1,"message":"748","line":23,"column":26,"nodeType":"623","messageId":"624","endLine":23,"endColumn":36},{"ruleId":"621","severity":1,"message":"743","line":28,"column":13,"nodeType":"623","messageId":"624","endLine":28,"endColumn":19},{"ruleId":"621","severity":1,"message":"744","line":28,"column":21,"nodeType":"623","messageId":"624","endLine":28,"endColumn":27},{"ruleId":"621","severity":1,"message":"745","line":28,"column":29,"nodeType":"623","messageId":"624","endLine":28,"endColumn":36},{"ruleId":"621","severity":1,"message":"631","line":30,"column":24,"nodeType":"623","messageId":"624","endLine":30,"endColumn":39},{"ruleId":"621","severity":1,"message":"695","line":10,"column":5,"nodeType":"623","messageId":"624","endLine":10,"endColumn":10},{"ruleId":"621","severity":1,"message":"661","line":11,"column":5,"nodeType":"623","messageId":"624","endLine":11,"endColumn":11},{"ruleId":"621","severity":1,"message":"631","line":31,"column":24,"nodeType":"623","messageId":"624","endLine":31,"endColumn":39},{"ruleId":"686","severity":1,"message":"749","line":55,"column":13,"nodeType":"623","messageId":"688","endLine":55,"endColumn":17},{"ruleId":"637","severity":1,"message":"638","line":66,"column":18,"nodeType":"639","messageId":"640","endLine":66,"endColumn":20},{"ruleId":"637","severity":1,"message":"638","line":73,"column":24,"nodeType":"639","messageId":"640","endLine":73,"endColumn":26},{"ruleId":"621","severity":1,"message":"738","line":8,"column":3,"nodeType":"623","messageId":"624","endLine":8,"endColumn":18},{"ruleId":"621","severity":1,"message":"629","line":11,"column":17,"nodeType":"623","messageId":"624","endLine":11,"endColumn":25},{"ruleId":"621","severity":1,"message":"631","line":13,"column":22,"nodeType":"623","messageId":"624","endLine":13,"endColumn":37},{"ruleId":"621","severity":1,"message":"750","line":2,"column":10,"nodeType":"623","messageId":"624","endLine":2,"endColumn":19},{"ruleId":"621","severity":1,"message":"645","line":2,"column":18,"nodeType":"623","messageId":"624","endLine":2,"endColumn":22},{"ruleId":"751","severity":1,"message":"752","line":23,"column":7,"nodeType":"742","endLine":23,"endColumn":77},{"ruleId":"621","severity":1,"message":"693","line":6,"column":8,"nodeType":"623","messageId":"624","endLine":6,"endColumn":13},{"ruleId":"621","severity":1,"message":"645","line":2,"column":18,"nodeType":"623","messageId":"624","endLine":2,"endColumn":22},{"ruleId":"751","severity":1,"message":"752","line":23,"column":7,"nodeType":"742","endLine":23,"endColumn":77},{"ruleId":"621","severity":1,"message":"630","line":1,"column":17,"nodeType":"623","messageId":"624","endLine":1,"endColumn":26},{"ruleId":"621","severity":1,"message":"693","line":6,"column":8,"nodeType":"623","messageId":"624","endLine":6,"endColumn":13},{"ruleId":"621","severity":1,"message":"625","line":7,"column":10,"nodeType":"623","messageId":"624","endLine":7,"endColumn":16},{"ruleId":"621","severity":1,"message":"753","line":11,"column":56,"nodeType":"623","messageId":"624","endLine":11,"endColumn":67},{"ruleId":"633","severity":1,"message":"754","line":53,"column":6,"nodeType":"635","endLine":53,"endColumn":14,"suggestions":"755"},{"ruleId":"621","severity":1,"message":"756","line":3,"column":8,"nodeType":"623","messageId":"624","endLine":3,"endColumn":15},{"ruleId":"621","severity":1,"message":"757","line":52,"column":7,"nodeType":"623","messageId":"624","endLine":52,"endColumn":24},{"ruleId":"633","severity":1,"message":"754","line":74,"column":6,"nodeType":"635","endLine":74,"endColumn":14,"suggestions":"758"},{"ruleId":"617","replacedBy":"759"},{"ruleId":"619","replacedBy":"760"},{"ruleId":"621","severity":1,"message":"650","line":6,"column":5,"nodeType":"623","messageId":"624","endLine":6,"endColumn":11},{"ruleId":"621","severity":1,"message":"626","line":10,"column":5,"nodeType":"623","messageId":"624","endLine":10,"endColumn":11},{"ruleId":"621","severity":1,"message":"629","line":13,"column":19,"nodeType":"623","messageId":"624","endLine":13,"endColumn":27},{"ruleId":"621","severity":1,"message":"761","line":14,"column":10,"nodeType":"623","messageId":"624","endLine":14,"endColumn":22},{"ruleId":"621","severity":1,"message":"762","line":22,"column":11,"nodeType":"623","messageId":"624","endLine":22,"endColumn":26},{"ruleId":"621","severity":1,"message":"763","line":24,"column":11,"nodeType":"623","messageId":"624","endLine":24,"endColumn":18},{"ruleId":"621","severity":1,"message":"764","line":37,"column":11,"nodeType":"623","messageId":"624","endLine":37,"endColumn":19},{"ruleId":"621","severity":1,"message":"630","line":1,"column":17,"nodeType":"623","messageId":"624","endLine":1,"endColumn":26},{"ruleId":"621","severity":1,"message":"629","line":1,"column":28,"nodeType":"623","messageId":"624","endLine":1,"endColumn":36},{"ruleId":"621","severity":1,"message":"625","line":3,"column":5,"nodeType":"623","messageId":"624","endLine":3,"endColumn":11},{"ruleId":"621","severity":1,"message":"626","line":8,"column":5,"nodeType":"623","messageId":"624","endLine":8,"endColumn":11},{"ruleId":"621","severity":1,"message":"652","line":1,"column":10,"nodeType":"623","messageId":"624","endLine":1,"endColumn":18},{"ruleId":"621","severity":1,"message":"660","line":5,"column":3,"nodeType":"623","messageId":"624","endLine":5,"endColumn":15},{"ruleId":"621","severity":1,"message":"694","line":6,"column":3,"nodeType":"623","messageId":"624","endLine":6,"endColumn":9},{"ruleId":"621","severity":1,"message":"656","line":7,"column":3,"nodeType":"623","messageId":"624","endLine":7,"endColumn":14},{"ruleId":"621","severity":1,"message":"626","line":9,"column":3,"nodeType":"623","messageId":"624","endLine":9,"endColumn":9},{"ruleId":"621","severity":1,"message":"690","line":10,"column":3,"nodeType":"623","messageId":"624","endLine":10,"endColumn":10},{"ruleId":"621","severity":1,"message":"695","line":11,"column":3,"nodeType":"623","messageId":"624","endLine":11,"endColumn":8},{"ruleId":"621","severity":1,"message":"696","line":12,"column":3,"nodeType":"623","messageId":"624","endLine":12,"endColumn":8},{"ruleId":"621","severity":1,"message":"629","line":15,"column":17,"nodeType":"623","messageId":"624","endLine":15,"endColumn":25},{"ruleId":"765","severity":1,"message":"766","line":62,"column":96,"nodeType":"639","messageId":"767","endLine":62,"endColumn":97},{"ruleId":"621","severity":1,"message":"704","line":3,"column":3,"nodeType":"623","messageId":"624","endLine":3,"endColumn":17},{"ruleId":"621","severity":1,"message":"645","line":5,"column":3,"nodeType":"623","messageId":"624","endLine":5,"endColumn":7},{"ruleId":"621","severity":1,"message":"768","line":6,"column":3,"nodeType":"623","messageId":"624","endLine":6,"endColumn":13},{"ruleId":"621","severity":1,"message":"769","line":7,"column":3,"nodeType":"623","messageId":"624","endLine":7,"endColumn":10},{"ruleId":"621","severity":1,"message":"694","line":8,"column":3,"nodeType":"623","messageId":"624","endLine":8,"endColumn":9},{"ruleId":"621","severity":1,"message":"696","line":10,"column":3,"nodeType":"623","messageId":"624","endLine":10,"endColumn":8},{"ruleId":"621","severity":1,"message":"770","line":11,"column":3,"nodeType":"623","messageId":"624","endLine":11,"endColumn":11},{"ruleId":"621","severity":1,"message":"698","line":12,"column":3,"nodeType":"623","messageId":"624","endLine":12,"endColumn":11},{"ruleId":"621","severity":1,"message":"697","line":16,"column":3,"nodeType":"623","messageId":"624","endLine":16,"endColumn":7},{"ruleId":"621","severity":1,"message":"656","line":22,"column":10,"nodeType":"623","messageId":"624","endLine":22,"endColumn":21},{"ruleId":"621","severity":1,"message":"771","line":24,"column":10,"nodeType":"623","messageId":"624","endLine":24,"endColumn":22},{"ruleId":"621","severity":1,"message":"772","line":25,"column":10,"nodeType":"623","messageId":"624","endLine":25,"endColumn":15},{"ruleId":"621","severity":1,"message":"705","line":25,"column":17,"nodeType":"623","messageId":"624","endLine":25,"endColumn":25},{"ruleId":"621","severity":1,"message":"706","line":26,"column":10,"nodeType":"623","messageId":"624","endLine":26,"endColumn":21},{"ruleId":"621","severity":1,"message":"773","line":26,"column":23,"nodeType":"623","messageId":"624","endLine":26,"endColumn":36},{"ruleId":"621","severity":1,"message":"729","line":26,"column":38,"nodeType":"623","messageId":"624","endLine":26,"endColumn":52},{"ruleId":"621","severity":1,"message":"774","line":27,"column":10,"nodeType":"623","messageId":"624","endLine":27,"endColumn":20},{"ruleId":"621","severity":1,"message":"631","line":30,"column":22,"nodeType":"623","messageId":"624","endLine":30,"endColumn":37},{"ruleId":"734","severity":1,"message":"775","line":96,"column":1,"nodeType":"736","messageId":"776","endLine":185,"endColumn":16},{"ruleId":"621","severity":1,"message":"777","line":14,"column":5,"nodeType":"623","messageId":"624","endLine":14,"endColumn":10},{"ruleId":"621","severity":1,"message":"778","line":18,"column":5,"nodeType":"623","messageId":"624","endLine":18,"endColumn":7},{"ruleId":"621","severity":1,"message":"630","line":24,"column":27,"nodeType":"623","messageId":"624","endLine":24,"endColumn":36},{"ruleId":"621","severity":1,"message":"683","line":25,"column":10,"nodeType":"623","messageId":"624","endLine":25,"endColumn":19},{"ruleId":"621","severity":1,"message":"684","line":26,"column":8,"nodeType":"623","messageId":"624","endLine":26,"endColumn":14},{"ruleId":"621","severity":1,"message":"693","line":27,"column":8,"nodeType":"623","messageId":"624","endLine":27,"endColumn":13},{"ruleId":"621","severity":1,"message":"632","line":60,"column":11,"nodeType":"623","messageId":"624","endLine":60,"endColumn":16},{"ruleId":"621","severity":1,"message":"679","line":62,"column":13,"nodeType":"623","messageId":"624","endLine":62,"endColumn":22},{"ruleId":"621","severity":1,"message":"631","line":62,"column":24,"nodeType":"623","messageId":"624","endLine":62,"endColumn":39},{"ruleId":"621","severity":1,"message":"779","line":64,"column":12,"nodeType":"623","messageId":"624","endLine":64,"endColumn":24},{"ruleId":"621","severity":1,"message":"780","line":64,"column":26,"nodeType":"623","messageId":"624","endLine":64,"endColumn":41},{"ruleId":"621","severity":1,"message":"630","line":22,"column":27,"nodeType":"623","messageId":"624","endLine":22,"endColumn":36},{"ruleId":"621","severity":1,"message":"683","line":23,"column":10,"nodeType":"623","messageId":"624","endLine":23,"endColumn":19},{"ruleId":"621","severity":1,"message":"684","line":24,"column":8,"nodeType":"623","messageId":"624","endLine":24,"endColumn":14},{"ruleId":"621","severity":1,"message":"679","line":60,"column":13,"nodeType":"623","messageId":"624","endLine":60,"endColumn":22},{"ruleId":"621","severity":1,"message":"631","line":60,"column":24,"nodeType":"623","messageId":"624","endLine":60,"endColumn":39},"no-native-reassign",["781"],"no-negated-in-lhs",["782"],"no-unused-vars","'SellerAllOrders' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'VStack' is defined but never used.","'setActiveCategoryProducts' is assigned a value but never used.","'useDisclosure' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'toggleColorMode' is assigned a value but never used.","'toast' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toast'. Either include it or remove the dependency array.","ArrayExpression",["783"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AddIcon' is defined but never used.","'Form' is defined but never used.","'Component' is defined but never used.","'state' is assigned a value but never used.","'Text' is defined but never used.","'RiVisaLine' is defined but never used.","'customer_id' is assigned a value but never used.",["784"],["785"],"'Center' is defined but never used.","'MinusIcon' is defined but never used.","'StarIcon' is defined but never used.","'ButtonGroup' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'AvatarBadge' is defined but never used.","'AvatarGroup' is defined but never used.","'SearchBar' is defined but never used.",["786"],"'useColorMode' is defined but never used.","'HStack' is defined but never used.","'CategorizedReviewPreview' is defined but never used.","'ReviewCountPreview' is defined but never used.","'id' is assigned a value but never used.","'setData' is assigned a value but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'AiFillExperiment' is defined but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"787","text":"788"},["781"],["782"],"'Redirect' is defined but never used.","'ErrorModel' is defined but never used.","'render' is defined but never used.","'colorMode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentOrder' and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentOrder(c => ...)' if you only need 'currentOrder' in the 'setCurrentOrder' call.",["789"],"'Divider' is defined but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.",["790"],"no-redeclare","'url' is already defined.","redeclared","'useHistory' is defined but never used.","'Heading' is defined but never used.","'his' is assigned a value but never used.","'service' is defined but never used.","'Axios' is defined but never used.","'Avatar' is defined but never used.","'Image' is defined but never used.","'Badge' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.",["791"],"'MdZoomIn' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ChakraProvider' is defined but never used.","'MoneyOff' is defined but never used.","'GiCartwheel' is defined but never used.","'FaFacebook' is defined but never used.","'FaInstagram' is defined but never used.","'FaYoutube' is defined but never used.","'FaTwitter' is defined but never used.","'FaLinkedin' is defined but never used.","'FormInput' is defined but never used.","'BottomFooter' is defined but never used.","'CardGiftcard' is defined but never used.","'CreditCardRounded' is defined but never used.","'MdSettings' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'useForm' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'FormSuccess' is defined but never used.","'AiFillThunderbolt' is defined but never used.","'GiAllForOne' is defined but never used.","'GiArtificialIntelligence' is defined but never used.","'GiCrystalBars' is defined but never used.","'GiDeliveryDrone' is defined but never used.","'GiShoppingCart' is defined but never used.","'GiRock' is defined but never used.","'GiFloatingCrystal' is defined but never used.","'PricingSection' is defined but never used.","'isDark' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'ReactRouterLink' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'ImUser' is defined but never used.","'ImPhone' is defined but never used.","'ImLocation' is defined but never used.","'list' is already defined.","'FaMagento' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'loginStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["792"],"'Cookies' is defined but never used.","'userAuthenticated' is assigned a value but never used.",["793"],["781"],["782"],"'Deliverycard' is defined but never used.","'Shipping_method' is assigned a value but never used.","'Ship_to' is assigned a value but never used.","'feedback' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'Progress' is defined but never used.","'FaDollarSign' is defined but never used.","'Money' is defined but never used.","'GiShoppingBag' is defined but never used.","'FiUserPlus' is defined but never used.","Block is redundant.","redundantBlock","'Tbody' is defined but never used.","'Td' is defined but never used.","'tableDetails' is assigned a value but never used.","'setTableDetails' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"794","fix":"795"},{"desc":"794","fix":"796"},{"desc":"794","fix":"797"},{"desc":"794","fix":"798"},[101,115],"isAuth",{"desc":"799","fix":"800"},{"desc":"794","fix":"801"},{"desc":"794","fix":"802"},{"desc":"803","fix":"804"},{"desc":"803","fix":"805"},"Update the dependencies array to be: [toast]",{"range":"806","text":"807"},{"range":"808","text":"807"},{"range":"809","text":"807"},{"range":"810","text":"807"},"Update the dependencies array to be: [currentOrder, id]",{"range":"811","text":"812"},{"range":"813","text":"807"},{"range":"814","text":"807"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"815","text":"816"},{"range":"817","text":"816"},[1440,1442],"[toast]",[1082,1084],[2418,2420],[1198,1200],[2267,2269],"[currentOrder, id]",[1121,1123],[1208,1210],[1354,1362],"[callback, errors, isSubmitting]",[2242,2250]]