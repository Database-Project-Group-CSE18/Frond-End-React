[{"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js":"1","/Users/pasanmadushan/Desktop/Front-end-react/src/App.js":"2","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js":"3","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Home.js":"4","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js":"5","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js":"6","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js":"7","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js":"8","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js":"9","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js":"10","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js":"11","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js":"12","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js":"13","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js":"14","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js":"15","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js":"16","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js":"17","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js":"18","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePasswordForm.js":"19","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePersonalDetForm.js":"20","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CardDetails.js":"21","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCards.js":"22","/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCard.js":"23","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddBankCard.js":"24"},{"size":319,"mtime":1612065915511,"results":"25","hashOfConfig":"26"},{"size":1243,"mtime":1612547904852,"results":"27","hashOfConfig":"26"},{"size":7922,"mtime":1612503070408,"results":"28","hashOfConfig":"26"},{"size":110,"mtime":1612065915511,"results":"29","hashOfConfig":"26"},{"size":2278,"mtime":1612065915511,"results":"30","hashOfConfig":"26"},{"size":1754,"mtime":1612065915510,"results":"31","hashOfConfig":"26"},{"size":909,"mtime":1612065915511,"results":"32","hashOfConfig":"26"},{"size":3304,"mtime":1612514018286,"results":"33","hashOfConfig":"26"},{"size":5842,"mtime":1612514371208,"results":"34","hashOfConfig":"26"},{"size":6148,"mtime":1612516945697,"results":"35","hashOfConfig":"26"},{"size":4344,"mtime":1612547057787,"results":"36","hashOfConfig":"26"},{"size":1760,"mtime":1612547739633,"results":"37","hashOfConfig":"26"},{"size":425,"mtime":1612503013916,"results":"38","hashOfConfig":"26"},{"size":2561,"mtime":1612503013912,"results":"39","hashOfConfig":"26"},{"size":8510,"mtime":1612608038622,"results":"40","hashOfConfig":"26"},{"size":5225,"mtime":1612503070407,"results":"41","hashOfConfig":"26"},{"size":599,"mtime":1612503070407,"results":"42","hashOfConfig":"26"},{"size":1916,"mtime":1612503070406,"results":"43","hashOfConfig":"26"},{"size":1762,"mtime":1612523561312,"results":"44","hashOfConfig":"26"},{"size":1807,"mtime":1612528310395,"results":"45","hashOfConfig":"26"},{"size":4694,"mtime":1612607400268,"results":"46","hashOfConfig":"26"},{"size":342,"mtime":1612549719766,"results":"47","hashOfConfig":"26"},{"size":4517,"mtime":1612549956446,"results":"48","hashOfConfig":"26"},{"size":2090,"mtime":1612607902475,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"13dxzxw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js",[],["108","109"],"/Users/pasanmadushan/Desktop/Front-end-react/src/App.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js",["110","111","112","113","114","115","116","117"],"import {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  IconButton,\n  Image,\n  Progress,\n  SimpleGrid,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport ImageLoader from \"react-image-file\";\nimport { AddIcon, MinusIcon, SearchIcon, StarIcon } from \"@chakra-ui/icons\";\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\n\nfunction SpecificProductPage() {\n  let { id } = useParams();\n  const { colorMode, toggleColorMode } = useColorMode();\n  \n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\n\n  const quantity_inc = () => {\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\n  };\n  const quantity_dec = () => {\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\n  };\n\n  const [data, setData] = useState({\n    item_ID: \"233d\",\n    item_name: \"Electric tooth brush\",\n    category: \"electronic\",\n    price: 200.0,\n    orders: 345,\n    description:\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n    status: \"Available\",\n    feedbacks: [\n      {\n        customer_name: \"jof hagi\",\n        customer_dp: \"jof hagi\",\n        comment: \"asdasds asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdfsd\", \"adasdasd asdasdasfasc sadasdas\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"gendi gahnadi\",\n        customer_dp: \"jof hagi\",\n        comment: \"hgfhf dghhdgf dfgshssdd\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n    ],\n    variants: [\n      {\n        varient_name: \"white 2 brushes\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n        color: \"green\",\n        details: \"\",\n        Quantity: 450,\n      },\n      {\n        varient_name: \"pink 2 brushes with bateries\",\n        image:\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\n        color: \"pink\",\n        details: \"\",\n        Quantity: 230,\n      },\n      {\n        varient_name: \"two heads only\",\n        image:\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\n        color: \"blue\",\n        details: \"\",\n        Quantity: 500,\n      },\n    ],\n  });\n\n  var imageStack = new Array(data.variants.length)\n    .fill(0)\n    .map((zero, index) => (\n      <Box\n        cursor=\"pointer\"\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\n        borderColor=\"gray.500\"\n        onClick={() => setCurrentOrder({ ...currentOrder, varient: index })}\n      >\n        <Image\n          src={data.variants[index].image}\n          w=\"100px\"\n          h=\"100px\"\n          alt=\"image\"\n        />\n      </Box>\n    ));\n\n  return (\n    <Box\n      pt=\"200px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <SimpleGrid columns={2} spacing={5} minChildWidth=\"400px\">\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          borderWidth=\"2px\"\n          borderRadius=\"lg\"\n          borderColor=\"gray.300\"\n          overflow=\"hidden\"\n          p=\"5px\"\n        >\n          <Image\n            src={data.variants[currentOrder.varient].image}\n            w=\"auto\"\n            h=\"auto\"\n            alt=\"image\"\n            fit\n          />\n        </Box>\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          borderWidth=\"2px\"\n          borderRadius=\"lg\"\n          borderColor=\"gray.300\"\n          overflow=\"hidden\"\n          p={{ base: \"5px\", sm: \"20px\" }}\n        >\n          <Heading as=\"h2\" size=\"2xl\">\n            {data.item_name}\n          </Heading>\n\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\n            {data.category}\n          </Text>\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n            {Array(5)\n              .fill(\"\")\n              .map((_, i) => (\n                <StarIcon\n                  key={i}\n                  color={i < data.feedbacks[0].rating ? \"cyan.500\" : \"cyan.300\"}\n                />\n              ))}\n            <Box as=\"span\" ml=\"2\"  fontSize=\"sm\">\n              {data.feedbacks.length} reviews &bull; {data.orders} orders\n            </Box>\n          </Box>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Varient\n          </Heading>\n          <HStack mt=\"20px\">{imageStack}</HStack>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Quantity\n          </Heading>\n          <HStack mt=\"10px\">\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<AddIcon />}\n              onClick={quantity_inc}\n            />\n            <Text>{currentOrder.quantity}</Text>\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<MinusIcon />}\n              onClick={quantity_dec}\n            />\n          </HStack>\n\n          <HStack mt=\"20px\">\n            <Button colorScheme=\"cyan\" color=\"white\" size=\"lg\">\n              Buy now\n            </Button>\n            <Button colorScheme=\"orange\" size=\"lg\" variant=\"outline\">\n              Add to cart\n            </Button>\n          </HStack>\n\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Description\n          </Heading>\n          <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\n            {data.description}\n          </Text>\n        </Box>\n      </SimpleGrid>\n      <Box\n        width=\"auto\"\n        h=\"auto\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"black\"\n        overflow=\"hidden\"\n        p={{ base: \"5px\", sm: \"20px\" }}\n        mt=\"20px\"\n        mb=\"100px\"\n\n      >\n        <Heading as=\"h2\" size=\"2xl\" mb='20px'>\n          Reviews\n        </Heading>\n        \n        <ReviewCountPreview feedbacks={data.feedbacks}/>\n          <Tabs>\n          <TabList>\n          <Tab><StarIcon color=\"cyan.500\"/> All</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 5</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 4</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 3</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 2</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 1</Tab>\n          </TabList>\n\n          <TabPanels>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ='all' />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={5} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={4} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={3} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={2} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={1} />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Box>\n  );\n}\n\nexport default SpecificProductPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Home.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js",["118","119","120","121","122","123","124","125"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n  VStack,\n  Progress,\n  Stack,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction ReviewCountPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  const total_reviews = props.feedbacks.length;\n\n  var s5 = 0;\n  var s4 = 0;\n  var s3 = 0;\n  var s2 = 0;\n  var s1 = 0;\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].rating === 5) {\n      s5 = s5 + 1;\n    } else if (props.feedbacks[i].rating === 4) {\n      s4 = s4 + 1;\n    } else if (props.feedbacks[i].rating === 3) {\n      s3 = s3 + 1;\n    } else if (props.feedbacks[i].rating === 2) {\n      s2 = s2 + 1;\n    } else if (props.feedbacks[i].rating === 1) {\n      s1 = s1 + 1;\n    }\n  }\n\n  return (\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          5 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s5} reviews\n        </Text>\n        <Progress value={(s5 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          4 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s4} reviews\n        </Text>\n        <Progress value={(s4 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          3 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s3} reviews\n        </Text>\n        <Progress value={(s3 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          2 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s2} reviews\n        </Text>\n        <Progress value={(s2 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          1 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s1} reviews\n        </Text>\n        <Progress value={(s1 / total_reviews) * 100} />\n      </Box>\n    </Stack>\n  );\n}\n\nexport default ReviewCountPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js",["126"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction CategorizedReviewPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  var stars = (rating) => {\n    return Array(5)\n      .fill(\"\")\n      .map((_, j) => (\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\n      ));\n  };\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].rating === props.rating || props.rating === 'all') {\n      reviews.push(\n        <Box mb='10px'>\n          <HStack>\n            <Avatar\n              name={props.feedbacks[i].customer_name}\n              src={props.feedbacks[i].customer_dp}\n            />\n            <Box\n              w=\"100%\"\n              borderWidth=\"2px\"\n              borderRadius=\"lg\"\n              p=\"10px\"\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\n            >\n              <Heading as=\"h5\" size=\"sm\">\n                {props.feedbacks[i].customer_name}\n              </Heading>\n              <Text>{props.feedbacks[i].comment}</Text>\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n                {stars(props.feedbacks[i].rating)}\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\n                  {props.feedbacks[i].rating}/5\n                </Box>\n              </Box>\n            </Box>\n          </HStack>\n          <Replys replys={props.feedbacks[i].reply} />\n        </Box>\n      );\n    }\n  }\n\n  if (reviews.length === 0) {\n    reviews.push(<Text>No reviews</Text>);\n  }\n\n  return <>{reviews}</>;\n}\n\nexport default CategorizedReviewPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js",["127","128","129"],"import {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nfunction Replys(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const dp = \"\";\n\n  var replys = [];\n  for (var i = 0; i < props.replys.length; i++) {\n    replys.push(\n      <HStack spacing=\"10px\" w=\"100%\">\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          p=\"10px\"\n          mt=\"20px\"\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\n        >\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\n          <Text>{props.replys[i]}</Text>\n        </Box>\n      </HStack>\n    );\n  }\n\n  return (\n    <Box ml=\"100px\" mt='10px'>\n      <VStack w=\"100%\">{replys}</VStack>\n    </Box>\n  );\n}\n\nexport default Replys;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js",["130","131","132","133","134","135"],"import React from \"react\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  Button,\n  useColorMode,\n  IconButton,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ReactRouterLink,\n  Img,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { FiShoppingCart } from \"react-icons/fi\";\n\nfunction Navbar(props) {\n  const MenuItems = ({ children }) => (\n    <Button\n      mt={{ base: 4, md: 0 }}\n      mr={6}\n      display=\"block\"\n      colorScheme=\"teal.500\"\n      variant=\"link\"\n      color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.100\"}\n    >\n      {children}\n    </Button>\n  );\n\n  const [show, setShow] = React.useState(false);\n  const handleToggle = () => setShow(!show);\n\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      pt=\"1.0rem\"\n      bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n      color=\"white\"\n      position=\"fixed\"\n      top=\"0\"\n      width=\"100%\"\n      zIndex=\"10000\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <Img ml=\"1.5rem\" src=\"../logo.png\" alt=\"logo\" h=\"80px\" w=\"80px\" />\n      </Flex>\n\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <HamburgerIcon />\n      </Box>\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ base: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n        pl=\"20px\"\n      >\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\n            Home\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\n            Contact us\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\n            About us\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactRouterLink} to=\"/Dashboard\">\n            Help\n          </Link>\n        </MenuItems>\n      </Box>\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <IconButton\n          aria-label=\"Call Segun\"\n          size=\"lg\"\n          icon={<Icon as={FiShoppingCart} w={8} h={8}  />}\n          mr={{ base: \"5px\", md: \"20px\" }}\n          variant=\"ghost\"\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n        />\n        <IconButton\n          aria-label=\"Call Segun\"\n          size=\"md\"\n          icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n          mr={{ base: \"5px\", md: \"20px\" }}\n          variant=\"ghost\"\n          color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          onClick={toggleColorMode}\n        />\n        <a href=\"/\">\n          <Button\n            type=\"button\"\n            border=\"1px\"\n            variant=\"ghost\"\n            mr=\"1.5rem\"\n            color={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n          >\n            Log out\n          </Button>\n        </a>\n      </Box>\n\n      <Box\n        w=\"100%\"\n        h=\"5px\"\n        b=\"0px\"\n        mt=\"10px\"\n        bg={colorMode === \"light\" ? \"cyan.800\" : \"cyan.100\"}\n      />\n    </Flex>\n  );\n}\n\nexport default Navbar;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js",["136","137"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,  \n    Flex,\n    Spacer ,\n    Button,\n    useDisclosure,\n    Modal,\n    ModalBody,\n    ModalContent,\n    ModalOverlay,\n    ModalCloseButton,\n    ModalHeader,\n    useToast,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\nimport ShipAddressses from \"../components/ShipAddressses\";\nimport AddAddress from \"../components/AddAddress\"\n\nconst CustomerAddress = () => {\n\n    const [address,setAddress] = useState([\n        {\n            id:1,\n            name:'pasan madushan',\n            tp:'07704543436',\n            street:'1234',\n            city:'abc',\n            state:'def',\n            zip:'12121'   \n                       \n        },\n        {\n            id:2,\n            name:'vimukthi madushan',\n            tp:'077238404543436',\n            street:'sdfsdf',\n            city:'sdflndsfldsnfk',\n            state:'slfnsdflnsdf',\n            zip:'1203948234121'      \n                   \n        },\n        {\n            id:3,\n            name:'chalindu malshika',\n            tp:'077043543436',\n            street:'0324284',\n            city:'rathnapura',\n            state:'hdlfdfs',\n            zip:'139202121'     \n            \n             \n        },\n        {\n            id:4,\n            name:'chandima',\n            tp:'042342492',\n            street:'1234',\n            city:'jsdofjsdof',\n            state:'sdofjdsf',\n            zip:'12121'    \n                      \n        },\n    ])\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const toast = useToast()\n\n    //delete an addresss\n    const deleteAddress  = (id)=>{\n        setAddress(address.filter(\n            (address)=>address.id!==id\n        ))\n        toast({\n            position: \"bottom-right\",    \n            description: \"Shipping address deleted successfully\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          })\n    }\n\n    //add new address\n    const addAddress = (Address)=>{\n        const id = Math.floor(Math.random()*100)+1\n        const newAddress = {id,...Address}\n        setAddress([...address,newAddress]);\n\n    }\n\n    //update address\n    const updateAddress  = async(data)=>{\n        console.log('update address data ----------------')\n        console.log(data);\n        // setTasks(tasks.map(\n        //     (task)=>task.id===id?{...task,reminder:data.reminder}:task\n        //   ))\n        // await setAddress(address.map(\n        //     (address1)=>address1.id==data.id?{...address1,name:data.name}:address1\n        // ))\n        // // console.log(address[0])\n        \n   \n        setAddress(address.map(\n            (address1)=>(address1.id==data.id)?{...address1,data}:address1\n        ))\n        \n\n\n    }\n\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    \n\n    return (\n        <Box\n        \n        pt=\"100px\"\n        // pl={{ base: \"10px\", sm: \"100px\" }}\n        // pr={{ base: \"10px\", sm: \"100px\" }} \n        >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(1, 1fr)\"\n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"customeraddress\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"                   \n                        overflow=\"hidden\"                    \n                        pb=\"5px\"                      \n                        >\n                        \n                      </Box>\n\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\n\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\n                                <Flex> \n                                    <Box  p=\"3\">\n                                    <Heading as='h3' size='md' color='white'> My Shipping Address </Heading> \n                                    </Box>\n                                    <Spacer />\n                                    <Box p=\"1\">\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\n                                            Add Shipping Address\n                                        </Button>\n                    \n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                                            <ModalOverlay />\n                                                <ModalContent>\n                                                    <ModalHeader>Add New Shipping Address</ModalHeader>\n                                                    <ModalCloseButton />\n                                                    <ModalBody pb='5'>\n                                                    <AddAddress addAddress={addAddress} trigger={onClose}/>\n                                                     </ModalBody>\n                                                    \n                                                </ModalContent>\n                                            </Modal>\n\n                                    </Box>\n                                 \n                                 </Flex>\n                            </GridItem>\n\n                       \n                                <ShipAddressses addresses={address} deleteAddress={deleteAddress}  updateAddress={updateAddress}  />\n  \n                        </Grid>\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CustomerAddress\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js",["138","139","140","141","142"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Avatar,\n    Divider,\n    Heading,\n    SimpleGrid,\n    Text,\n    useColorMode\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\n\n\nconst CustomerDashboard = () => {\n\n    const [userdata, setUserdata] = useState(\n        {\n            user_id:'12345',\n            user_name:'Pasan Madushan',\n            image:'https://images.unsplash.com/photo-1553267751-1c148a7280a1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\n            orders:{\n                all:12,\n                await_pay:15,\n                await_ship:35,\n                await_del:45,\n                delivered:56\n            }\n        }\n    )\n    \n    const { colorMode, toggleColorMode } = useColorMode();\n\n\n    return (\n        <Box\n        \n        pt=\"100px\"\n        // pl={{ base: \"10px\", sm: \"100px\" }}\n        // pr={{ base: \"10px\", sm: \"100px\" }} \n        >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(2, 1fr)\"\n                \n                \n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"dashboard\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} m={5} mt={8}>\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"\n                        \n                        overflow=\"hidden\"\n                        p=\"10px\"\n                        pb=\"5px\"\n                        bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\n                        borderRadius='10px'\n                        >\n                        \n                        <Grid \n                            templateRows=\"repeat(2, 1fr)\"\n                            gap={4}\n                            \n                        >\n                            <GridItem p=\"10px\"  >\n                                  <SimpleGrid columns={2} spacing={5}>\n                                        <Box >\n                                            <Avatar\n                                                size=\"xl\"\n                                                name={userdata.user_name}\n                                                src={userdata.image}\n                                            />\n                                        </Box>\n                                        <Box >\n                                        <Heading size='lg'> Hello, {userdata.user_name} </Heading>\n                                        </Box>\n                                    </SimpleGrid>\n    \n                            </GridItem >\n                            \n                            <GridItem >\n                                       <Box \n                                        bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\n                                        borderRadius='md'\n                                       \n                                        color='white'\n                                       >\n                                           <SimpleGrid columns={5} spacing={5} pt='10px' pb='10px'>\n\n                                                <Box textAlign='center' >\n                                                    \n                                                    <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.all} </Heading>\n                                                    \n                                                    <Text  textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>All orders</Text>\n                                                </Box> \n                                                <Box textAlign='center'>\n                                                    <Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h4' size='lg'> {userdata.orders.await_pay} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Payment</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                    <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.await_ship} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Shipment</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                   <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.await_del} </Heading>\n                                                    \n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Delivery</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                    <Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h4' size='lg'> {userdata.orders.delivered} </Heading>\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>  Delivered</Text>\n                                                </Box>\n                                            </SimpleGrid> \n\n                                       </Box>\n                            </GridItem>\n                            \n                        </Grid>\n\n                    </Box>\n\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CustomerDashboard\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js",["143","144"],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js",["145","146","147","148","149","150"],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js",["169","170"],"import {\n  Box,\n  Button,\n  Center,\n  Grid,\n  GridItem,\n  Heading,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nimport SearchBar from \"../components/SearchBar\";\nimport ProductCard from \"../components/ProductCard\";\n\nfunction CategoryPage() {\n  const [categories, setCategories] = useState([\n    \"All categories\",\n    \"Phones\",\n    \"Smart Watches\",\n    \"Tabs\",\n    \"Headphones\",\n    \"Chargers\",\n  ]);\n  const [activeCategory, setActiveCategory] = useState(categories[0]);\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([\n    {\n      item_ID: \"233d\",\n      item_name: \"Electric tooth brush\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:100,\n      rating:3,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:100,\n      rating:3,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"../images/iphone.jpg\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:250,\n      rating:4,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Out of stock\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:150,\n      rating:2,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:50,\n      rating:5,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n  ]);\n\n  var searchBarText = `Search in ${activeCategory}`;\n\n  const HandleClick = (category) => {\n    setActiveCategory(category);\n\n  };\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Center mb='10px'>\n        <SearchBar text={searchBarText} />\n      </Center>\n      <Grid\n        templateRows=\"repeat(1, 1fr)\"\n        templateColumns=\"repeat(5, 1fr)\"\n        gap={0}\n        pb='200px'\n      >\n        <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\n          <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\">\n            Categories\n          </Heading>\n          <VStack>\n            {Array(categories.length)\n              .fill(\"\")\n              .map((_, i) =>\n                categories[i] === activeCategory ? (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"gray\"\n                    isActive\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                ) : (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"gray\"\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                )\n              )}\n          </VStack>\n        </GridItem>\n        <GridItem\n          rowSpan={1}\n          colSpan={4}\n          borderWidth=\"1px\"\n          borderColor=\"gray.300\"\n          p=\"20px\"\n        >\n          <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\n            {activeCategory}\n          </Heading>\n          <Grid h=\"auto\" templateColumns=\"repeat(4, 1fr)\" gap={2}>\n            {Array(activeCategoryProducts.length)\n              .fill(\"\")\n              .map((_, i) => (\n                <ProductCard\n                  title={activeCategoryProducts[i].item_name}\n                  imageUrl={activeCategoryProducts[i].image}\n                  itemName= {activeCategoryProducts[i].item_name}\n                  category= {activeCategoryProducts[i].category}\n                  price= {activeCategoryProducts[i].price}\n                  orders= {activeCategoryProducts[i].orders}\n                  status={activeCategoryProducts[i].status}\n                  rating={activeCategoryProducts[i].rating}\n                  reviews={activeCategoryProducts[i].reviews}\n                  \n                />\n              ))}\n          </Grid>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default CategoryPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js",["171","172","173","174","175","176","177","178"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nfunction ProductCard(props) {\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Img src={props.imageUrl} alt={props.imageAlt} w='230px' h='250px' />\n\n      <Box p=\"6\">\n      <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            colorScheme='yellow'\n            variant=\"outline\" \n            fontSize='9px'\n          >\n            {props.category}\n          </Badge>\n        <Box fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" fontSize='xl' isTruncated>\n          {props.title}\n        </Box>\n       \n        <Box>\n          <Text color=\"gray.600\" fontSize=\"3xl\">\n            Rs. {props.price}\n          </Text>\n        </Box>\n\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\n          <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\n          >\n            {props.status}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {props.orders} Orders\n          </Box>\n        </Box>\n\n       \n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {props.reviews} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ProductCard;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePasswordForm.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ChangePersonalDetForm.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CardDetails.js",["179"],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCards.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/BankCard.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195"],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddBankCard.js",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":4,"column":3,"nodeType":"202","messageId":"203","endLine":4,"endColumn":9},{"ruleId":"200","severity":1,"message":"204","line":9,"column":3,"nodeType":"202","messageId":"203","endLine":9,"endColumn":11},{"ruleId":"200","severity":1,"message":"205","line":22,"column":8,"nodeType":"202","messageId":"203","endLine":22,"endColumn":19},{"ruleId":"200","severity":1,"message":"206","line":23,"column":30,"nodeType":"202","messageId":"203","endLine":23,"endColumn":40},{"ruleId":"200","severity":1,"message":"207","line":28,"column":9,"nodeType":"202","messageId":"203","endLine":28,"endColumn":11},{"ruleId":"200","severity":1,"message":"208","line":29,"column":11,"nodeType":"202","messageId":"203","endLine":29,"endColumn":20},{"ruleId":"200","severity":1,"message":"209","line":29,"column":22,"nodeType":"202","messageId":"203","endLine":29,"endColumn":37},{"ruleId":"200","severity":1,"message":"210","line":40,"column":16,"nodeType":"202","messageId":"203","endLine":40,"endColumn":23},{"ruleId":"200","severity":1,"message":"211","line":3,"column":3,"nodeType":"202","messageId":"203","endLine":3,"endColumn":9},{"ruleId":"200","severity":1,"message":"212","line":5,"column":3,"nodeType":"202","messageId":"203","endLine":5,"endColumn":9},{"ruleId":"200","severity":1,"message":"213","line":8,"column":3,"nodeType":"202","messageId":"203","endLine":8,"endColumn":10},{"ruleId":"200","severity":1,"message":"214","line":9,"column":3,"nodeType":"202","messageId":"203","endLine":9,"endColumn":9},{"ruleId":"200","severity":1,"message":"215","line":14,"column":8,"nodeType":"202","messageId":"203","endLine":14,"endColumn":14},{"ruleId":"200","severity":1,"message":"208","line":17,"column":11,"nodeType":"202","messageId":"203","endLine":17,"endColumn":20},{"ruleId":"200","severity":1,"message":"209","line":17,"column":22,"nodeType":"202","messageId":"203","endLine":17,"endColumn":37},{"ruleId":"200","severity":1,"message":"216","line":18,"column":7,"nodeType":"202","messageId":"203","endLine":18,"endColumn":14},{"ruleId":"200","severity":1,"message":"209","line":14,"column":22,"nodeType":"202","messageId":"203","endLine":14,"endColumn":37},{"ruleId":"200","severity":1,"message":"217","line":6,"column":3,"nodeType":"202","messageId":"203","endLine":6,"endColumn":14},{"ruleId":"200","severity":1,"message":"218","line":11,"column":17,"nodeType":"202","messageId":"203","endLine":11,"endColumn":25},{"ruleId":"200","severity":1,"message":"209","line":14,"column":22,"nodeType":"202","messageId":"203","endLine":14,"endColumn":37},{"ruleId":"200","severity":1,"message":"213","line":5,"column":3,"nodeType":"202","messageId":"203","endLine":5,"endColumn":10},{"ruleId":"200","severity":1,"message":"219","line":9,"column":3,"nodeType":"202","messageId":"203","endLine":9,"endColumn":16},{"ruleId":"200","severity":1,"message":"220","line":10,"column":3,"nodeType":"202","messageId":"203","endLine":10,"endColumn":8},{"ruleId":"200","severity":1,"message":"221","line":11,"column":3,"nodeType":"202","messageId":"203","endLine":11,"endColumn":15},{"ruleId":"200","severity":1,"message":"222","line":12,"column":3,"nodeType":"202","messageId":"203","endLine":12,"endColumn":15},{"ruleId":"200","severity":1,"message":"223","line":18,"column":16,"nodeType":"202","messageId":"203","endLine":18,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":110,"column":37,"nodeType":"226","messageId":"227","endLine":110,"endColumn":39},{"ruleId":"200","severity":1,"message":"209","line":117,"column":24,"nodeType":"202","messageId":"203","endLine":117,"endColumn":39},{"ruleId":"200","severity":1,"message":"228","line":6,"column":5,"nodeType":"202","messageId":"203","endLine":6,"endColumn":12},{"ruleId":"200","severity":1,"message":"229","line":14,"column":10,"nodeType":"202","messageId":"203","endLine":14,"endColumn":19},{"ruleId":"200","severity":1,"message":"230","line":15,"column":8,"nodeType":"202","messageId":"203","endLine":15,"endColumn":14},{"ruleId":"200","severity":1,"message":"231","line":21,"column":22,"nodeType":"202","messageId":"203","endLine":21,"endColumn":33},{"ruleId":"200","severity":1,"message":"209","line":36,"column":24,"nodeType":"202","messageId":"203","endLine":36,"endColumn":39},{"ruleId":"200","severity":1,"message":"209","line":30,"column":24,"nodeType":"202","messageId":"203","endLine":30,"endColumn":39},{"ruleId":"200","severity":1,"message":"232","line":34,"column":24,"nodeType":"202","messageId":"203","endLine":34,"endColumn":38},{"ruleId":"200","severity":1,"message":"233","line":3,"column":5,"nodeType":"202","messageId":"203","endLine":3,"endColumn":9},{"ruleId":"200","severity":1,"message":"234","line":4,"column":5,"nodeType":"202","messageId":"203","endLine":4,"endColumn":13},{"ruleId":"200","severity":1,"message":"213","line":5,"column":5,"nodeType":"202","messageId":"203","endLine":5,"endColumn":12},{"ruleId":"200","severity":1,"message":"235","line":6,"column":5,"nodeType":"202","messageId":"203","endLine":6,"endColumn":9},{"ruleId":"200","severity":1,"message":"228","line":7,"column":5,"nodeType":"202","messageId":"203","endLine":7,"endColumn":12},{"ruleId":"200","severity":1,"message":"209","line":17,"column":24,"nodeType":"202","messageId":"203","endLine":17,"endColumn":39},{"ruleId":"200","severity":1,"message":"220","line":6,"column":5,"nodeType":"202","messageId":"203","endLine":6,"endColumn":10},{"ruleId":"200","severity":1,"message":"221","line":7,"column":5,"nodeType":"202","messageId":"203","endLine":7,"endColumn":17},{"ruleId":"200","severity":1,"message":"222","line":8,"column":5,"nodeType":"202","messageId":"203","endLine":8,"endColumn":17},{"ruleId":"200","severity":1,"message":"236","line":9,"column":5,"nodeType":"202","messageId":"203","endLine":9,"endColumn":16},{"ruleId":"200","severity":1,"message":"237","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":10,"endColumn":16},{"ruleId":"200","severity":1,"message":"238","line":11,"column":5,"nodeType":"202","messageId":"203","endLine":11,"endColumn":14},{"ruleId":"200","severity":1,"message":"239","line":12,"column":5,"nodeType":"202","messageId":"203","endLine":12,"endColumn":21},{"ruleId":"200","severity":1,"message":"240","line":24,"column":5,"nodeType":"202","messageId":"203","endLine":24,"endColumn":16},{"ruleId":"200","severity":1,"message":"241","line":25,"column":5,"nodeType":"202","messageId":"203","endLine":25,"endColumn":14},{"ruleId":"200","severity":1,"message":"242","line":26,"column":5,"nodeType":"202","messageId":"203","endLine":26,"endColumn":10},{"ruleId":"200","severity":1,"message":"243","line":34,"column":13,"nodeType":"202","messageId":"203","endLine":34,"endColumn":19},{"ruleId":"200","severity":1,"message":"244","line":34,"column":21,"nodeType":"202","messageId":"203","endLine":34,"endColumn":27},{"ruleId":"200","severity":1,"message":"245","line":34,"column":29,"nodeType":"202","messageId":"203","endLine":34,"endColumn":36},{"ruleId":"200","severity":1,"message":"209","line":36,"column":24,"nodeType":"202","messageId":"203","endLine":36,"endColumn":39},{"ruleId":"200","severity":1,"message":"246","line":48,"column":11,"nodeType":"202","messageId":"203","endLine":48,"endColumn":23},{"ruleId":"200","severity":1,"message":"247","line":57,"column":11,"nodeType":"202","messageId":"203","endLine":57,"endColumn":23},{"ruleId":"200","severity":1,"message":"248","line":59,"column":13,"nodeType":"202","messageId":"203","endLine":59,"endColumn":17},{"ruleId":"249","severity":1,"message":"250","line":155,"column":21,"nodeType":"251","messageId":"252","endLine":160,"endColumn":39},{"ruleId":"200","severity":1,"message":"253","line":16,"column":22,"nodeType":"202","messageId":"203","endLine":16,"endColumn":35},{"ruleId":"200","severity":1,"message":"254","line":25,"column":34,"nodeType":"202","messageId":"203","endLine":25,"endColumn":59},{"ruleId":"200","severity":1,"message":"255","line":5,"column":3,"nodeType":"202","messageId":"203","endLine":5,"endColumn":15},{"ruleId":"200","severity":1,"message":"212","line":6,"column":3,"nodeType":"202","messageId":"203","endLine":6,"endColumn":9},{"ruleId":"200","severity":1,"message":"217","line":7,"column":3,"nodeType":"202","messageId":"203","endLine":7,"endColumn":14},{"ruleId":"200","severity":1,"message":"211","line":8,"column":3,"nodeType":"202","messageId":"203","endLine":8,"endColumn":9},{"ruleId":"200","severity":1,"message":"214","line":9,"column":3,"nodeType":"202","messageId":"203","endLine":9,"endColumn":9},{"ruleId":"200","severity":1,"message":"213","line":10,"column":3,"nodeType":"202","messageId":"203","endLine":10,"endColumn":10},{"ruleId":"200","severity":1,"message":"256","line":11,"column":3,"nodeType":"202","messageId":"203","endLine":11,"endColumn":8},{"ruleId":"200","severity":1,"message":"218","line":15,"column":17,"nodeType":"202","messageId":"203","endLine":15,"endColumn":25},{"ruleId":"200","severity":1,"message":"209","line":82,"column":24,"nodeType":"202","messageId":"203","endLine":82,"endColumn":39},{"ruleId":"200","severity":1,"message":"220","line":6,"column":5,"nodeType":"202","messageId":"203","endLine":6,"endColumn":10},{"ruleId":"200","severity":1,"message":"221","line":7,"column":5,"nodeType":"202","messageId":"203","endLine":7,"endColumn":17},{"ruleId":"200","severity":1,"message":"222","line":8,"column":5,"nodeType":"202","messageId":"203","endLine":8,"endColumn":17},{"ruleId":"200","severity":1,"message":"236","line":9,"column":5,"nodeType":"202","messageId":"203","endLine":9,"endColumn":16},{"ruleId":"200","severity":1,"message":"237","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":10,"endColumn":16},{"ruleId":"200","severity":1,"message":"238","line":11,"column":5,"nodeType":"202","messageId":"203","endLine":11,"endColumn":14},{"ruleId":"200","severity":1,"message":"239","line":12,"column":5,"nodeType":"202","messageId":"203","endLine":12,"endColumn":21},{"ruleId":"200","severity":1,"message":"240","line":24,"column":5,"nodeType":"202","messageId":"203","endLine":24,"endColumn":16},{"ruleId":"200","severity":1,"message":"241","line":25,"column":5,"nodeType":"202","messageId":"203","endLine":25,"endColumn":14},{"ruleId":"200","severity":1,"message":"242","line":26,"column":5,"nodeType":"202","messageId":"203","endLine":26,"endColumn":10},{"ruleId":"200","severity":1,"message":"243","line":34,"column":13,"nodeType":"202","messageId":"203","endLine":34,"endColumn":19},{"ruleId":"200","severity":1,"message":"244","line":34,"column":21,"nodeType":"202","messageId":"203","endLine":34,"endColumn":27},{"ruleId":"200","severity":1,"message":"245","line":34,"column":29,"nodeType":"202","messageId":"203","endLine":34,"endColumn":36},{"ruleId":"200","severity":1,"message":"209","line":36,"column":24,"nodeType":"202","messageId":"203","endLine":36,"endColumn":39},{"ruleId":"200","severity":1,"message":"247","line":46,"column":11,"nodeType":"202","messageId":"203","endLine":46,"endColumn":23},{"ruleId":"200","severity":1,"message":"248","line":48,"column":13,"nodeType":"202","messageId":"203","endLine":48,"endColumn":17},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'Center' is defined but never used.","Identifier","unusedVar","'Progress' is defined but never used.","'ImageLoader' is defined but never used.","'SearchIcon' is defined but never used.","'id' is assigned a value but never used.","'colorMode' is assigned a value but never used.","'toggleColorMode' is assigned a value but never used.","'setData' is assigned a value but never used.","'HStack' is defined but never used.","'Avatar' is defined but never used.","'Heading' is defined but never used.","'VStack' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'AvatarBadge' is defined but never used.","'useState' is defined but never used.","'useDisclosure' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Divider' is defined but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.","'setUserdata' is assigned a value but never used.","'setPersonaldet' is assigned a value but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'Text' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'name' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'setCategories' is assigned a value but never used.","'setActiveCategoryProducts' is assigned a value but never used.","'useColorMode' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]