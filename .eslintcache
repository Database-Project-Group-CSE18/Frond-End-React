[{"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js":"1","/Users/pasanmadushan/Desktop/Front-end-react/src/App.js":"2","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js":"3","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Home.js":"4","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js":"5","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js":"6","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js":"7","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js":"8","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js":"9","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js":"10","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js":"11","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js":"12","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js":"13","/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js":"14","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js":"15","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js":"16","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js":"17","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js":"18"},{"size":319,"mtime":1612065915511,"results":"19","hashOfConfig":"20"},{"size":1131,"mtime":1612503285610,"results":"21","hashOfConfig":"20"},{"size":7922,"mtime":1612503070408,"results":"22","hashOfConfig":"20"},{"size":110,"mtime":1612065915511,"results":"23","hashOfConfig":"20"},{"size":2278,"mtime":1612065915511,"results":"24","hashOfConfig":"20"},{"size":1754,"mtime":1612065915510,"results":"25","hashOfConfig":"20"},{"size":909,"mtime":1612065915511,"results":"26","hashOfConfig":"20"},{"size":3304,"mtime":1612503070405,"results":"27","hashOfConfig":"20"},{"size":5731,"mtime":1612513646529,"results":"28","hashOfConfig":"20"},{"size":5447,"mtime":1612503013919,"results":"29","hashOfConfig":"20"},{"size":3005,"mtime":1612503013917,"results":"30","hashOfConfig":"20"},{"size":1372,"mtime":1612512336994,"results":"31","hashOfConfig":"20"},{"size":425,"mtime":1612503013916,"results":"32","hashOfConfig":"20"},{"size":2561,"mtime":1612503013912,"results":"33","hashOfConfig":"20"},{"size":8082,"mtime":1612512763905,"results":"34","hashOfConfig":"20"},{"size":5225,"mtime":1612503070407,"results":"35","hashOfConfig":"20"},{"size":599,"mtime":1612503070407,"results":"36","hashOfConfig":"20"},{"size":1916,"mtime":1612503070406,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"13dxzxw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"/Users/pasanmadushan/Desktop/Front-end-react/src/index.js",[],["85","86"],"/Users/pasanmadushan/Desktop/Front-end-react/src/App.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/SpecficProductPage.js",["87","88","89","90","91","92","93","94"],"import {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  IconButton,\n  Image,\n  Progress,\n  SimpleGrid,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport ImageLoader from \"react-image-file\";\nimport { AddIcon, MinusIcon, SearchIcon, StarIcon } from \"@chakra-ui/icons\";\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\n\nfunction SpecificProductPage() {\n  let { id } = useParams();\n  const { colorMode, toggleColorMode } = useColorMode();\n  \n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\n\n  const quantity_inc = () => {\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\n  };\n  const quantity_dec = () => {\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\n  };\n\n  const [data, setData] = useState({\n    item_ID: \"233d\",\n    item_name: \"Electric tooth brush\",\n    category: \"electronic\",\n    price: 200.0,\n    orders: 345,\n    description:\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n    status: \"Available\",\n    feedbacks: [\n      {\n        customer_name: \"jof hagi\",\n        customer_dp: \"jof hagi\",\n        comment: \"asdasds asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdfsd\", \"adasdasd asdasdasfasc sadasdas\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 5,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"gendi gahnadi\",\n        customer_dp: \"jof hagi\",\n        comment: \"hgfhf dghhdgf dfgshssdd\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n      {\n        customer_name: \"den kali\",\n        customer_dp: \"jof hagi\",\n        comment: \"axasxas asdasd sad\",\n        rating: 2,\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\n      },\n    ],\n    variants: [\n      {\n        varient_name: \"white 2 brushes\",\n        image:\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n        color: \"green\",\n        details: \"\",\n        Quantity: 450,\n      },\n      {\n        varient_name: \"pink 2 brushes with bateries\",\n        image:\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\n        color: \"pink\",\n        details: \"\",\n        Quantity: 230,\n      },\n      {\n        varient_name: \"two heads only\",\n        image:\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\n        color: \"blue\",\n        details: \"\",\n        Quantity: 500,\n      },\n    ],\n  });\n\n  var imageStack = new Array(data.variants.length)\n    .fill(0)\n    .map((zero, index) => (\n      <Box\n        cursor=\"pointer\"\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\n        borderColor=\"gray.500\"\n        onClick={() => setCurrentOrder({ ...currentOrder, varient: index })}\n      >\n        <Image\n          src={data.variants[index].image}\n          w=\"100px\"\n          h=\"100px\"\n          alt=\"image\"\n        />\n      </Box>\n    ));\n\n  return (\n    <Box\n      pt=\"200px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <SimpleGrid columns={2} spacing={5} minChildWidth=\"400px\">\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          borderWidth=\"2px\"\n          borderRadius=\"lg\"\n          borderColor=\"gray.300\"\n          overflow=\"hidden\"\n          p=\"5px\"\n        >\n          <Image\n            src={data.variants[currentOrder.varient].image}\n            w=\"auto\"\n            h=\"auto\"\n            alt=\"image\"\n            fit\n          />\n        </Box>\n        <Box\n          width=\"auto\"\n          h=\"auto\"\n          borderWidth=\"2px\"\n          borderRadius=\"lg\"\n          borderColor=\"gray.300\"\n          overflow=\"hidden\"\n          p={{ base: \"5px\", sm: \"20px\" }}\n        >\n          <Heading as=\"h2\" size=\"2xl\">\n            {data.item_name}\n          </Heading>\n\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\n            {data.category}\n          </Text>\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n            {Array(5)\n              .fill(\"\")\n              .map((_, i) => (\n                <StarIcon\n                  key={i}\n                  color={i < data.feedbacks[0].rating ? \"cyan.500\" : \"cyan.300\"}\n                />\n              ))}\n            <Box as=\"span\" ml=\"2\"  fontSize=\"sm\">\n              {data.feedbacks.length} reviews &bull; {data.orders} orders\n            </Box>\n          </Box>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Varient\n          </Heading>\n          <HStack mt=\"20px\">{imageStack}</HStack>\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Quantity\n          </Heading>\n          <HStack mt=\"10px\">\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<AddIcon />}\n              onClick={quantity_inc}\n            />\n            <Text>{currentOrder.quantity}</Text>\n            <IconButton\n              size=\"xs\"\n              aria-label=\"Search database\"\n              icon={<MinusIcon />}\n              onClick={quantity_dec}\n            />\n          </HStack>\n\n          <HStack mt=\"20px\">\n            <Button colorScheme=\"cyan\" color=\"white\" size=\"lg\">\n              Buy now\n            </Button>\n            <Button colorScheme=\"orange\" size=\"lg\" variant=\"outline\">\n              Add to cart\n            </Button>\n          </HStack>\n\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\n            Description\n          </Heading>\n          <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\n            {data.description}\n          </Text>\n        </Box>\n      </SimpleGrid>\n      <Box\n        width=\"auto\"\n        h=\"auto\"\n        borderWidth=\"2px\"\n        borderRadius=\"lg\"\n        borderColor=\"black\"\n        overflow=\"hidden\"\n        p={{ base: \"5px\", sm: \"20px\" }}\n        mt=\"20px\"\n        mb=\"100px\"\n\n      >\n        <Heading as=\"h2\" size=\"2xl\" mb='20px'>\n          Reviews\n        </Heading>\n        \n        <ReviewCountPreview feedbacks={data.feedbacks}/>\n          <Tabs>\n          <TabList>\n          <Tab><StarIcon color=\"cyan.500\"/> All</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 5</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 4</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 3</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 2</Tab>\n            <Tab><StarIcon color=\"cyan.500\"/> 1</Tab>\n          </TabList>\n\n          <TabPanels>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ='all' />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={5} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={4} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={3} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={2} />\n            </TabPanel>\n            <TabPanel>\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating ={1} />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Box>\n  );\n}\n\nexport default SpecificProductPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/Home.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ReviewCountPreview.js",["95","96","97","98","99","100","101","102"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n  VStack,\n  Progress,\n  Stack,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction ReviewCountPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  const total_reviews = props.feedbacks.length;\n\n  var s5 = 0;\n  var s4 = 0;\n  var s3 = 0;\n  var s2 = 0;\n  var s1 = 0;\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].rating === 5) {\n      s5 = s5 + 1;\n    } else if (props.feedbacks[i].rating === 4) {\n      s4 = s4 + 1;\n    } else if (props.feedbacks[i].rating === 3) {\n      s3 = s3 + 1;\n    } else if (props.feedbacks[i].rating === 2) {\n      s2 = s2 + 1;\n    } else if (props.feedbacks[i].rating === 1) {\n      s1 = s1 + 1;\n    }\n  }\n\n  return (\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          5 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s5} reviews\n        </Text>\n        <Progress value={(s5 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          4 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s4} reviews\n        </Text>\n        <Progress value={(s4 / total_reviews) * 100} />\n      </Box>\n\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          3 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s3} reviews\n        </Text>\n        <Progress value={(s3 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          2 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s2} reviews\n        </Text>\n        <Progress value={(s2 / total_reviews) * 100} />\n      </Box>\n      <Box w=\"300px\" pb='5px'>\n        <Text fontSize='lg'>\n          1 <StarIcon color=\"cyan.500\" />\n        </Text>\n        <Text fontSize='xs'>\n            {s1} reviews\n        </Text>\n        <Progress value={(s1 / total_reviews) * 100} />\n      </Box>\n    </Stack>\n  );\n}\n\nexport default ReviewCountPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CategorizedReviewPreview.js",["103"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  HStack,\n  Text,\n  Avatar,\n  Box,\n  useColorMode,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Replys from \"./Replys\";\n\nfunction CategorizedReviewPreview(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  var reviews = [];\n\n  var stars = (rating) => {\n    return Array(5)\n      .fill(\"\")\n      .map((_, j) => (\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\n      ));\n  };\n\n  for (var i = 0; i < props.feedbacks.length; i++) {\n    if (props.feedbacks[i].rating === props.rating || props.rating === 'all') {\n      reviews.push(\n        <Box mb='10px'>\n          <HStack>\n            <Avatar\n              name={props.feedbacks[i].customer_name}\n              src={props.feedbacks[i].customer_dp}\n            />\n            <Box\n              w=\"100%\"\n              borderWidth=\"2px\"\n              borderRadius=\"lg\"\n              p=\"10px\"\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\n            >\n              <Heading as=\"h5\" size=\"sm\">\n                {props.feedbacks[i].customer_name}\n              </Heading>\n              <Text>{props.feedbacks[i].comment}</Text>\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\n                {stars(props.feedbacks[i].rating)}\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\n                  {props.feedbacks[i].rating}/5\n                </Box>\n              </Box>\n            </Box>\n          </HStack>\n          <Replys replys={props.feedbacks[i].reply} />\n        </Box>\n      );\n    }\n  }\n\n  if (reviews.length === 0) {\n    reviews.push(<Text>No reviews</Text>);\n  }\n\n  return <>{reviews}</>;\n}\n\nexport default CategorizedReviewPreview;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Replys.js",["104","105","106"],"import {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nfunction Replys(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const dp = \"\";\n\n  var replys = [];\n  for (var i = 0; i < props.replys.length; i++) {\n    replys.push(\n      <HStack spacing=\"10px\" w=\"100%\">\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          p=\"10px\"\n          mt=\"20px\"\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\n        >\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\n          <Text>{props.replys[i]}</Text>\n        </Box>\n      </HStack>\n    );\n  }\n\n  return (\n    <Box ml=\"100px\" mt='10px'>\n      <VStack w=\"100%\">{replys}</VStack>\n    </Box>\n  );\n}\n\nexport default Replys;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/Navbar.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerAdress.js",["107","108"],"/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CustomerDashboard.js",["109","110","111","112","113","114"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Avatar,\n    Divider,\n    Heading,\n    SimpleGrid,\n    Text,\n    Square,\n    Center\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from '../components/Navbar';\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\n\n\nconst CustomerDashboard = () => {\n\n    const [userdata, setUserdata] = useState(\n        {\n            user_id:'12345',\n            user_name:'Pasan Madushan',\n            image:'https://images.unsplash.com/photo-1553267751-1c148a7280a1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\n            orders:{\n                all:12,\n                await_pay:15,\n                await_ship:35,\n                await_del:45,\n                delivered:56\n            }\n        }\n    )\n\n\n    return (\n        <Box\n        \n        pt=\"200px\"\n        pl={{ base: \"10px\", sm: \"100px\" }}\n        pr={{ base: \"10px\", sm: \"100px\" }} >\n            \n            <Grid\n            \n                templateColumns=\"repeat(5, 1fr)\"\n                templateRows=\"repeat(2, 1fr)\"\n                gap={4}\n            >        \n                <GridItem  colSpan={1} rowSpan={2} >\n                    <CustomerDashSideBar page=\"dashboard\" />\n                </GridItem>\n            \n                <GridItem colSpan={4} >\n                    <Box \n                        width=\"auto\"\n                        h=\"auto\"\n                        \n                        overflow=\"hidden\"\n                        p=\"10px\"\n                        pb=\"5px\"\n                        bg=\"gray.100\"\n                        >\n                        \n                        <Grid \n                            templateRows=\"repeat(2, 1fr)\"\n                            gap={4}\n                            \n                        >\n                            <GridItem p=\"10px\"  >\n                                  <SimpleGrid columns={2} spacing={5}>\n                                        <Box >\n                                            <Avatar\n                                                size=\"xl\"\n                                                name={userdata.user_name}\n                                                src={userdata.image}\n                                            />\n                                        </Box>\n                                        <Box >\n                                        <Heading size='lg'> Hello, {userdata.user_name} </Heading>\n                                        </Box>\n                                    </SimpleGrid>\n    \n                            </GridItem >\n                            \n                            <GridItem >\n                                       <Box \n                                        bg=\"gray.600\"\n                                        borderRadius='md'\n                                       \n                                        color='white'\n                                       >\n                                           <SimpleGrid columns={5} spacing={5} pt='10px' pb='10px'>\n\n                                                <Box textAlign='center' >\n                                                    \n                                                    <Heading as='h4' size='lg'> {userdata.orders.all} </Heading>\n                                                    \n                                                    <Text textColor='cyan.100'>All orders</Text>\n                                                </Box> \n                                                <Box textAlign='center'>\n                                                    <Heading as='h4' size='lg'> {userdata.orders.await_pay} </Heading>\n                                                    <Text textColor='cyan.100'>Awaiting Payment</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                    <Heading as='h4' size='lg'> {userdata.orders.await_ship} </Heading>\n                                                    <Text textColor='cyan.100'>Awaiting Shipment</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                   <Heading as='h4' size='lg'> {userdata.orders.await_del} </Heading>\n                                                    \n                                                    <Text textColor='cyan.100'>Awaiting Delivery</Text>\n                                                </Box>\n                                                <Box textAlign='center'>\n                                                    <Heading as='h4' size='lg'> {userdata.orders.delivered} </Heading>\n                                                    <Text textColor='cyan.100'>  Delivered</Text>\n                                                </Box>\n                                            </SimpleGrid> \n\n                                       </Box>\n                            </GridItem>\n                            \n                        </Grid>\n\n                    </Box>\n\n                        \n\n                </GridItem>\n            </Grid>\n\n\n        </Box>\n    )\n}\n\nexport default CustomerDashboard\n","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/ChangePersonalDet.js",["115","116"],"import {\n    Box,\n    Grid,\n    GridItem,\n    Accordion,AccordionButton,\n    AccordionItem,\n    AccordionIcon,\n    AccordionPanel,\n  } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\n\n\nconst ChangePersonalDet = () => { \n    const [personaldet,setPersonaldet] = useState(\n        {\n            id:1,\n            name:'pasan madushan',\n            tp:'07704543436',\n            street:'1234',\n            city:'abc',\n            state:'def',\n            zip:'12121'   \n                       \n        },)\n\n\n\n        return (\n            <Box\n            \n            pt=\"200px\"\n            pl={{ base: \"10px\", sm: \"100px\" }}\n            pr={{ base: \"10px\", sm: \"100px\" }} >\n                \n                <Grid\n                \n                    templateColumns=\"repeat(5, 1fr)\"\n                    templateRows=\"repeat(1, 1fr)\"\n                    gap={4}\n                >        \n                    <GridItem  colSpan={1} rowSpan={2} >\n                        <CustomerDashSideBar page=\"changedet\" />\n                    </GridItem>\n                \n                    <GridItem colSpan={4} >\n                        \n                    <Accordion allowToggle defaultIndex={[0]}>\n                        <AccordionItem>\n                            <AccordionButton _expanded={{ bg: \"gray.600\", color: \"white\" }}>\n                                <Box flex=\"1\" textAlign=\"left\">\n                                    Change My Personal Details\n                                </Box>\n                                <AccordionIcon />\n                            </AccordionButton>\n                            <AccordionPanel pb={4}>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                                tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n                                veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n                                commodo consequat.\n                            </AccordionPanel>\n                        </AccordionItem>\n\n                        <AccordionItem>\n                            <AccordionButton  _expanded={{ bg: \"gray.600\", color: \"white\" }}>\n                                <Box flex=\"1\" textAlign=\"left\">\n                                    Change My Password\n                                </Box>\n                                <AccordionIcon />\n                            </AccordionButton>\n                            <AccordionPanel pb={4}>\n      \n                            commodo consequat.\n                            </AccordionPanel>\n                            </AccordionItem>\n                        </Accordion>                        \n\n                    </GridItem>\n    \n                           \n                   \n                </Grid>\n    \n    \n            </Box>\n        )\n\n\n}\n\nexport default ChangePersonalDet","/Users/pasanmadushan/Desktop/Front-end-react/src/components/CustomerDashSideBar.js",["117","118","119","120","121"],"import {\n    Box,\n    Grid,\n    GridItem, \n    Heading,\n    Text,\n    Divider,\n    Link,\n    Button\n  } from \"@chakra-ui/react\";\n\n\n\nconst CustomerDashSideBar = ({page}) => {\n\n    const sidebarButton = {\n        width:'80%',   \n        marginTop:'7px',\n        marginBottom:'7px',\n        marginLeft:'10%',\n        marginRight:'10%'\n    }\n\n    return (\n        <Box\n            width=\"auto\"\n            height={window.innerHeight-100}\n            overflow=\"hidden\"\n            bg='cyan.50'\n            pt='5'    \n                    \n        >                   \n                <Link href='/customerdashboard'> <Button colorScheme=\"teal\" size=\"md\" style={sidebarButton}>Dashboard </Button> </Link>     \n          \n                <Link href> <Button colorScheme=\"teal\" size=\"md\" style={sidebarButton}> My Orders  </Button> </Link>     \n         \n                <Link href=''> <Button colorScheme=\"teal\" size=\"md\" style={sidebarButton}> Card & Bank Details  </Button></Link>     \n            \n                <Link href='/shippingaddress'><Button colorScheme=\"teal\" size=\"md\" style={sidebarButton}> Shipping Address </Button></Link>     \n         \n                <Link href='/changepersonaldet'><Button colorScheme=\"teal\" size=\"md\" style={sidebarButton}>Change Personal Details </Button></Link>     \n           \n        </Box>\n    )\n}\n\nexport default CustomerDashSideBar\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddressses.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/AddAddress.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ShipAddress.js",["122"],"import {React, useState} from 'react'\nimport {\n    Box,\n    Button,\n    GridItem,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    ButtonGroup,\n    FormControl,\n    FormLabel,\n    Input\n  } from \"@chakra-ui/react\";\n\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\n\n\nconst ShipAddress = ({address,deleteAddress,updateAddress}) => {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const [data, setData] = useState({\n        id: address.id,\n        name: address.name,\n        tp: address.tp,\n        street: address.street,\n        city: address.city,\n        state: address.state,\n        zip: address.zip,\n    })\n    \n    const handleSubmit = (e)=>{\n        e.preventDefault()\n        // console.log('---------handlesubmit data--------')\n        // console.log(data)\n        updateAddress(data)\n        \n        // updateAddress(address.id)\n    }\n\n    const handleChange =  (event) => {\n        var value = event.target.value;\n        var name = event.target.name;\n\n        setData({ ...data, [event.target.name]: value })\n        // console.log(data)\n    };\n\n\n    return(\n        <GridItem>\n        <Box  \n            bg='cyan.50'\n            borderRadius='md'\n            border='1px'\n            borderColor='cyan.600'\n            p='6'\n            m='4'\n            pb='3'\n           \n            >\n\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                    <ImUser />\n                    <Box\n                        color=\"cyan.900\" \n                        letterSpacing=\"wide\"\n                        fontSize=\"lg\"       \n                        ml=\"2\"\n                    >\n                        { address.name }\n                    </Box>\n                </Box> \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n                \n                    <ImPhone color='cyan.600'/>\n                    <Box\n                        color=\"cyan.900\" \n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        { address.tp }\n                    </Box>\n                </Box> \n\n                <Box d=\"flex\" alignItems=\"baseline\" mt='2' mb='5'>\n                \n                    <ImLocation m='3'/>\n                    <Box\n                        color=\"cyan.900\" \n                        letterSpacing=\"wide\"\n                        fontSize=\"md\"       \n                        ml=\"2\"\n                    >\n                        <Box>{ address.street }</Box>\n                        <Box>{ address.city }</Box>\n                        <Box>{ address.state }</Box>\n                        <Box>{ address.zip }</Box>\n                    </Box>\n                </Box> \n               \n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\n\n                    {/* Edit Address  */}\n\n                     <Button colorScheme=\"teal\" size=\"xs\" mr='2' onClick={onOpen} >\n                        Edit\n                    </Button> \n                    {/* Edit modal */}\n                    <Modal onClose={onClose} isOpen={isOpen} isCentered>\n                        <ModalOverlay />\n                        <ModalContent>\n                            <ModalHeader>Edit shipping address</ModalHeader>\n                                <ModalCloseButton />\n                           \n                        <form onSubmit={handleSubmit}>\n                            <ModalBody>\n                            \n                            <FormControl id=\"name\" >\n                                <FormLabel>Name</FormLabel>\n                                \n                                <Input   \n                                placeholder='Name'       \n                                value={data.name}\n                                name='name'\n                                onChange={(event) => handleChange(event)}\n                                />\n                            </FormControl>\n\n                            <FormControl id=\"tp\" >\n                                <FormLabel>Telephone</FormLabel>\n                                <Input \n                                placeholder=\"Telephone\" \n                                value={data.tp}\n                                name='tp'\n                                onChange={(event) => handleChange(event)}  />\n                            </FormControl>\n\n                            <FormControl id=\"street\" >\n                                <FormLabel>Street</FormLabel>\n                                <Input \n                                placeholder=\"street\" \n                                value={data.street}\n                                name='street'\n                                onChange={(event) => handleChange(event)} />\n                            </FormControl>\n                            <FormControl id=\"city\" >\n                                <FormLabel>City</FormLabel>\n                                <Input placeholder=\"city\" \n                                value={data.city}\n                                name='city'\n                                onChange={(event) => handleChange(event)} />\n                            </FormControl>\n                            <FormControl id=\"state\" >\n                                <FormLabel>State</FormLabel>\n                                <Input placeholder=\"state\" \n                                value={data.state}\n                                name='state'\n                                onChange={(event) => handleChange(event)}\n                                />\n                            </FormControl>\n                            <FormControl id=\"zip\" >\n                                <FormLabel>Zip</FormLabel>\n                                <Input placeholder=\"zip\" \n                                value={data.zip}\n                                name='zip'\n                                onChange={(event) => handleChange(event)}\n                                />\n                            </FormControl>\n                           \n                               \n                            </ModalBody>\n                            <ModalFooter>\n                            <Input mt='2' mb='2'  type=\"submit\" value='Update' className='btn btn-block' bg=\"teal.400\" color='white' onClick={onClose} />\n                                {/* <Button colorScheme=\"green\"  onClick={trigger} >Update</Button>                               */}\n                            </ModalFooter>\n                        </form>\n                        </ModalContent>\n                    </Modal>\n\n                    {/* Delete Address */}\n                \n                    <Popover>\n                        <PopoverTrigger>\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \n                        </PopoverTrigger>\n                        <PopoverContent>\n                            <PopoverHeader fontWeight=\"semibold\">Delete Shipping Address</PopoverHeader>\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverBody>\n                            Are you sure you want to delete the shipping address?\n                            </PopoverBody>\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                                <ButtonGroup size=\"sm\">\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteAddress(address.id)}}>Delete</Button>\n                                </ButtonGroup>\n                            </PopoverFooter>\n                            </PopoverContent>\n                            </Popover>                   \n                </Box>\n\n        </Box>\n        </GridItem>\n    )\n}\n\nexport default ShipAddress\n\n\n\n    ","/Users/pasanmadushan/Desktop/Front-end-react/src/pages/CategoryPage.js",["123","124"],"import {\n  Box,\n  Button,\n  Center,\n  Grid,\n  GridItem,\n  Heading,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nimport SearchBar from \"../components/SearchBar\";\nimport ProductCard from \"../components/ProductCard\";\n\nfunction CategoryPage() {\n  const [categories, setCategories] = useState([\n    \"All categories\",\n    \"Phones\",\n    \"Smart Watches\",\n    \"Tabs\",\n    \"Headphones\",\n    \"Chargers\",\n  ]);\n  const [activeCategory, setActiveCategory] = useState(categories[0]);\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([\n    {\n      item_ID: \"233d\",\n      item_name: \"Electric tooth brush\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:100,\n      rating:3,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:100,\n      rating:3,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"../images/iphone.jpg\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:250,\n      rating:4,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Out of stock\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:150,\n      rating:2,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n    {\n      item_ID: \"34cd\",\n      item_name: \"Iphone 8\",\n      category: \"electronic\",\n      price: 200.0,\n      orders: 345,\n      reviews:50,\n      rating:5,\n      description:\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\n      status: \"Available\",\n      image:\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\n    },\n  ]);\n\n  var searchBarText = `Search in ${activeCategory}`;\n\n  const HandleClick = (category) => {\n    setActiveCategory(category);\n\n  };\n\n  return (\n    <Box\n      pt=\"150px\"\n      pl={{ base: \"10px\", sm: \"100px\" }}\n      pr={{ base: \"10px\", sm: \"100px\" }}\n    >\n      <Center mb='10px'>\n        <SearchBar text={searchBarText} />\n      </Center>\n      <Grid\n        templateRows=\"repeat(1, 1fr)\"\n        templateColumns=\"repeat(5, 1fr)\"\n        gap={0}\n        pb='200px'\n      >\n        <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\n          <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\">\n            Categories\n          </Heading>\n          <VStack>\n            {Array(categories.length)\n              .fill(\"\")\n              .map((_, i) =>\n                categories[i] === activeCategory ? (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"gray\"\n                    isActive\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                ) : (\n                  <Button\n                    w=\"100%\"\n                    variant=\"ghost\"\n                    colorScheme=\"gray\"\n                    onClick={() => HandleClick(categories[i])}\n                  >\n                    {categories[i]}\n                  </Button>\n                )\n              )}\n          </VStack>\n        </GridItem>\n        <GridItem\n          rowSpan={1}\n          colSpan={4}\n          borderWidth=\"1px\"\n          borderColor=\"gray.300\"\n          p=\"20px\"\n        >\n          <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\n            {activeCategory}\n          </Heading>\n          <Grid h=\"auto\" templateColumns=\"repeat(4, 1fr)\" gap={2}>\n            {Array(activeCategoryProducts.length)\n              .fill(\"\")\n              .map((_, i) => (\n                <ProductCard\n                  title={activeCategoryProducts[i].item_name}\n                  imageUrl={activeCategoryProducts[i].image}\n                  itemName= {activeCategoryProducts[i].item_name}\n                  category= {activeCategoryProducts[i].category}\n                  price= {activeCategoryProducts[i].price}\n                  orders= {activeCategoryProducts[i].orders}\n                  status={activeCategoryProducts[i].status}\n                  rating={activeCategoryProducts[i].rating}\n                  reviews={activeCategoryProducts[i].reviews}\n                  \n                />\n              ))}\n          </Grid>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default CategoryPage;\n","/Users/pasanmadushan/Desktop/Front-end-react/src/components/SearchBar.js",[],"/Users/pasanmadushan/Desktop/Front-end-react/src/components/ProductCard.js",["125","126","127","128","129","130","131","132"],"import { StarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Text,\n  useColorMode,\n  Avatar,\n  AvatarBadge,\n  HStack,\n  VStack,\n  Heading,\n  Image,\n  Badge,\n  Img,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\n\nfunction ProductCard(props) {\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Img src={props.imageUrl} alt={props.imageAlt} w='230px' h='250px' />\n\n      <Box p=\"6\">\n      <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            colorScheme='yellow'\n            variant=\"outline\" \n            fontSize='9px'\n          >\n            {props.category}\n          </Badge>\n        <Box fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" fontSize='xl' isTruncated>\n          {props.title}\n        </Box>\n       \n        <Box>\n          <Text color=\"gray.600\" fontSize=\"3xl\">\n            Rs. {props.price}\n          </Text>\n        </Box>\n\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\n          <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\n          >\n            {props.status}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {props.orders} Orders\n          </Box>\n        </Box>\n\n       \n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {props.reviews} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ProductCard;\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":4,"column":3,"nodeType":"139","messageId":"140","endLine":4,"endColumn":9},{"ruleId":"137","severity":1,"message":"141","line":9,"column":3,"nodeType":"139","messageId":"140","endLine":9,"endColumn":11},{"ruleId":"137","severity":1,"message":"142","line":22,"column":8,"nodeType":"139","messageId":"140","endLine":22,"endColumn":19},{"ruleId":"137","severity":1,"message":"143","line":23,"column":30,"nodeType":"139","messageId":"140","endLine":23,"endColumn":40},{"ruleId":"137","severity":1,"message":"144","line":28,"column":9,"nodeType":"139","messageId":"140","endLine":28,"endColumn":11},{"ruleId":"137","severity":1,"message":"145","line":29,"column":11,"nodeType":"139","messageId":"140","endLine":29,"endColumn":20},{"ruleId":"137","severity":1,"message":"146","line":29,"column":22,"nodeType":"139","messageId":"140","endLine":29,"endColumn":37},{"ruleId":"137","severity":1,"message":"147","line":40,"column":16,"nodeType":"139","messageId":"140","endLine":40,"endColumn":23},{"ruleId":"137","severity":1,"message":"148","line":3,"column":3,"nodeType":"139","messageId":"140","endLine":3,"endColumn":9},{"ruleId":"137","severity":1,"message":"149","line":5,"column":3,"nodeType":"139","messageId":"140","endLine":5,"endColumn":9},{"ruleId":"137","severity":1,"message":"150","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":10},{"ruleId":"137","severity":1,"message":"151","line":9,"column":3,"nodeType":"139","messageId":"140","endLine":9,"endColumn":9},{"ruleId":"137","severity":1,"message":"152","line":14,"column":8,"nodeType":"139","messageId":"140","endLine":14,"endColumn":14},{"ruleId":"137","severity":1,"message":"145","line":17,"column":11,"nodeType":"139","messageId":"140","endLine":17,"endColumn":20},{"ruleId":"137","severity":1,"message":"146","line":17,"column":22,"nodeType":"139","messageId":"140","endLine":17,"endColumn":37},{"ruleId":"137","severity":1,"message":"153","line":18,"column":7,"nodeType":"139","messageId":"140","endLine":18,"endColumn":14},{"ruleId":"137","severity":1,"message":"146","line":14,"column":22,"nodeType":"139","messageId":"140","endLine":14,"endColumn":37},{"ruleId":"137","severity":1,"message":"154","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":6,"endColumn":14},{"ruleId":"137","severity":1,"message":"155","line":11,"column":17,"nodeType":"139","messageId":"140","endLine":11,"endColumn":25},{"ruleId":"137","severity":1,"message":"146","line":14,"column":22,"nodeType":"139","messageId":"140","endLine":14,"endColumn":37},{"ruleId":"137","severity":1,"message":"156","line":17,"column":5,"nodeType":"139","messageId":"140","endLine":17,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":110,"column":37,"nodeType":"159","messageId":"160","endLine":110,"endColumn":39},{"ruleId":"137","severity":1,"message":"161","line":6,"column":5,"nodeType":"139","messageId":"140","endLine":6,"endColumn":12},{"ruleId":"137","severity":1,"message":"162","line":10,"column":5,"nodeType":"139","messageId":"140","endLine":10,"endColumn":11},{"ruleId":"137","severity":1,"message":"138","line":11,"column":5,"nodeType":"139","messageId":"140","endLine":11,"endColumn":11},{"ruleId":"137","severity":1,"message":"163","line":15,"column":10,"nodeType":"139","messageId":"140","endLine":15,"endColumn":19},{"ruleId":"137","severity":1,"message":"164","line":16,"column":8,"nodeType":"139","messageId":"140","endLine":16,"endColumn":14},{"ruleId":"137","severity":1,"message":"165","line":22,"column":22,"nodeType":"139","messageId":"140","endLine":22,"endColumn":33},{"ruleId":"137","severity":1,"message":"166","line":16,"column":12,"nodeType":"139","messageId":"140","endLine":16,"endColumn":23},{"ruleId":"137","severity":1,"message":"167","line":16,"column":24,"nodeType":"139","messageId":"140","endLine":16,"endColumn":38},{"ruleId":"137","severity":1,"message":"168","line":3,"column":5,"nodeType":"139","messageId":"140","endLine":3,"endColumn":9},{"ruleId":"137","severity":1,"message":"169","line":4,"column":5,"nodeType":"139","messageId":"140","endLine":4,"endColumn":13},{"ruleId":"137","severity":1,"message":"150","line":5,"column":5,"nodeType":"139","messageId":"140","endLine":5,"endColumn":12},{"ruleId":"137","severity":1,"message":"170","line":6,"column":5,"nodeType":"139","messageId":"140","endLine":6,"endColumn":9},{"ruleId":"137","severity":1,"message":"161","line":7,"column":5,"nodeType":"139","messageId":"140","endLine":7,"endColumn":12},{"ruleId":"137","severity":1,"message":"171","line":56,"column":13,"nodeType":"139","messageId":"140","endLine":56,"endColumn":17},{"ruleId":"137","severity":1,"message":"172","line":16,"column":22,"nodeType":"139","messageId":"140","endLine":16,"endColumn":35},{"ruleId":"137","severity":1,"message":"173","line":25,"column":34,"nodeType":"139","messageId":"140","endLine":25,"endColumn":59},{"ruleId":"137","severity":1,"message":"174","line":5,"column":3,"nodeType":"139","messageId":"140","endLine":5,"endColumn":15},{"ruleId":"137","severity":1,"message":"149","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":6,"endColumn":9},{"ruleId":"137","severity":1,"message":"154","line":7,"column":3,"nodeType":"139","messageId":"140","endLine":7,"endColumn":14},{"ruleId":"137","severity":1,"message":"148","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":9},{"ruleId":"137","severity":1,"message":"151","line":9,"column":3,"nodeType":"139","messageId":"140","endLine":9,"endColumn":9},{"ruleId":"137","severity":1,"message":"150","line":10,"column":3,"nodeType":"139","messageId":"140","endLine":10,"endColumn":10},{"ruleId":"137","severity":1,"message":"175","line":11,"column":3,"nodeType":"139","messageId":"140","endLine":11,"endColumn":8},{"ruleId":"137","severity":1,"message":"155","line":15,"column":17,"nodeType":"139","messageId":"140","endLine":15,"endColumn":25},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'Center' is defined but never used.","Identifier","unusedVar","'Progress' is defined but never used.","'ImageLoader' is defined but never used.","'SearchIcon' is defined but never used.","'id' is assigned a value but never used.","'colorMode' is assigned a value but never used.","'toggleColorMode' is assigned a value but never used.","'setData' is assigned a value but never used.","'HStack' is defined but never used.","'Avatar' is defined but never used.","'Heading' is defined but never used.","'VStack' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'AvatarBadge' is defined but never used.","'useState' is defined but never used.","'background' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Divider' is defined but never used.","'Square' is defined but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.","'setUserdata' is assigned a value but never used.","'personaldet' is assigned a value but never used.","'setPersonaldet' is assigned a value but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'Text' is defined but never used.","'name' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'setActiveCategoryProducts' is assigned a value but never used.","'useColorMode' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]