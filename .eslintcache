<<<<<<< HEAD
[{"F:\\DB_Project\\Front-end-react\\src\\index.js":"1","F:\\DB_Project\\Front-end-react\\src\\App.js":"2","F:\\DB_Project\\Front-end-react\\src\\pages\\Home.js":"3","F:\\DB_Project\\Front-end-react\\src\\pages\\SpecficProductPage.js":"4","F:\\DB_Project\\Front-end-react\\src\\pages\\CartPage.js":"5","F:\\DB_Project\\Front-end-react\\src\\pages\\FeedbackPage.js":"6","F:\\DB_Project\\Front-end-react\\src\\pages\\CategoryPage.js":"7","F:\\DB_Project\\Front-end-react\\src\\pages\\SellerDashboard.js":"8","F:\\DB_Project\\Front-end-react\\src\\components\\Navbar.js":"9","F:\\DB_Project\\Front-end-react\\src\\pages\\TrackOrder.js":"10","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerDashboard.js":"11","F:\\DB_Project\\Front-end-react\\src\\pages\\AllOrders.js":"12","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerAdress.js":"13","F:\\DB_Project\\Front-end-react\\src\\pages\\ChangePersonalDet.js":"14","F:\\DB_Project\\Front-end-react\\src\\pages\\CardDetails.js":"15","F:\\DB_Project\\Front-end-react\\src\\components\\ReviewCountPreview.js":"16","F:\\DB_Project\\Front-end-react\\src\\components\\CategorizedReviewPreview.js":"17","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBar.js":"18","F:\\DB_Project\\Front-end-react\\src\\components\\ProductCard.js":"19","F:\\DB_Project\\Front-end-react\\src\\components\\CustomerDashSideBar.js":"20","F:\\DB_Project\\Front-end-react\\src\\components\\AddAddress.js":"21","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTiles.js":"22","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddressses.js":"23","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePersonalDetForm.js":"24","F:\\DB_Project\\Front-end-react\\src\\components\\AddBankCard.js":"25","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePasswordForm.js":"26","F:\\DB_Project\\Front-end-react\\src\\components\\BankCards.js":"27","F:\\DB_Project\\Front-end-react\\src\\components\\Replys.js":"28","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTile.js":"29","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddress.js":"30","F:\\DB_Project\\Front-end-react\\src\\components\\BankCard.js":"31"},{"size":334,"mtime":1612288754563,"results":"32","hashOfConfig":"33"},{"size":1871,"mtime":1612933771451,"results":"34","hashOfConfig":"33"},{"size":119,"mtime":1612288754563,"results":"35","hashOfConfig":"33"},{"size":8396,"mtime":1612887228909,"results":"36","hashOfConfig":"33"},{"size":11857,"mtime":1612978176669,"results":"37","hashOfConfig":"33"},{"size":4777,"mtime":1612895871855,"results":"38","hashOfConfig":"33"},{"size":5492,"mtime":1612887228909,"results":"39","hashOfConfig":"33"},{"size":2765,"mtime":1612887242049,"results":"40","hashOfConfig":"33"},{"size":3451,"mtime":1612887228907,"results":"41","hashOfConfig":"33"},{"size":1734,"mtime":1612933614962,"results":"42","hashOfConfig":"33"},{"size":6290,"mtime":1612933614908,"results":"43","hashOfConfig":"33"},{"size":8198,"mtime":1612933614357,"results":"44","hashOfConfig":"33"},{"size":6035,"mtime":1612933614845,"results":"45","hashOfConfig":"33"},{"size":3101,"mtime":1612933614779,"results":"46","hashOfConfig":"33"},{"size":4856,"mtime":1612933614623,"results":"47","hashOfConfig":"33"},{"size":2373,"mtime":1612288754562,"results":"48","hashOfConfig":"33"},{"size":1820,"mtime":1612288754561,"results":"49","hashOfConfig":"33"},{"size":620,"mtime":1612551734370,"results":"50","hashOfConfig":"33"},{"size":1997,"mtime":1612551734369,"results":"51","hashOfConfig":"33"},{"size":1864,"mtime":1612933613996,"results":"52","hashOfConfig":"33"},{"size":2640,"mtime":1612933613690,"results":"53","hashOfConfig":"33"},{"size":407,"mtime":1612933614078,"results":"54","hashOfConfig":"33"},{"size":440,"mtime":1612933614301,"results":"55","hashOfConfig":"33"},{"size":3039,"mtime":1612933613910,"results":"56","hashOfConfig":"33"},{"size":2723,"mtime":1612933613755,"results":"57","hashOfConfig":"33"},{"size":1892,"mtime":1612933613874,"results":"58","hashOfConfig":"33"},{"size":359,"mtime":1612933613873,"results":"59","hashOfConfig":"33"},{"size":923,"mtime":1612887228908,"results":"60","hashOfConfig":"33"},{"size":5550,"mtime":1612933614077,"results":"61","hashOfConfig":"33"},{"size":8741,"mtime":1612933614301,"results":"62","hashOfConfig":"33"},{"size":4382,"mtime":1612933613871,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1n5sntt",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"66"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"66"},"F:\\DB_Project\\Front-end-react\\src\\index.js",[],["146","147"],"F:\\DB_Project\\Front-end-react\\src\\App.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\Home.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\SpecficProductPage.js",["148","149","150","151"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Heading,\r\n  HStack,\r\n  IconButton,\r\n  Image,\r\n  SimpleGrid,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { AddIcon, MinusIcon, StarIcon } from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction SpecificProductPage() {\r\n  let { id } = useParams();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const [currentOrder, setCurrentOrder] = useState({ varient: 0, quantity: 0 });\r\n\r\n  const quantity_inc = () => {\r\n    setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity + 1 });\r\n  };\r\n  const quantity_dec = () => {\r\n    if (currentOrder.quantity > 0)\r\n      setCurrentOrder({ ...currentOrder, quantity: currentOrder.quantity - 1 });\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"233d\",\r\n    item_name: \"Electric tooth brush\",\r\n    category: \"electronic\",\r\n    price: 200.0,\r\n    orders: 345,\r\n    description:\r\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n    status: \"Available\",\r\n    feedbacks: [\r\n      {\r\n        customer_name: \"jof hagi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"asdasds asdasd sad\",\r\n        rating: 4,\r\n        reply: [\"sfsdfsd\", \"Thank you\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 5,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"gendi gahnadi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"hgfhf dghhdgf dfgshssdd\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        varient_name: \"white 2 brushes\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n        color: \"green\",\r\n        details: \"\",\r\n        Quantity: 450,\r\n      },\r\n      {\r\n        varient_name: \"pink 2 brushes with bateries\",\r\n        image:\r\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\r\n        color: \"pink\",\r\n        details: \"\",\r\n        Quantity: 230,\r\n      },\r\n      {\r\n        varient_name: \"two heads only\",\r\n        image:\r\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\r\n        color: \"blue\",\r\n        details: \"\",\r\n        Quantity: 500,\r\n      },\r\n    ],\r\n  });\r\n\r\n  var imageStack = new Array(data.variants.length)\r\n    .fill(0)\r\n    .map((zero, index) => (\r\n      <Box\r\n        cursor=\"pointer\"\r\n        borderWidth={currentOrder.varient === index ? \"3px\" : \"1px\"}\r\n        borderColor=\"gray.500\"\r\n        onClick={() => setCurrentOrder({ ...currentOrder, varient: index })}\r\n      >\r\n        <Image\r\n          src={data.variants[index].image}\r\n          w=\"100px\"\r\n          h=\"100px\"\r\n          alt=\"image\"\r\n        />\r\n      </Box>\r\n    ));\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb=\"20px\">\r\n        <SearchBar text=\"I'm shopping for\" />\r\n      </Center>\r\n\r\n      <SimpleGrid\r\n        columns={2}\r\n        spacing={5}\r\n        minChildWidth=\"400px\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n      >\r\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\r\n          <Image\r\n            src={data.variants[currentOrder.varient].image}\r\n            w=\"auto\"\r\n            h=\"auto\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            {data.item_name}\r\n          </Heading>\r\n\r\n          <Text fontSize=\"xl\" ml=\"3px\" mt=\"5px\">\r\n            {data.category}\r\n          </Text>\r\n          <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < data.feedbacks[0].rating ? \"cyan.500\" : \"cyan.300\"}\r\n                />\r\n              ))}\r\n            <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n              {data.feedbacks.length} reviews &bull; {data.orders} orders\r\n            </Box>\r\n          </Box>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Varient\r\n          </Heading>\r\n          <HStack mt=\"20px\">{imageStack}</HStack>\r\n          <Heading as=\"h4\" size=\"md\" mt=\"20px\">\r\n            Quantity\r\n          </Heading>\r\n          <HStack mt=\"10px\">\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<AddIcon />}\r\n              onClick={quantity_inc}\r\n            />\r\n            <Text>{currentOrder.quantity}</Text>\r\n            <IconButton\r\n              size=\"xs\"\r\n              aria-label=\"Search database\"\r\n              icon={<MinusIcon />}\r\n              onClick={quantity_dec}\r\n            />\r\n          </HStack>\r\n\r\n          <HStack mt=\"20px\">\r\n            <Button colorScheme=\"cyan\" color=\"white\" size=\"lg\">\r\n              Buy now\r\n            </Button>\r\n            <Button colorScheme=\"orange\" size=\"lg\" variant=\"outline\">\r\n              Add to cart\r\n            </Button>\r\n          </HStack>\r\n        </Box>\r\n      </SimpleGrid>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"10px\"\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          Description\r\n        </Heading>\r\n        <Text fontSize=\"md\" ml=\"3px\" mt=\"5px\">\r\n          {data.description}\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        width=\"auto\"\r\n        h=\"auto\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n        overflow=\"hidden\"\r\n        p={{ base: \"5px\", sm: \"20px\" }}\r\n        mt=\"20px\"\r\n        mb=\"100px\"\r\n      >\r\n        <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n          Reviews\r\n        </Heading>\r\n\r\n        <ReviewCountPreview feedbacks={data.feedbacks} />\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> All\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 5\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 4\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 3\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 2\r\n            </Tab>\r\n            <Tab>\r\n              <StarIcon color=\"cyan.500\" /> 1\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview\r\n                feedbacks={data.feedbacks}\r\n                rating=\"all\"\r\n              />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={5} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={4} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={3} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={2} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <CategorizedReviewPreview feedbacks={data.feedbacks} rating={1} />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SpecificProductPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CartPage.js",["152","153","154","155","156","157","158"],"F:\\DB_Project\\Front-end-react\\src\\pages\\FeedbackPage.js",["159","160","161","162","163","164","165","166","167","168"],"import {\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Textarea,\r\n  Text,\r\n  useColorMode,\r\n  Badge,\r\n} from \"@chakra-ui/react\";\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\r\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  AddIcon,\r\n  MinusIcon,\r\n  ArrowForwardIcon,\r\n  StarIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport CategorizedReviewPreview from \"../components/CategorizedReviewPreview\";\r\nimport ReviewCountPreview from \"../components/ReviewCountPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction FeedbackPage(props) {\r\n  let { id } = useParams();\r\n\r\n  const [rating, setRating] = useState(2);\r\n\r\n  const [data, setData] = useState({\r\n    item_ID: \"233d\",\r\n    item_name: \"Electric tooth brush\",\r\n    category: \"electronic\",\r\n    price: 200.0,\r\n    orders: 345,\r\n    description:\r\n      \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n    status: \"Available\",\r\n    feedbacks: [\r\n      {\r\n        customer_name: \"jof hagi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"asdasds asdasd sad\",\r\n        rating: 4,\r\n        reply: [\"sfsdfsd\", \"Thank you\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 5,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"gendi gahnadi\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"hgfhf dghhdgf dfgshssdd\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n      {\r\n        customer_name: \"den kali\",\r\n        customer_dp: \"jof hagi\",\r\n        comment: \"axasxas asdasd sad\",\r\n        rating: 2,\r\n        reply: [\"sfsdsddfsd\", \"asdassadasd sadssadasd sadasad\"],\r\n      },\r\n    ],\r\n    variants: [\r\n      {\r\n        varient_name: \"white 2 brushes\",\r\n        image:\r\n          \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n        color: \"green\",\r\n        details: \"\",\r\n        Quantity: 450,\r\n      },\r\n      {\r\n        varient_name: \"pink 2 brushes with bateries\",\r\n        image:\r\n          \"https://www.powerplanetonline.com/cdnassets/xiaomi_soocas_x3u_sonic_electric_toothbrush_01_rosa_l.jpg\",\r\n        color: \"pink\",\r\n        details: \"\",\r\n        Quantity: 230,\r\n      },\r\n      {\r\n        varient_name: \"two heads only\",\r\n        image:\r\n          \"https://dam.which.co.uk/3b117c36-ca30-49bb-853c-9d31b220a90d.jpg\",\r\n        color: \"blue\",\r\n        details: \"\",\r\n        Quantity: 500,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb=\"20px\">\r\n        <SearchBar text=\"I'm shopping for\" />\r\n      </Center>\r\n      <SimpleGrid\r\n        columns={2}\r\n        spacing={5}\r\n        minChildWidth=\"400px\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"lg\"\r\n        borderColor=\"gray.300\"\r\n      >\r\n        <Box width=\"auto\" h=\"auto\" overflow=\"hidden\" p=\"5px\">\r\n          <Image\r\n            src={data.variants[0].image}\r\n            w=\"auto\"\r\n            h=\"auto\"\r\n            alt=\"image\"\r\n            fit\r\n          />\r\n        </Box>\r\n        <Box\r\n          width=\"auto\"\r\n          h=\"auto\"\r\n          overflow=\"hidden\"\r\n          p={{ base: \"5px\", sm: \"20px\" }}\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            Submit your feedback...\r\n          </Heading>\r\n\r\n          <Text fontSize=\"6xl\">{data.item_name}</Text>\r\n\r\n          <Badge variant=\"outline\" colorScheme=\"yellow\" fontSize='lg'>\r\n            {data.category}\r\n          </Badge>\r\n\r\n          <Box d=\"flex\" mt=\"10\" alignItems=\"center\">\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < rating ? \"cyan.500\" : \"cyan.100\"}\r\n                  onClick={() => setRating(i + 1)}\r\n                  boxSize=\"50px\"\r\n                  cursor=\"pointer\"\r\n                />\r\n              ))}\r\n          </Box>\r\n          <form>\r\n            <Textarea mt=\"30px\" placeholder=\"Type your comment here...\" />\r\n            <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n              <Button\r\n                loadingText=\"Submitting\"\r\n                type=\"submit\"\r\n                rightIcon={<ArrowForwardIcon />}\r\n                colorScheme=\"teal\"\r\n                variant=\"outline\"\r\n              >\r\n                Leave Feedback\r\n              </Button>\r\n            </Stack>\r\n          </form>\r\n        </Box>\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FeedbackPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CategoryPage.js",["169","170","171"],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  useColorMode,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport ProductCard from \"../components/ProductCard\";\r\n\r\nfunction CategoryPage() {\r\n  const [categories, setCategories] = useState([\r\n    \"All categories\",\r\n    \"Phones\",\r\n    \"Smart Watches\",\r\n    \"Tabs\",\r\n    \"Headphones\",\r\n    \"Chargers\",\r\n  ]);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const [activeCategory, setActiveCategory] = useState(categories[0]);\r\n  const [activeCategoryProducts, setActiveCategoryProducts] = useState([\r\n    {\r\n      item_ID: \"233d\",\r\n      item_name: \"Electric tooth brush\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:100,\r\n      rating:3,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Available\",\r\n      image:\r\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n    },\r\n    {\r\n      item_ID: \"34cd\",\r\n      item_name: \"Iphone 8\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:100,\r\n      rating:3,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Available\",\r\n      image:\r\n        \"../images/iphone.jpg\",\r\n    },\r\n    {\r\n      item_ID: \"34cd\",\r\n      item_name: \"Iphone 8\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:250,\r\n      rating:4,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Out of stock\",\r\n      image:\r\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n    },\r\n    {\r\n      item_ID: \"34cd\",\r\n      item_name: \"Iphone 8\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:150,\r\n      rating:2,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Available\",\r\n      image:\r\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n    },\r\n    {\r\n      item_ID: \"34cd\",\r\n      item_name: \"Iphone 8\",\r\n      category: \"electronic\",\r\n      price: 200.0,\r\n      orders: 345,\r\n      reviews:50,\r\n      rating:5,\r\n      description:\r\n        \"dqdasd a sadasd asdasdafsfrgs gsgsg sd gsgsgsdg sdgsdgsdg sdg\",\r\n      status: \"Available\",\r\n      image:\r\n        \"https://b3h2.scene7.com/is/image/BedBathandBeyond/69055867778_imageset?$690$&wid=690&hei=690\",\r\n    },\r\n  ]);\r\n\r\n  var searchBarText = `Search in ${activeCategory}`;\r\n\r\n  const HandleClick = (category) => {\r\n    setActiveCategory(category);\r\n\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      pt=\"150px\"\r\n      pl={{ base: \"10px\", sm: \"100px\" }}\r\n      pr={{ base: \"10px\", sm: \"100px\" }}\r\n    >\r\n      <Center mb='10px'>\r\n        <SearchBar text={searchBarText} />\r\n      </Center>\r\n      <Grid\r\n        templateRows=\"repeat(1, 1fr)\"\r\n        templateColumns=\"repeat(5, 1fr)\"\r\n        gap={0}\r\n        pb='200px'\r\n      >\r\n        <GridItem rowSpan={1} colSpan={1} bg={colorMode === \"light\" ? \"gray.200\" : \"gray.600\"} p=\"10px\">\r\n          <Heading as=\"h3\" size=\"lg\" mb=\"20px\">\r\n            Categories\r\n          </Heading>\r\n          <VStack>\r\n            {Array(categories.length)\r\n              .fill(\"\")\r\n              .map((_, i) =>\r\n                categories[i] === activeCategory ? (\r\n                  <Button\r\n                    w=\"100%\"\r\n                    variant=\"ghost\"\r\n                    colorScheme=\"gray\"\r\n                    isActive\r\n                    onClick={() => HandleClick(categories[i])}\r\n                  >\r\n                    {categories[i]}\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    w=\"100%\"\r\n                    variant=\"ghost\"\r\n                    colorScheme=\"gray\"\r\n                    onClick={() => HandleClick(categories[i])}\r\n                  >\r\n                    {categories[i]}\r\n                  </Button>\r\n                )\r\n              )}\r\n          </VStack>\r\n        </GridItem>\r\n        <GridItem\r\n          rowSpan={1}\r\n          colSpan={4}\r\n          borderWidth=\"1px\"\r\n          borderColor=\"gray.300\"\r\n          p=\"20px\"\r\n        >\r\n          <Heading as=\"h2\" size=\"2xl\" mb=\"20px\">\r\n            {activeCategory}\r\n          </Heading>\r\n          <Grid h=\"auto\" templateColumns=\"repeat(4, 1fr)\" gap={2}>\r\n            {Array(activeCategoryProducts.length)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <ProductCard\r\n                  title={activeCategoryProducts[i].item_name}\r\n                  imageUrl={activeCategoryProducts[i].image}\r\n                  itemName= {activeCategoryProducts[i].item_name}\r\n                  category= {activeCategoryProducts[i].category}\r\n                  price= {activeCategoryProducts[i].price}\r\n                  orders= {activeCategoryProducts[i].orders}\r\n                  status={activeCategoryProducts[i].status}\r\n                  rating={activeCategoryProducts[i].rating}\r\n                  reviews={activeCategoryProducts[i].reviews}\r\n                  \r\n                />\r\n              ))}\r\n          </Grid>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CategoryPage;\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\SellerDashboard.js",["172","173","174","175","176","177","178","179","180","181","182"],"import {\r\n    Box,\r\n    Center,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    VStack,\r\n    Input,\r\n    Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon, MinusIcon, ArrowForwardIcon, StarIcon } from \"@chakra-ui/icons\";\r\n\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\"\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n} from \"@chakra-ui/react\"\r\nimport React, { useState } from \"react\";\r\nimport { Avatar, AvatarBadge, AvatarGroup } from \"@chakra-ui/react\"\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction SellerDashboard() {\r\n\r\n    return (\r\n        <Box\r\n            pt=\"150px\"\r\n            align='center'\r\n            pl={{ base: \"10px\", sm: \"100px\" }}\r\n            pr={{ base: \"10px\", sm: \"100px\" }}\r\n        >\r\n\r\n            <Grid\r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                gap={0}\r\n                textAlign='center'\r\n                pb='200px'\r\n                w='800px'\r\n            >\r\n                <GridItem rowSpan={1} colSpan={1} bg=\"gray.300\" p=\"10px\">\r\n                    <Heading as=\"h3\" size=\"lg\" color=\"gray.600\" mb=\"20px\" w='300px'>\r\n                        <Avatar size=\"3xl\" name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" marginTop='40px' />\r\n                    </Heading>\r\n                    <VStack>\r\n\r\n                    </VStack>\r\n                </GridItem>\r\n                <GridItem\r\n                    rowSpan={1}\r\n                    colSpan={4}\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    p=\"20px\"\r\n                >\r\n                    <Heading as=\"h2\" size=\"2xl\" color=\"gray.600\" mb=\"20px\">\r\n                        Account Settings\r\n            </Heading>\r\n                    <FormControl id=\"email\" mt='30px'>\r\n                        <FormLabel>Email address</FormLabel>\r\n                        <Input type=\"email\" />\r\n                        <FormLabel mt='10px'>User Name</FormLabel>\r\n                        <Input type=\"string\" />\r\n                        <FormLabel mt='10px'>Password</FormLabel>\r\n                        <Input type=\"password\" />\r\n                        <FormLabel mt='10px'>Re-Enter Password</FormLabel>\r\n                        <Input type=\"password\" />\r\n                        <Stack direction=\"row\" spacing={4} mt=\"20px\">\r\n                            <Button\r\n                                loadingText=\"Submitting\" type=\"submit\" rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\">\r\n                                Update\r\n  </Button>\r\n                        </Stack>\r\n                    </FormControl>\r\n                </GridItem>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SellerDashboard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\Navbar.js",[],"F:\\DB_Project\\Front-end-react\\src\\pages\\TrackOrder.js",["183","184"],"import React from 'react'\r\nimport { \r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    Center,\r\n    useColorMode,\r\n    Badge,\r\n    Text\r\n        } from \"@chakra-ui/react\";\r\n\r\nconst TrackOrder = () => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n\r\n    return (\r\n        <Box \r\n            pt=\"110px\"\r\n            pl={{ base: \"10px\", sm: \"100px\" }}\r\n            pr={{ base: \"10px\", sm: \"100px\" }}\r\n        >\r\n            <Box mt='20px' mb='20px' p='3' bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\r\n                <Center><Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h3' size='md'>Track Your Order</Heading></Center>        \r\n            </Box>\r\n            <Grid\r\n                h=\"600px\"\r\n                templateRows=\"repeat(3, 1fr)\"\r\n                templateColumns=\"repeat(3, 1fr)\"\r\n                gap={4}\r\n            >\r\n                <GridItem colSpan={2}  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\r\n\r\n                <Box p='5'>\r\n                    <Badge mr='3' variant=\"outline\" fontSize='md' colorScheme=\"teal\">\r\n                    Estimated Delivery \r\n                    </Badge>\r\n                   dsdsd\r\n     \r\n                </Box>\r\n\r\n                </GridItem>\r\n\r\n                <GridItem bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} >\r\n\r\n                    <Box p='8'>\r\n                        xdsd\r\n                    </Box>\r\n\r\n                </GridItem>\r\n                <GridItem  rowSpan={2} colSpan={2} bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} />\r\n                <GridItem  bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}/>\r\n            </Grid>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TrackOrder\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerDashboard.js",["185","186","187","188","189"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Avatar,\r\n    Divider,\r\n    Heading,\r\n    SimpleGrid,\r\n    Text,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from '../components/Navbar';\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\n\r\n\r\nconst CustomerDashboard = () => {\r\n\r\n    const [userdata, setUserdata] = useState(\r\n        {\r\n            user_id:'12345',\r\n            user_name:'Pasan Madushan',\r\n            image:'https://images.unsplash.com/photo-1553267751-1c148a7280a1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            orders:{\r\n                all:12,\r\n                await_pay:15,\r\n                await_ship:35,\r\n                await_del:45,\r\n                delivered:56\r\n            }\r\n        }\r\n    )\r\n    \r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n\r\n    return (\r\n        <Box\r\n        \r\n        pt=\"100px\"\r\n        // pl={{ base: \"10px\", sm: \"100px\" }}\r\n        // pr={{ base: \"10px\", sm: \"100px\" }} \r\n        >\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(2, 1fr)\"\r\n                \r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"dashboard\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} m={5} mt={8}>\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"\r\n                        \r\n                        overflow=\"hidden\"\r\n                        p=\"10px\"\r\n                        pb=\"5px\"\r\n                        bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n                        borderRadius='10px'\r\n                        >\r\n                        \r\n                        <Grid \r\n                            templateRows=\"repeat(2, 1fr)\"\r\n                            gap={4}\r\n                            \r\n                        >\r\n                            <GridItem p=\"10px\"  >\r\n                                  <SimpleGrid columns={2} spacing={5}>\r\n                                        <Box >\r\n                                            <Avatar\r\n                                                size=\"xl\"\r\n                                                name={userdata.user_name}\r\n                                                src={userdata.image}\r\n                                            />\r\n                                        </Box>\r\n                                        <Box >\r\n                                        <Heading size='lg'> Hello, {userdata.user_name} </Heading>\r\n                                        </Box>\r\n                                    </SimpleGrid>\r\n    \r\n                            </GridItem >\r\n                            \r\n                            <GridItem >\r\n                                       <Box \r\n                                        bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                                        borderRadius='md'\r\n                                       \r\n                                        color='white'\r\n                                       >\r\n                                           <SimpleGrid columns={5} spacing={5} pt='10px' pb='10px'>\r\n\r\n                                                <Box textAlign='center' >\r\n                                                    \r\n                                                    <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.all} </Heading>\r\n                                                    \r\n                                                    <Text  textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>All orders</Text>\r\n                                                </Box> \r\n                                                <Box textAlign='center'>\r\n                                                    <Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h4' size='lg'> {userdata.orders.await_pay} </Heading>\r\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Payment</Text>\r\n                                                </Box>\r\n                                                <Box textAlign='center'>\r\n                                                    <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.await_ship} </Heading>\r\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Shipment</Text>\r\n                                                </Box>\r\n                                                <Box textAlign='center'>\r\n                                                   <Heading as='h4' size='lg' textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}> {userdata.orders.await_del} </Heading>\r\n                                                    \r\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>Awaiting Delivery</Text>\r\n                                                </Box>\r\n                                                <Box textAlign='center'>\r\n                                                    <Heading textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"} as='h4' size='lg'> {userdata.orders.delivered} </Heading>\r\n                                                    <Text textColor={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>  Delivered</Text>\r\n                                                </Box>\r\n                                            </SimpleGrid> \r\n\r\n                                       </Box>\r\n                            </GridItem>\r\n                            \r\n                        </Grid>\r\n\r\n                    </Box>\r\n\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CustomerDashboard\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\AllOrders.js",["190"],"\r\nimport {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    useColorMode,\r\n    Flex,\r\n    Heading,\r\n    Divider,\r\n    HStack,Spacer\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, {useState} from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport OrderTiles from \"..//components/OrderTiles\";\r\n\r\n  \r\n\r\nconst AllOrders = () => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const [orders,setOrders] = useState([\r\n        {\r\n            orderID:1,\r\n            orderStatus:'preparing',\r\n            orderedDate:'21/01',\r\n            orderItemTitle:'Purple Rose Jewelry Water Transfer Tattoo',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:5,\r\n            orderAmount:35.47,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n        {\r\n            orderID:2,\r\n            orderStatus:'shipped',\r\n            orderedDate:'13/01',\r\n            \r\n            orderItemTitle:'Marvel batman',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:2,\r\n            orderAmount:37.24,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n        {\r\n            orderID:3,\r\n            \r\n            orderStatus:'preparing',\r\n            orderedDate:'15/01',\r\n            \r\n            orderItemTitle:'sonic toy',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:3,\r\n            orderAmount:24.56,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n        {\r\n            orderID:4,\r\n            \r\n            orderStatus:'preparing',\r\n            orderedDate:'15/01',\r\n            \r\n            orderItemTitle:'sonic toy',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:3,\r\n            orderAmount:24.56,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n        {\r\n            orderID:5,\r\n            \r\n            orderStatus:'preparing',\r\n            orderedDate:'15/01',\r\n            \r\n            orderItemTitle:'sonic toy',\r\n            orderItemImage:'https://images.unsplash.com/photo-1562962230-16e4623d36e6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80',\r\n            quantity:3,\r\n            orderAmount:24.56,\r\n            trackingNumber:'23232323232323'\r\n                  \r\n        },\r\n    ])\r\n\r\n\r\n    const countOrders = ()=>{\r\n        var prep = 0\r\n        var ship = 0\r\n        var canc = 0\r\n        var await_can = 0\r\n        var received = 0\r\n        for (var i=0;i<orders.length;i++){\r\n            if(orders[i].orderStatus==='preparing'){\r\n                prep+=1\r\n            }\r\n            else if (orders[i].orderStatus==='shipped'){\r\n                ship+=1\r\n            }\r\n            else if (orders[i].orderStatus==='cancelled'){\r\n                canc+=1\r\n            }\r\n            else if (orders[i].orderStatus==='await_cancel'){\r\n                await_can+=1\r\n            }\r\n            else if (orders[i].orderStatus==='received'){\r\n                received+=1\r\n            }\r\n        }\r\n        return {prep,ship,canc,await_can,received}\r\n    }\r\n\r\n    const getacount = countOrders()\r\n\r\n    const cancelOrder = (order_id)=>{\r\n            // console.log(order_id)\r\n            setOrders(orders.map(\r\n              (order)=>order.orderID===order_id?{...order,orderStatus:'await_cancel'}:order\r\n            ))\r\n            \r\n    }\r\n\r\n    const confirmOrder = (order_id)=>{\r\n        setOrders(orders.map(\r\n            (order)=>order.orderID===order_id?{...order,orderStatus:'received'}:order\r\n          ))\r\n    }\r\n\r\n\r\n    return (\r\n        <Box\r\n        \r\n        pt=\"100px\"\r\n        // pl={{ base: \"10px\", sm: \"100px\" }}\r\n        // pr={{ base: \"10px\", sm: \"100px\" }} \r\n        >\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid>\r\n\r\n                            <GridItem bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> All Orders </Heading> \r\n                                    </Box>\r\n                            \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                            <GridItem p='5'>\r\n                              <Grid templateColumns=\"repeat(5, 1fr)\">\r\n                                <GridItem colSpan={4}>\r\n\r\n                                    <OrderTiles orders={orders} cancelOrder={cancelOrder} confirmOrder={confirmOrder}/>\r\n\r\n                                </GridItem>\r\n                                <GridItem >\r\n                                    <Box bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} p='10px' mt='20px' color={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}>\r\n                                        <Heading size='sm' textAlign='center'>Summary</Heading>\r\n                                        <Divider mt='2' mb='2'/>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Preparing </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.prep}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Shipped </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.ship}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Await Cancel </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.await_can}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Cancelled </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.canc}</Box>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <Box ml='3'>Received </Box>\r\n                                            <Spacer />\r\n                                            <Box mr='3'>{getacount.received}</Box>\r\n                                        </HStack>\r\n                                    </Box>\r\n\r\n                                </GridItem>\r\n                              </Grid>\r\n                            </GridItem>\r\n                       \r\n                             \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AllOrders\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\CustomerAdress.js",["191","192"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,  \r\n    Flex,\r\n    Spacer ,\r\n    Button,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalBody,\r\n    ModalContent,\r\n    ModalOverlay,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    useToast,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport ShipAddressses from \"../components/ShipAddressses\";\r\nimport AddAddress from \"../components/AddAddress\"\r\n\r\nconst CustomerAddress = () => {\r\n\r\n    const [address,setAddress] = useState([\r\n        {\r\n            id:1,\r\n            name:'pasan madushan',\r\n            tp:'07704543436',\r\n            street:'1234',\r\n            city:'abc',\r\n            state:'def',\r\n            zip:'12121'   \r\n                       \r\n        },\r\n        {\r\n            id:2,\r\n            name:'vimukthi madushan',\r\n            tp:'077238404543436',\r\n            street:'sdfsdf',\r\n            city:'sdflndsfldsnfk',\r\n            state:'slfnsdflnsdf',\r\n            zip:'1203948234121'      \r\n                   \r\n        },\r\n        {\r\n            id:3,\r\n            name:'chalindu malshika',\r\n            tp:'077043543436',\r\n            street:'0324284',\r\n            city:'rathnapura',\r\n            state:'hdlfdfs',\r\n            zip:'139202121'     \r\n            \r\n             \r\n        },\r\n        {\r\n            id:4,\r\n            name:'chandima',\r\n            tp:'042342492',\r\n            street:'1234',\r\n            city:'jsdofjsdof',\r\n            state:'sdofjdsf',\r\n            zip:'12121'    \r\n                      \r\n        },\r\n    ])\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const toast = useToast()\r\n\r\n    //delete an addresss\r\n    const deleteAddress  = (id)=>{\r\n        setAddress(address.filter(\r\n            (address)=>address.id!==id\r\n        ))\r\n        toast({\r\n            position: \"bottom-right\",    \r\n            description: \"Shipping address deleted successfully\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          })\r\n    }\r\n\r\n    //add new address\r\n    const addAddress = (Address)=>{\r\n        const id = Math.floor(Math.random()*100)+1\r\n        const newAddress = {id,...Address}\r\n        setAddress([...address,newAddress]);\r\n\r\n    }\r\n\r\n    //update address\r\n    const updateAddress  = async(data)=>{\r\n        console.log('update address data ----------------')\r\n        console.log(data);\r\n        // setTasks(tasks.map(\r\n        //     (task)=>task.id===id?{...task,reminder:data.reminder}:task\r\n        //   ))\r\n        // await setAddress(address.map(\r\n        //     (address1)=>address1.id==data.id?{...address1,name:data.name}:address1\r\n        // ))\r\n        // // console.log(address[0])\r\n        \r\n   \r\n        setAddress(address.map(\r\n            (address1)=>(address1.id==data.id)?{...address1,data}:address1\r\n        ))\r\n        \r\n\r\n\r\n    }\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    \r\n\r\n    return (\r\n        <Box\r\n        \r\n        pt=\"100px\"\r\n        // pl={{ base: \"10px\", sm: \"100px\" }}\r\n        // pr={{ base: \"10px\", sm: \"100px\" }} \r\n        >\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\r\n\r\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> My Shipping Address </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <Box p=\"1\">\r\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\r\n                                            Add Shipping Address\r\n                                        </Button>\r\n                    \r\n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n                                            <ModalOverlay />\r\n                                                <ModalContent>\r\n                                                    <ModalHeader>Add New Shipping Address</ModalHeader>\r\n                                                    <ModalCloseButton />\r\n                                                    <ModalBody pb='5'>\r\n                                                    <AddAddress addAddress={addAddress} trigger={onClose}/>\r\n                                                     </ModalBody>\r\n                                                    \r\n                                                </ModalContent>\r\n                                            </Modal>\r\n\r\n                                    </Box>\r\n                                 \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                       \r\n                                <ShipAddressses addresses={address} deleteAddress={deleteAddress}  updateAddress={updateAddress}  />\r\n  \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CustomerAddress\r\n","F:\\DB_Project\\Front-end-react\\src\\pages\\ChangePersonalDet.js",["193","194"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    useColorMode,\r\n    Flex,\r\n    Heading,\r\n    useDisclosure,\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\r\nimport ChangePersonalDetails from \"../components/ChangePersonalDetForm\";\r\n\r\n\r\n\r\nconst ChangePersonalDet = () => { \r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const [personaldet,setPersonaldet] = useState(\r\n        {\r\n            id:1,\r\n            firstName:'pasan',\r\n            lastName:'madushan',\r\n            tp:'07704543436',                               \r\n        },)\r\n\r\n    //implement change password\r\n\r\n    const updateDetails = (data)=>{\r\n        setPersonaldet(data)\r\n        console.log(personaldet)\r\n    }\r\n\r\n\r\n        return (\r\n            <Box\r\n            \r\n            pt=\"100px\"\r\n            // pl={{ base: \"10px\", sm: \"100px\" }}\r\n            // pr={{ base: \"10px\", sm: \"100px\" }} \r\n            >\r\n                \r\n                <Grid\r\n            \r\n            templateColumns=\"repeat(5, 1fr)\"\r\n            templateRows=\"repeat(1, 1fr)\"\r\n            \r\n        >        \r\n            <GridItem  colSpan={1} rowSpan={2} >\r\n                <CustomerDashSideBar page=\"customeraddress\" />\r\n            </GridItem>\r\n        \r\n            <GridItem colSpan={4} >\r\n                <Box \r\n                    width=\"auto\"\r\n                    h=\"auto\"                   \r\n                    overflow=\"hidden\"                    \r\n                    pb=\"5px\"                      \r\n                    >\r\n                    \r\n                  </Box>\r\n\r\n                    <Grid templateColumns=\"repeat(3)\">\r\n\r\n                        <GridItem bg='cyan.900' p='10px' colSpan={3}>\r\n                            <Flex> \r\n                                <Box  p=\"3\">\r\n                                <Heading as='h3' size='md' color='white'> Change Account Details </Heading> \r\n                                </Box>\r\n                                                   \r\n                             </Flex>\r\n                        </GridItem>\r\n\r\n                        <GridItem colSpan={2}>\r\n                              <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'>         \r\n                            <ChangePersonalDetails data={personaldet} updateDetails={updateDetails}/>   \r\n                            </Box>\r\n                       </GridItem>\r\n\r\n                       <GridItem >\r\n                       <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  p='10' m='5' border='2px' borderColor='teal.600' borderRadius='15px'> \r\n                       <ChangePasswordForm />\r\n                       \r\n                       </Box>\r\n                       </GridItem>\r\n\r\n                    </Grid>\r\n            </GridItem>\r\n\r\n         \r\n        </Grid>\r\n\r\n    \r\n            </Box>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default ChangePersonalDet","F:\\DB_Project\\Front-end-react\\src\\pages\\CardDetails.js",["195"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,  \r\n    Flex,\r\n    Spacer ,\r\n    Button,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalBody,\r\n    ModalContent,\r\n    ModalOverlay,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    useToast,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport AddBankCard from \"../components/AddBankCard\";\r\nimport BankCards from \"../components/BankCards\";\r\nimport CustomerDashSideBar from \"../components/CustomerDashSideBar\";\r\n\r\nconst CardDetails = () => {\r\n\r\n    const [bankCards,setBankCards] = useState([\r\n        {\r\n            cardNumber:323446453434,\r\n            owner:'pasan madushan',\r\n            cvv:'123',\r\n            expDate:'10/12',\r\n                  \r\n        },\r\n        {\r\n            cardNumber:323446453435,\r\n            owner:'vimukthi madushan',\r\n            cvv:'123',\r\n            expDate:'10/12',\r\n                  \r\n        },\r\n        {\r\n            cardNumber:323446453436,\r\n            owner:'chalindu malshika',\r\n            cvv:'123',\r\n            expDate:'10/12',\r\n                  \r\n        },\r\n        {\r\n            cardNumber:323446453437,\r\n            owner:'chandima prabath',\r\n            cvv:'123',\r\n            expDate:'10/12',\r\n                  \r\n        },\r\n    ])\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const toast = useToast()\r\n\r\n    //delete a card\r\n    const deleteBankCard  = (cardNumber)=>{\r\n        setBankCards(bankCards.filter(\r\n            (bankCard)=>bankCard.cardNumber!==cardNumber\r\n        ))\r\n        toast({\r\n            position: \"bottom-right\",    \r\n            description: \"Bank Card deleted successfully\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          })\r\n    }\r\n\r\n    //add new card\r\n    const addBankCard = (CardDetails)=>{\r\n        setBankCards([...bankCards,CardDetails]);\r\n\r\n    }\r\n\r\n   \r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    \r\n\r\n    return (\r\n        <Box   pt=\"100px\">\r\n            \r\n            <Grid\r\n            \r\n                templateColumns=\"repeat(5, 1fr)\"\r\n                templateRows=\"repeat(1, 1fr)\"\r\n                \r\n            >        \r\n                <GridItem  colSpan={1} rowSpan={2} >\r\n                    <CustomerDashSideBar page=\"customeraddress\" />\r\n                </GridItem>\r\n            \r\n                <GridItem colSpan={4} >\r\n                    <Box \r\n                        width=\"auto\"\r\n                        h=\"auto\"                   \r\n                        overflow=\"hidden\"                    \r\n                        pb=\"5px\"                      \r\n                        >\r\n                        \r\n                      </Box>\r\n\r\n                        <Grid templateColumns=\"repeat(3, 1fr)\" >\r\n\r\n                            <GridItem colSpan={3} bg='cyan.900' p='10px'>\r\n                                <Flex> \r\n                                    <Box  p=\"3\">\r\n                                    <Heading as='h3' size='md' color='white'> Card & Bank Details </Heading> \r\n                                    </Box>\r\n                                    <Spacer />\r\n                                    <Box p=\"1\">\r\n                                        <Button onClick={onOpen} colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} border='2px' borderColor='cyan.50' size=\"md\">\r\n                                            Add New Payment Method\r\n                                        </Button>\r\n                    \r\n                                            <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n                                            <ModalOverlay />\r\n                                                <ModalContent>\r\n                                                    <ModalHeader>Add New Payment Method</ModalHeader>\r\n                                                    <ModalCloseButton />\r\n                                                    <ModalBody pb='5'>\r\n                                                    <AddBankCard addBankCard={addBankCard} trigger={onClose}/>\r\n                                                     </ModalBody>\r\n                                                    \r\n                                                </ModalContent>\r\n                                            </Modal>\r\n\r\n                                    </Box>\r\n                                 \r\n                                 </Flex>\r\n                            </GridItem>\r\n\r\n                                <BankCards bankcards={bankCards} deleteBankCard={deleteBankCard} />\r\n                                \r\n                        </Grid>\r\n                        \r\n\r\n                </GridItem>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CardDetails\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ReviewCountPreview.js",["196","197","198","199","200","201","202","203"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n  VStack,\r\n  Progress,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction ReviewCountPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  const total_reviews = props.feedbacks.length;\r\n\r\n  var s5 = 0;\r\n  var s4 = 0;\r\n  var s3 = 0;\r\n  var s2 = 0;\r\n  var s1 = 0;\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rating === 5) {\r\n      s5 = s5 + 1;\r\n    } else if (props.feedbacks[i].rating === 4) {\r\n      s4 = s4 + 1;\r\n    } else if (props.feedbacks[i].rating === 3) {\r\n      s3 = s3 + 1;\r\n    } else if (props.feedbacks[i].rating === 2) {\r\n      s2 = s2 + 1;\r\n    } else if (props.feedbacks[i].rating === 1) {\r\n      s1 = s1 + 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack w=\"50vh\" h=\"50vh\" spacing=\"1px\" ml='20px'>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          5 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s5} reviews\r\n        </Text>\r\n        <Progress value={(s5 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          4 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s4} reviews\r\n        </Text>\r\n        <Progress value={(s4 / total_reviews) * 100} />\r\n      </Box>\r\n\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          3 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s3} reviews\r\n        </Text>\r\n        <Progress value={(s3 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          2 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s2} reviews\r\n        </Text>\r\n        <Progress value={(s2 / total_reviews) * 100} />\r\n      </Box>\r\n      <Box w=\"300px\" pb='5px'>\r\n        <Text fontSize='lg'>\r\n          1 <StarIcon color=\"cyan.500\" />\r\n        </Text>\r\n        <Text fontSize='xs'>\r\n            {s1} reviews\r\n        </Text>\r\n        <Progress value={(s1 / total_reviews) * 100} />\r\n      </Box>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default ReviewCountPreview;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\CategorizedReviewPreview.js",["204"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Box,\r\n  useColorMode,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Replys from \"./Replys\";\r\n\r\nfunction CategorizedReviewPreview(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  var reviews = [];\r\n\r\n  var stars = (rating) => {\r\n    return Array(5)\r\n      .fill(\"\")\r\n      .map((_, j) => (\r\n        <StarIcon key={j} color={j < rating ? \"cyan.500\" : \"cyan.300\"} />\r\n      ));\r\n  };\r\n\r\n  for (var i = 0; i < props.feedbacks.length; i++) {\r\n    if (props.feedbacks[i].rating === props.rating || props.rating === 'all') {\r\n      reviews.push(\r\n        <Box mb='10px'>\r\n          <HStack>\r\n            <Avatar\r\n              name={props.feedbacks[i].customer_name}\r\n              src={props.feedbacks[i].customer_dp}\r\n            />\r\n            <Box\r\n              w=\"100%\"\r\n              borderWidth=\"2px\"\r\n              borderRadius=\"lg\"\r\n              p=\"10px\"\r\n              bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.500\"}\r\n            >\r\n              <Heading as=\"h5\" size=\"sm\">\r\n                {props.feedbacks[i].customer_name}\r\n              </Heading>\r\n              <Text>{props.feedbacks[i].comment}</Text>\r\n              <Box d=\"flex\" mt=\"2\" ml=\"2px\" alignItems=\"center\">\r\n                {stars(props.feedbacks[i].rating)}\r\n                <Box as=\"span\" ml=\"2\" fontSize=\"sm\">\r\n                  {props.feedbacks[i].rating}/5\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </HStack>\r\n          <Replys replys={props.feedbacks[i].reply} />\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (reviews.length === 0) {\r\n    reviews.push(<Text>No reviews</Text>);\r\n  }\r\n\r\n  return <>{reviews}</>;\r\n}\r\n\r\nexport default CategorizedReviewPreview;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\SearchBar.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ProductCard.js",["205","206","207","208","209","210","211","212"],"import { StarIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  AvatarBadge,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Image,\r\n  Badge,\r\n  Img,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ProductCard(props) {\r\n  return (\r\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\r\n      <Img src={props.imageUrl} alt={props.imageAlt} w='230px' h='250px' />\r\n\r\n      <Box p=\"6\">\r\n      <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme='yellow'\r\n            variant=\"outline\" \r\n            fontSize='9px'\r\n          >\r\n            {props.category}\r\n          </Badge>\r\n        <Box fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" fontSize='xl' isTruncated>\r\n          {props.title}\r\n        </Box>\r\n       \r\n        <Box>\r\n          <Text color=\"gray.600\" fontSize=\"3xl\">\r\n            Rs. {props.price}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box d=\"flex\" alignItems=\"baseline\" mt=\"1\">\r\n          <Badge\r\n            borderRadius=\"full\"\r\n            px=\"2\"\r\n            colorScheme={props.status === \"Available\" ? \"green\" : \"red\"}\r\n          >\r\n            {props.status}\r\n          </Badge>\r\n          <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n            ml=\"2\"\r\n          >\r\n            {props.orders} Orders\r\n          </Box>\r\n        </Box>\r\n\r\n       \r\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n          {Array(5)\r\n            .fill(\"\")\r\n            .map((_, i) => (\r\n              <StarIcon\r\n                key={i}\r\n                color={i < props.rating ? \"cyan.800\" : \"gray.300\"}\r\n              />\r\n            ))}\r\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n            {props.reviews} reviews\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\CustomerDashSideBar.js",["213","214","215","216","217","218"],"import {\r\n    Box,\r\n    Grid,\r\n    GridItem, \r\n    Heading,\r\n    Text,\r\n    Divider,\r\n    Link,\r\n    Button,\r\n    useColorMode\r\n  } from \"@chakra-ui/react\";\r\n\r\n\r\n\r\nconst CustomerDashSideBar = ({page}) => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const sidebarButton = {\r\n        width:'80%',   \r\n        marginTop:'7px',\r\n        marginBottom:'7px',\r\n        marginLeft:'10%',\r\n        marginRight:'10%'\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            width=\"auto\"\r\n            height={window.innerHeight-100}\r\n            // height=\"100%\"\r\n            overflow=\"hidden\"\r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            pt='5'  \r\n           \r\n                    \r\n        >                   \r\n                <Link href='/customerdashboard'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Dashboard </Button> </Link>     \r\n          \r\n                <Link href='/allorders'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> My Orders  </Button> </Link>     \r\n         \r\n                <Link href='/carddetails'> <Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Card & Bank Details  </Button></Link>     \r\n            \r\n                <Link href='/shippingaddress'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}> Shipping Address </Button></Link>     \r\n         \r\n                <Link href='/changepersonaldet'><Button colorScheme=\"teal\" bg={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"} size=\"md\" style={sidebarButton}>Change Account Details </Button></Link>     \r\n           \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CustomerDashSideBar\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\AddAddress.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\OrderTiles.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddressses.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\ChangePersonalDetForm.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\AddBankCard.js",["219"],"import { useState } from 'react';\r\nimport{\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    useToast\r\n\r\n} from \"@chakra-ui/react\";\r\n\r\nconst AddBankCard = ({addBankCard,trigger}) => {\r\n    const [cardNumber,setCardNumber] = useState('')\r\n    const [owner,setOwner] = useState('')\r\n    const [cvv,setCvv] = useState('')\r\n    const [expDate,setExpDate] = useState('')\r\n    \r\n\r\n    const toast = useToast()\r\n\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!cardNumber || !owner || !cvv || !expDate){\r\n            alert('Empty Field')\r\n            return\r\n        }\r\n\r\n        if(cardNumber.toString().length!==12){\r\n            alert('Invalid Card Number')\r\n            return\r\n        }\r\n    \r\n        var givenDate = new Date(expDate);\r\n        var today = new Date();\r\n        if (givenDate.getFullYear() < today.getFullYear()) {\r\n            alert('card is expired')\r\n            return\r\n        }\r\n        else if (givenDate.getFullYear() == today.getFullYear()){\r\n            if(givenDate.getMonth() < today.getMonth()){\r\n                alert('card is expired')\r\n                return\r\n            }\r\n        }\r\n    \r\n        \r\n        addBankCard({cardNumber,owner,cvv,expDate})\r\n\r\n        setCardNumber('')\r\n        setOwner('')\r\n        setCvv('')\r\n        setExpDate('')\r\n        \r\n        toast({\r\n            position: \"bottom-right\",    \r\n            description: \"New payment method added successfully\",\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          })\r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={onSubmit} >\r\n            <FormControl>\r\n                <FormLabel>Card Number</FormLabel>\r\n                <Input type=\"number\" placeholder='Card Number' value={cardNumber} onChange={(e)=>setCardNumber(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Owner</FormLabel>\r\n                <Input type=\"text\" placeholder='Owner' value={owner} onChange={(e)=>setOwner(e.target.value)}  />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>CVV</FormLabel>\r\n                <Input type=\"number\" placeholder='CVV' value={cvv} onChange={(e)=>setCvv(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel>Exp Date</FormLabel>\r\n                <Input type=\"month\" placeholder='Exp Date' value={expDate} onChange={(e)=>setExpDate(e.target.value)} />\r\n            </FormControl>\r\n            <Input mt='5' mb='5'  type=\"submit\" value='Save Card Details' className='btn btn-block' bg=\"teal.400\" color='white' onClick={trigger} />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddBankCard\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ChangePasswordForm.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\BankCards.js",[],"F:\\DB_Project\\Front-end-react\\src\\components\\Replys.js",["220"],"import {\r\n  Box,\r\n  Text,\r\n  useColorMode,\r\n  Avatar,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nfunction Replys(props) {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const dp = \"\";\r\n\r\n  var replys = [];\r\n  for (var i = 0; i < props.replys.length; i++) {\r\n    replys.push(\r\n      <HStack spacing=\"10px\" w=\"100%\">\r\n        <Avatar name=\"Electrica\" src={dp} size=\"sm\" />\r\n        <Box\r\n          w=\"100%\"\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          p=\"10px\"\r\n          mt=\"20px\"\r\n          bg={colorMode === \"light\" ? \"gray.50\" : \"gray.500\"}\r\n        >\r\n        <Heading  as=\"h5\" size=\"sm\">Electrica</Heading>\r\n          <Text>{props.replys[i]}</Text>\r\n        </Box>\r\n      </HStack>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box ml=\"100px\" mt='10px'>\r\n      <VStack w=\"100%\">{replys}</VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Replys;\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\OrderTile.js",["221","222","223"],"\r\nimport {\r\n    Box,\r\n    Grid,\r\n    GridItem,\r\n    useColorMode,\r\n    SimpleGrid,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    HStack,\r\n    Badge,\r\n    Button,\r\n    VStack,\r\n    Link,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverArrow,\r\n    PopoverBody,\r\n    PopoverCloseButton,\r\n    PopoverFooter,\r\n    ButtonGroup\r\n  } from \"@chakra-ui/react\";\r\n\r\nconst OrderTile = ({order,cancelOrder,confirmOrder}) => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n// try with normal functions\r\n    const StatusBadge = ({status})=>{\r\n        if(status==='shipped'){\r\n            return (<Badge colorScheme=\"green\">Shipped</Badge>)\r\n        }\r\n        else if (status==='preparing'){\r\n            return (<Badge colorScheme=\"yellow\">Preparing</Badge>)\r\n        }\r\n        else if (status==='cancelled'){\r\n            return (<Badge colorScheme=\"red\">Cancelled</Badge>)\r\n        }\r\n        else if (status==='received'){\r\n            return (<Badge colorScheme=\"gray.100\">received</Badge>)\r\n        }\r\n        else if (status==='await_cancel'){\r\n            return  (<Badge colorScheme=\"yellow\">Await Cancel</Badge>)\r\n        }\r\n        else{\r\n            return <div></div>\r\n        }\r\n    }    \r\n\r\n    const OrderActions = ({status})=>{\r\n        if(status=='shipped'){\r\n            return (<VStack>\r\n                <Link href={\"https://parcelsapp.com/en/tracking/\"+order.trackingNumber} isExternal><Button colorScheme='teal' size='xs'>Track Order</Button></Link>\r\n                <Button colorScheme='teal' size='xs' onClick={()=>{confirmOrder(order.orderID)}}>Confirm Received</Button>\r\n            </VStack>)\r\n        }\r\n        else if (status=='preparing'){\r\n            return (\r\n            <Box>\r\n                \r\n                <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme='teal' size='xs'  >Cancel Order</Button>\r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader textAlign='left' fontWeight=\"semibold\">Cancel the order</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody textAlign='center'>\r\n                            Are you really want to cancel the order\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{cancelOrder(order.orderID)}}>Cancel Order</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                  \r\n                </Box>\r\n            )\r\n        }\r\n        else{\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}  m='5' color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}>\r\n            <Grid>\r\n                <GridItem p='2' bg={colorMode === \"light\" ? \"teal.500\" : \"teal.50\"} color={colorMode === \"light\" ? \"teal.50\" : \"teal.500\"} >\r\n                    <SimpleGrid columns={3} textAlign='center'>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order ID</Heading>\r\n                            <Text>{order.orderID}</Text>\r\n                        </Box>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order Date</Heading>\r\n                            <Text>{order.orderedDate}</Text>\r\n                        </Box>\r\n                        <Box>\r\n                            <Heading as='h6' size='xs'>Order Amount</Heading>\r\n                            <Text>{order.orderAmount}</Text>\r\n                        </Box>\r\n                    </SimpleGrid>\r\n\r\n                </GridItem>\r\n                <GridItem p='2'  color={colorMode === \"light\" ? \"teal.800\" : \"teal.50\"} >\r\n\r\n                    <SimpleGrid columns={3} p='2'>\r\n                        <HStack>\r\n                            <Image\r\n                                boxSize=\"80px\"\r\n                                objectFit=\"cover\"\r\n                                src={order.orderItemImage}\r\n                                alt={order.orderItemImage}\r\n                            />\r\n                            <Heading as='h6' size='xs'>{order.orderItemTitle}</Heading>\r\n                        </HStack>\r\n                        <Box textAlign='center'>\r\n                           <StatusBadge  status={order.orderStatus}/>\r\n                        </Box>\r\n                        <Box textAlign='center'>\r\n                            {/* {order.status==='shipped'?(\r\n                       <Box>    {console.log(\"shipped\")}\r\n             <Button colorScheme='teal' size='xs'>Track Order</Button>\r\n                <Button colorScheme='teal' size='xs'>Confirm Received</Button>\r\n                                </Box>\r\n            ):(<Box><Button colorScheme='teal' size='xs'  onClick={()=>{cancelOrder(order.orderID)}}>Cancel Order</Button></Box>)} */}\r\n                             <OrderActions status={order.orderStatus}/> \r\n                           \r\n                        </Box>\r\n                    </SimpleGrid>\r\n\r\n                </GridItem>\r\n             \r\n\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default OrderTile\r\n","F:\\DB_Project\\Front-end-react\\src\\components\\ShipAddress.js",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"import {React, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    GridItem,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useColorMode,\r\n    useDisclosure,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    ButtonGroup,\r\n    FormControl,\r\n    FormLabel,\r\n    Input\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\r\n\r\n\r\nconst ShipAddress = ({address,deleteAddress,updateAddress}) => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const [data, setData] = useState({\r\n        id: address.id,\r\n        name: address.name,\r\n        tp: address.tp,\r\n        street: address.street,\r\n        city: address.city,\r\n        state: address.state,\r\n        zip: address.zip,\r\n    })\r\n    \r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        // console.log('---------handlesubmit data--------')\r\n        // console.log(data)\r\n        updateAddress(data)\r\n        \r\n        // updateAddress(address.id)\r\n    }\r\n\r\n    const handleChange =  (event) => {\r\n        var value = event.target.value;\r\n        var name = event.target.name;\r\n\r\n        setData({ ...data, [event.target.name]: value })\r\n        // console.log(data)\r\n    };\r\n\r\n\r\n    return(\r\n        <GridItem>\r\n        <Box  \r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            borderRadius='md'\r\n            border='1px'\r\n            borderColor='cyan.600'\r\n            p='6'\r\n            m='4'\r\n            pb='3'\r\n           \r\n            >\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                    <ImUser />\r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"lg\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        { address.name }\r\n                    </Box>\r\n                </Box> \r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                \r\n                    <ImPhone color='cyan.600'/>\r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        { address.tp }\r\n                    </Box>\r\n                </Box> \r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" mt='2' mb='5'>\r\n                \r\n                    <ImLocation m='3'/>\r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        <Box>{ address.street }</Box>\r\n                        <Box>{ address.city }</Box>\r\n                        <Box>{ address.state }</Box>\r\n                        <Box>{ address.zip }</Box>\r\n                    </Box>\r\n                </Box> \r\n               \r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n\r\n                    {/* Delete Address */}\r\n                \r\n                    <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader fontWeight=\"semibold\">Delete Shipping Address</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody>\r\n                            Are you sure you want to delete the shipping address?\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteAddress(address.id)}}>Delete</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                   \r\n                </Box>\r\n\r\n        </Box>\r\n        </GridItem>\r\n    )\r\n}\r\n\r\nexport default ShipAddress\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {/* {/* Edit Address \r\n\r\n                     <Button colorScheme=\"teal\" size=\"xs\" mr='2' onClick={onOpen} >\r\n                        Edit\r\n                    </Button> \r\n                    {/* Edit modal */}\r\n                    // <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n                    //     <ModalOverlay />\r\n                    //     <ModalContent>\r\n                    //         <ModalHeader>Edit shipping address</ModalHeader>\r\n                    //             <ModalCloseButton />\r\n                           \r\n                        // <form onSubmit={handleSubmit}>\r\n                        //     <ModalBody>\r\n                            \r\n                        //     <FormControl id=\"name\" > */}\r\n                        //         <FormLabel>Name</FormLabel>\r\n                                \r\n                        //         <Input   \r\n                        //         placeholder='Name'       \r\n                        //         value={data.name}\r\n                        //         name='name'\r\n                        //         onChange={(event) => handleChange(event)}\r\n                        //         />\r\n                        //     </FormControl>\r\n\r\n                        //     <FormControl id=\"tp\" >\r\n                        //         <FormLabel>Telephone</FormLabel>\r\n                        //         <Input \r\n                        //         placeholder=\"Telephone\" \r\n                            //     value={data.tp}\r\n                            //     name='tp'\r\n                            //     onChange={(event) => handleChange(event)}  />\r\n                            // </FormControl>\r\n\r\n                            // <FormControl id=\"street\" >\r\n                            //     <FormLabel>Street</FormLabel>\r\n                            //     <Input \r\n                            //     placeholder=\"street\" \r\n                            //     value={data.street}\r\n                            //     name='street'\r\n                            //     onChange={(event) => handleChange(event)} />\r\n                            // </FormControl>\r\n                            // <FormControl id=\"city\" >\r\n                            //     <FormLabel>City</FormLabel>\r\n                            //     <Input placeholder=\"city\" \r\n                            //     value={data.city}\r\n                            //     name='city'\r\n                            //     onChange={(event) => handleChange(event)} />\r\n                            // </FormControl>\r\n                            // <FormControl id=\"state\" >\r\n                            //     <FormLabel>State</FormLabel>\r\n                    //             <Input placeholder=\"state\" \r\n                    //             value={data.state}\r\n                    //             name='state'\r\n                    //             onChange={(event) => handleChange(event)}\r\n                    //             />\r\n                    //         </FormControl>\r\n                    //         <FormControl id=\"zip\" >\r\n                    //             <FormLabel>Zip</FormLabel>\r\n                    //             <Input placeholder=\"zip\" \r\n                    //             value={data.zip}\r\n                    //             name='zip'\r\n                    //             onChange={(event) => handleChange(event)}\r\n                    //             />\r\n                    //         </FormControl>\r\n                           \r\n                               \r\n                    //         </ModalBody>\r\n                    //         <ModalFooter>\r\n                    //         <Input mt='2' mb='2'  type=\"submit\" value='Update' className='btn btn-block' bg=\"teal.400\" color='white' onClick={onClose} />\r\n                    //             {/* <Button colorScheme=\"green\"  onClick={trigger} >Update</Button>                               */}\r\n                    //         </ModalFooter>\r\n                    //     </form>\r\n                    //     </ModalContent>\r\n                    // </Modal> */}\r\n\r\n    ","F:\\DB_Project\\Front-end-react\\src\\components\\BankCard.js",["242","243","244","245","246","247","248","249","250"],"import {React, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    GridItem,\r\n    useColorMode,\r\n    useDisclosure,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    ButtonGroup,\r\n    Heading,\r\n    HStack,\r\n    Spacer,\r\n    Image\r\n  } from \"@chakra-ui/react\";\r\n\r\nimport { ImUser,ImPhone, ImLocation } from \"react-icons/im\";\r\n\r\n\r\nconst BankCard = ({bankcard,deleteBankCard}) => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    \r\n\r\n    const [data, setData] = useState({\r\n        cardNumber:bankcard.card_number,\r\n        owner:bankcard.owner,\r\n        cvv:bankcard.cvv,\r\n        expDate:bankcard.expDate\r\n    })\r\n    \r\n\r\n    const handleChange =  (event) => {\r\n        var value = event.target.value;\r\n        var name = event.target.name;\r\n\r\n        setData({ ...data, [event.target.name]: value })\r\n        // console.log(data)\r\n    };\r\n\r\n\r\n    return(\r\n        <GridItem>\r\n        <Box  \r\n            bg={colorMode === \"light\" ? \"cyan.50\" : \"cyan.900\"}\r\n            borderRadius='md'\r\n            border='1px'\r\n            borderColor='cyan.600'\r\n            p='6'\r\n            m='4'\r\n            pb='3'\r\n           \r\n            >\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                    \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"lg\"       \r\n                        ml=\"2\"\r\n                    >\r\n                       <Heading size='lg'> x x x x  x x x x {bankcard.cardNumber.toString().substr(8,13)} </Heading>\r\n                    </Box>\r\n                </Box> \r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                \r\n                   \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                       \r\n                    >\r\n                        { bankcard.owner }\r\n                    </Box>\r\n                </Box> \r\n               \r\n               <HStack mb='4'>\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                \r\n                    <Box\r\n                        color={colorMode === \"light\" ? \"cyan.900\" : \"cyan.50\"}\r\n                        letterSpacing=\"wide\"\r\n                        fontSize=\"md\"       \r\n                        ml=\"2\"\r\n                    >\r\n                        {bankcard.expDate}\r\n                    </Box>\r\n                </Box> \r\n                <Spacer />\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n                <Image\r\n                    width='70px'\r\n                    src=\"../visa.png\"\r\n                    />\r\n                </Box> \r\n                </HStack>\r\n\r\n                <Box d=\"flex\" alignItems=\"baseline\" m='2'>\r\n\r\n                 \r\n                    {/* Delete Address */}\r\n                \r\n                    <Popover>\r\n                        <PopoverTrigger>\r\n                        <Button colorScheme=\"red\" size=\"xs\"  > Delete</Button> \r\n                        </PopoverTrigger>\r\n                        <PopoverContent>\r\n                            <PopoverHeader fontWeight=\"semibold\">Delete Card Details</PopoverHeader>\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverBody>\r\n                            Are you sure you want to delete card details?\r\n                            </PopoverBody>\r\n                            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button colorScheme=\"red\" onClick={()=>{deleteBankCard(bankcard.cardNumber)}}>Delete</Button>\r\n                                </ButtonGroup>\r\n                            </PopoverFooter>\r\n                            </PopoverContent>\r\n                            </Popover>                   \r\n                </Box>\r\n\r\n        </Box>\r\n        </GridItem>\r\n    )\r\n}\r\n\r\nexport default BankCard\r\n\r\n\r\n\r\n    ",{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":27,"column":9,"nodeType":"257","messageId":"258","endLine":27,"endColumn":11},{"ruleId":"255","severity":1,"message":"259","line":28,"column":11,"nodeType":"257","messageId":"258","endLine":28,"endColumn":20},{"ruleId":"255","severity":1,"message":"260","line":28,"column":22,"nodeType":"257","messageId":"258","endLine":28,"endColumn":37},{"ruleId":"255","severity":1,"message":"261","line":40,"column":16,"nodeType":"257","messageId":"258","endLine":40,"endColumn":23},{"ruleId":"255","severity":1,"message":"262","line":24,"column":3,"nodeType":"257","messageId":"258","endLine":24,"endColumn":9},{"ruleId":"255","severity":1,"message":"263","line":30,"column":10,"nodeType":"257","messageId":"258","endLine":30,"endColumn":20},{"ruleId":"255","severity":1,"message":"260","line":38,"column":22,"nodeType":"257","messageId":"258","endLine":38,"endColumn":37},{"ruleId":"255","severity":1,"message":"264","line":40,"column":21,"nodeType":"257","messageId":"258","endLine":40,"endColumn":33},{"ruleId":"255","severity":1,"message":"265","line":76,"column":27,"nodeType":"257","messageId":"258","endLine":76,"endColumn":45},{"ruleId":"255","severity":1,"message":"266","line":100,"column":16,"nodeType":"257","messageId":"258","endLine":100,"endColumn":23},{"ruleId":"255","severity":1,"message":"267","line":133,"column":9,"nodeType":"257","messageId":"258","endLine":133,"endColumn":20},{"ruleId":"255","severity":1,"message":"268","line":9,"column":3,"nodeType":"257","messageId":"258","endLine":9,"endColumn":15},{"ruleId":"255","severity":1,"message":"269","line":12,"column":18,"nodeType":"257","messageId":"258","endLine":12,"endColumn":29},{"ruleId":"255","severity":1,"message":"270","line":13,"column":17,"nodeType":"257","messageId":"258","endLine":13,"endColumn":23},{"ruleId":"255","severity":1,"message":"262","line":13,"column":25,"nodeType":"257","messageId":"258","endLine":13,"endColumn":31},{"ruleId":"255","severity":1,"message":"271","line":18,"column":3,"nodeType":"257","messageId":"258","endLine":18,"endColumn":10},{"ruleId":"255","severity":1,"message":"272","line":19,"column":3,"nodeType":"257","messageId":"258","endLine":19,"endColumn":12},{"ruleId":"255","severity":1,"message":"273","line":23,"column":8,"nodeType":"257","messageId":"258","endLine":23,"endColumn":32},{"ruleId":"255","severity":1,"message":"274","line":24,"column":8,"nodeType":"257","messageId":"258","endLine":24,"endColumn":26},{"ruleId":"255","severity":1,"message":"256","line":28,"column":9,"nodeType":"257","messageId":"258","endLine":28,"endColumn":11},{"ruleId":"255","severity":1,"message":"261","line":32,"column":16,"nodeType":"257","messageId":"258","endLine":32,"endColumn":23},{"ruleId":"255","severity":1,"message":"275","line":17,"column":22,"nodeType":"257","messageId":"258","endLine":17,"endColumn":35},{"ruleId":"255","severity":1,"message":"260","line":26,"column":22,"nodeType":"257","messageId":"258","endLine":26,"endColumn":37},{"ruleId":"255","severity":1,"message":"276","line":28,"column":34,"nodeType":"257","messageId":"258","endLine":28,"endColumn":59},{"ruleId":"255","severity":1,"message":"277","line":3,"column":5,"nodeType":"257","messageId":"258","endLine":3,"endColumn":11},{"ruleId":"255","severity":1,"message":"271","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":17},{"ruleId":"255","severity":1,"message":"272","line":11,"column":19,"nodeType":"257","messageId":"258","endLine":11,"endColumn":28},{"ruleId":"255","severity":1,"message":"278","line":11,"column":48,"nodeType":"257","messageId":"258","endLine":11,"endColumn":56},{"ruleId":"255","severity":1,"message":"269","line":13,"column":18,"nodeType":"257","messageId":"258","endLine":13,"endColumn":29},{"ruleId":"255","severity":1,"message":"279","line":17,"column":5,"nodeType":"257","messageId":"258","endLine":17,"endColumn":21},{"ruleId":"255","severity":1,"message":"280","line":18,"column":5,"nodeType":"257","messageId":"258","endLine":18,"endColumn":19},{"ruleId":"255","severity":1,"message":"281","line":20,"column":17,"nodeType":"257","messageId":"258","endLine":20,"endColumn":25},{"ruleId":"255","severity":1,"message":"282","line":21,"column":18,"nodeType":"257","messageId":"258","endLine":21,"endColumn":29},{"ruleId":"255","severity":1,"message":"283","line":21,"column":31,"nodeType":"257","messageId":"258","endLine":21,"endColumn":42},{"ruleId":"255","severity":1,"message":"284","line":22,"column":8,"nodeType":"257","messageId":"258","endLine":22,"endColumn":17},{"ruleId":"255","severity":1,"message":"285","line":10,"column":5,"nodeType":"257","messageId":"258","endLine":10,"endColumn":9},{"ruleId":"255","severity":1,"message":"260","line":15,"column":24,"nodeType":"257","messageId":"258","endLine":15,"endColumn":39},{"ruleId":"255","severity":1,"message":"286","line":6,"column":5,"nodeType":"257","messageId":"258","endLine":6,"endColumn":12},{"ruleId":"255","severity":1,"message":"287","line":14,"column":10,"nodeType":"257","messageId":"258","endLine":14,"endColumn":19},{"ruleId":"255","severity":1,"message":"288","line":15,"column":8,"nodeType":"257","messageId":"258","endLine":15,"endColumn":14},{"ruleId":"255","severity":1,"message":"289","line":21,"column":22,"nodeType":"257","messageId":"258","endLine":21,"endColumn":33},{"ruleId":"255","severity":1,"message":"260","line":36,"column":24,"nodeType":"257","messageId":"258","endLine":36,"endColumn":39},{"ruleId":"255","severity":1,"message":"260","line":21,"column":24,"nodeType":"257","messageId":"258","endLine":21,"endColumn":39},{"ruleId":"290","severity":1,"message":"291","line":110,"column":37,"nodeType":"292","messageId":"293","endLine":110,"endColumn":39},{"ruleId":"255","severity":1,"message":"260","line":117,"column":24,"nodeType":"257","messageId":"258","endLine":117,"endColumn":39},{"ruleId":"255","severity":1,"message":"294","line":8,"column":5,"nodeType":"257","messageId":"258","endLine":8,"endColumn":18},{"ruleId":"255","severity":1,"message":"260","line":20,"column":24,"nodeType":"257","messageId":"258","endLine":20,"endColumn":39},{"ruleId":"255","severity":1,"message":"260","line":82,"column":24,"nodeType":"257","messageId":"258","endLine":82,"endColumn":39},{"ruleId":"255","severity":1,"message":"270","line":3,"column":3,"nodeType":"257","messageId":"258","endLine":3,"endColumn":9},{"ruleId":"255","severity":1,"message":"295","line":5,"column":3,"nodeType":"257","messageId":"258","endLine":5,"endColumn":9},{"ruleId":"255","severity":1,"message":"296","line":8,"column":3,"nodeType":"257","messageId":"258","endLine":8,"endColumn":10},{"ruleId":"255","severity":1,"message":"262","line":9,"column":3,"nodeType":"257","messageId":"258","endLine":9,"endColumn":9},{"ruleId":"255","severity":1,"message":"297","line":14,"column":8,"nodeType":"257","messageId":"258","endLine":14,"endColumn":14},{"ruleId":"255","severity":1,"message":"259","line":17,"column":11,"nodeType":"257","messageId":"258","endLine":17,"endColumn":20},{"ruleId":"255","severity":1,"message":"260","line":17,"column":22,"nodeType":"257","messageId":"258","endLine":17,"endColumn":37},{"ruleId":"255","severity":1,"message":"298","line":18,"column":7,"nodeType":"257","messageId":"258","endLine":18,"endColumn":14},{"ruleId":"255","severity":1,"message":"260","line":14,"column":22,"nodeType":"257","messageId":"258","endLine":14,"endColumn":37},{"ruleId":"255","severity":1,"message":"268","line":5,"column":3,"nodeType":"257","messageId":"258","endLine":5,"endColumn":15},{"ruleId":"255","severity":1,"message":"295","line":6,"column":3,"nodeType":"257","messageId":"258","endLine":6,"endColumn":9},{"ruleId":"255","severity":1,"message":"282","line":7,"column":3,"nodeType":"257","messageId":"258","endLine":7,"endColumn":14},{"ruleId":"255","severity":1,"message":"270","line":8,"column":3,"nodeType":"257","messageId":"258","endLine":8,"endColumn":9},{"ruleId":"255","severity":1,"message":"262","line":9,"column":3,"nodeType":"257","messageId":"258","endLine":9,"endColumn":9},{"ruleId":"255","severity":1,"message":"296","line":10,"column":3,"nodeType":"257","messageId":"258","endLine":10,"endColumn":10},{"ruleId":"255","severity":1,"message":"299","line":11,"column":3,"nodeType":"257","messageId":"258","endLine":11,"endColumn":8},{"ruleId":"255","severity":1,"message":"281","line":15,"column":17,"nodeType":"257","messageId":"258","endLine":15,"endColumn":25},{"ruleId":"255","severity":1,"message":"300","line":3,"column":5,"nodeType":"257","messageId":"258","endLine":3,"endColumn":9},{"ruleId":"255","severity":1,"message":"301","line":4,"column":5,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"255","severity":1,"message":"296","line":5,"column":5,"nodeType":"257","messageId":"258","endLine":5,"endColumn":12},{"ruleId":"255","severity":1,"message":"285","line":6,"column":5,"nodeType":"257","messageId":"258","endLine":6,"endColumn":9},{"ruleId":"255","severity":1,"message":"286","line":7,"column":5,"nodeType":"257","messageId":"258","endLine":7,"endColumn":12},{"ruleId":"255","severity":1,"message":"260","line":17,"column":24,"nodeType":"257","messageId":"258","endLine":17,"endColumn":39},{"ruleId":"290","severity":1,"message":"291","line":39,"column":42,"nodeType":"292","messageId":"293","endLine":39,"endColumn":44},{"ruleId":"255","severity":1,"message":"260","line":13,"column":22,"nodeType":"257","messageId":"258","endLine":13,"endColumn":37},{"ruleId":"255","severity":1,"message":"260","line":29,"column":24,"nodeType":"257","messageId":"258","endLine":29,"endColumn":39},{"ruleId":"290","severity":1,"message":"291","line":53,"column":18,"nodeType":"292","messageId":"293","endLine":53,"endColumn":20},{"ruleId":"290","severity":1,"message":"291","line":59,"column":24,"nodeType":"292","messageId":"293","endLine":59,"endColumn":26},{"ruleId":"255","severity":1,"message":"302","line":6,"column":5,"nodeType":"257","messageId":"258","endLine":6,"endColumn":10},{"ruleId":"255","severity":1,"message":"303","line":7,"column":5,"nodeType":"257","messageId":"258","endLine":7,"endColumn":17},{"ruleId":"255","severity":1,"message":"304","line":8,"column":5,"nodeType":"257","messageId":"258","endLine":8,"endColumn":17},{"ruleId":"255","severity":1,"message":"305","line":9,"column":5,"nodeType":"257","messageId":"258","endLine":9,"endColumn":16},{"ruleId":"255","severity":1,"message":"306","line":10,"column":5,"nodeType":"257","messageId":"258","endLine":10,"endColumn":16},{"ruleId":"255","severity":1,"message":"307","line":11,"column":5,"nodeType":"257","messageId":"258","endLine":11,"endColumn":14},{"ruleId":"255","severity":1,"message":"308","line":12,"column":5,"nodeType":"257","messageId":"258","endLine":12,"endColumn":21},{"ruleId":"255","severity":1,"message":"309","line":24,"column":5,"nodeType":"257","messageId":"258","endLine":24,"endColumn":16},{"ruleId":"255","severity":1,"message":"310","line":25,"column":5,"nodeType":"257","messageId":"258","endLine":25,"endColumn":14},{"ruleId":"255","severity":1,"message":"311","line":26,"column":5,"nodeType":"257","messageId":"258","endLine":26,"endColumn":10},{"ruleId":"255","severity":1,"message":"312","line":34,"column":13,"nodeType":"257","messageId":"258","endLine":34,"endColumn":19},{"ruleId":"255","severity":1,"message":"313","line":34,"column":21,"nodeType":"257","messageId":"258","endLine":34,"endColumn":27},{"ruleId":"255","severity":1,"message":"314","line":34,"column":29,"nodeType":"257","messageId":"258","endLine":34,"endColumn":36},{"ruleId":"255","severity":1,"message":"260","line":36,"column":24,"nodeType":"257","messageId":"258","endLine":36,"endColumn":39},{"ruleId":"255","severity":1,"message":"315","line":48,"column":11,"nodeType":"257","messageId":"258","endLine":48,"endColumn":23},{"ruleId":"255","severity":1,"message":"316","line":57,"column":11,"nodeType":"257","messageId":"258","endLine":57,"endColumn":23},{"ruleId":"255","severity":1,"message":"317","line":59,"column":13,"nodeType":"257","messageId":"258","endLine":59,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":155,"column":21,"nodeType":"320","messageId":"321","endLine":160,"endColumn":39},{"ruleId":"255","severity":1,"message":"322","line":23,"column":10,"nodeType":"257","messageId":"258","endLine":23,"endColumn":16},{"ruleId":"255","severity":1,"message":"323","line":23,"column":17,"nodeType":"257","messageId":"258","endLine":23,"endColumn":24},{"ruleId":"255","severity":1,"message":"324","line":23,"column":26,"nodeType":"257","messageId":"258","endLine":23,"endColumn":36},{"ruleId":"255","severity":1,"message":"312","line":28,"column":13,"nodeType":"257","messageId":"258","endLine":28,"endColumn":19},{"ruleId":"255","severity":1,"message":"313","line":28,"column":21,"nodeType":"257","messageId":"258","endLine":28,"endColumn":27},{"ruleId":"255","severity":1,"message":"314","line":28,"column":29,"nodeType":"257","messageId":"258","endLine":28,"endColumn":36},{"ruleId":"255","severity":1,"message":"260","line":30,"column":24,"nodeType":"257","messageId":"258","endLine":30,"endColumn":39},{"ruleId":"255","severity":1,"message":"316","line":42,"column":11,"nodeType":"257","messageId":"258","endLine":42,"endColumn":23},{"ruleId":"255","severity":1,"message":"317","line":44,"column":13,"nodeType":"257","messageId":"258","endLine":44,"endColumn":17},"no-native-reassign",["325"],"no-negated-in-lhs",["326"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'colorMode' is assigned a value but never used.","'toggleColorMode' is assigned a value but never used.","'setData' is assigned a value but never used.","'VStack' is defined but never used.","'RiVisaLine' is defined but never used.","'setCartItems' is assigned a value but never used.","'setShippingAddress' is assigned a value but never used.","'setCard' is assigned a value but never used.","'customer_id' is assigned a value but never used.","'useColorMode' is defined but never used.","'ButtonGroup' is defined but never used.","'HStack' is defined but never used.","'AddIcon' is defined but never used.","'MinusIcon' is defined but never used.","'CategorizedReviewPreview' is defined but never used.","'ReviewCountPreview' is defined but never used.","'setCategories' is assigned a value but never used.","'setActiveCategoryProducts' is assigned a value but never used.","'Center' is defined but never used.","'StarIcon' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'useState' is defined but never used.","'AvatarBadge' is defined but never used.","'AvatarGroup' is defined but never used.","'SearchBar' is defined but never used.","'Text' is defined but never used.","'Divider' is defined but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.","'setUserdata' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useDisclosure' is defined but never used.","'Avatar' is defined but never used.","'Heading' is defined but never used.","'Replys' is defined but never used.","'reviews' is assigned a value but never used.","'Image' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'name' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ImUser' is defined but never used.","'ImPhone' is defined but never used.","'ImLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\index.js":"1","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\App.js":"2","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Navbar.js":"3","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\SignIn.js":"4","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\SignUp.js":"5","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\Home.js":"6","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SearchBarHome.js":"7","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShopNow.js":"8","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomFooter.js":"9","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\LogIn.js":"10","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\Footer.js":"11","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomItems.js":"12","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\Register.js":"13","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Pricing\\Pricing.js":"14","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\globalStyles.js":"15","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomFooter.elements.js":"16","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\Footer.elements.js":"17","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\FormLogIn.js":"18","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\FormSignup.js":"19","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\FormSuccess.js":"20","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Pricing\\Pricing.elements.js":"21","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\useForm.js":"22","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\useForm.js":"23","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\validateInfo.js":"24","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\validateInfo.js":"25","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Middle.js":"26","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Sidebar.js":"27","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Seller\\SellerHome.js":"28","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Card.js":"29"},{"size":334,"mtime":1612982481978,"results":"30","hashOfConfig":"31"},{"size":2684,"mtime":1612982482076,"results":"32","hashOfConfig":"31"},{"size":4625,"mtime":1612982482049,"results":"33","hashOfConfig":"31"},{"size":457,"mtime":1612982156766,"results":"34","hashOfConfig":"31"},{"size":455,"mtime":1612982156766,"results":"35","hashOfConfig":"31"},{"size":630,"mtime":1612982156766,"results":"36","hashOfConfig":"31"},{"size":957,"mtime":1612982156703,"results":"37","hashOfConfig":"31"},{"size":743,"mtime":1612982156715,"results":"38","hashOfConfig":"31"},{"size":1715,"mtime":1612982156692,"results":"39","hashOfConfig":"31"},{"size":697,"mtime":1612982156747,"results":"40","hashOfConfig":"31"},{"size":2585,"mtime":1612982156699,"results":"41","hashOfConfig":"31"},{"size":2844,"mtime":1612982156694,"results":"42","hashOfConfig":"31"},{"size":853,"mtime":1612982156759,"results":"43","hashOfConfig":"31"},{"size":3559,"mtime":1612982156702,"results":"44","hashOfConfig":"31"},{"size":1127,"mtime":1612982156764,"results":"45","hashOfConfig":"31"},{"size":1298,"mtime":1612982156689,"results":"46","hashOfConfig":"31"},{"size":2442,"mtime":1612982156696,"results":"47","hashOfConfig":"31"},{"size":1619,"mtime":1612982156745,"results":"48","hashOfConfig":"31"},{"size":3598,"mtime":1612982156757,"results":"49","hashOfConfig":"31"},{"size":731,"mtime":1612982156757,"results":"50","hashOfConfig":"31"},{"size":2198,"mtime":1612982156702,"results":"51","hashOfConfig":"31"},{"size":900,"mtime":1612982156748,"results":"52","hashOfConfig":"31"},{"size":981,"mtime":1612982156759,"results":"53","hashOfConfig":"31"},{"size":1260,"mtime":1612982156760,"results":"54","hashOfConfig":"31"},{"size":455,"mtime":1612982156748,"results":"55","hashOfConfig":"31"},{"size":5524,"mtime":1612982156706,"results":"56","hashOfConfig":"31"},{"size":2403,"mtime":1612982156708,"results":"57","hashOfConfig":"31"},{"size":1795,"mtime":1612982156767,"results":"58","hashOfConfig":"31"},{"size":2242,"mtime":1612982156704,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p0i0kg",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\index.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\App.js",[],["134","135"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Navbar.js",["136","137","138","139","140","141"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Electrica\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\SignIn.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\SignUp.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Customer\\Home.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SearchBarHome.js",["142"],"import { SearchIcon } from \"@chakra-ui/icons\";\r\nimport React from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  IconButton,\r\n  Box,\r\n  Flex,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction SearchBarHome(props) {\r\n  return (\r\n    <Flex\r\n      marginTop=\"110px\"\r\n\r\n      borderBottom='5px solid #E8E8E8'\r\n      bg=\"#E8E8E8\"\r\n    >\r\n      <Box w=\"500px\" padding=\"15px\" marginLeft=\"30%\" >\r\n        <InputGroup bg='white' rounded='50px' border='blue'>\r\n          <InputRightElement >\r\n            <IconButton\r\n              colorScheme=\"blue\"\r\n              aria-label=\"Search database\"\r\n              icon={<SearchIcon />}\r\n            />\r\n          </InputRightElement>\r\n\r\n          <Input\r\n            placeholder={props.text}\r\n            name=\"search\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </InputGroup>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SearchBarHome;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\ShopNow.js",["143","144"],"import {\r\n  Button,\r\n  ReactRouterLink,\r\n  Link,\r\n  Box,\r\n  Text,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { GiShoppingCart } from \"react-icons/gi\";\r\n\r\nimport \"./ShopNow.css\";\r\n\r\nfunction ShopNow() {\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <video src=\"/videos/shop.mp4\" autoPlay loop muted/>\r\n      <Heading as=\"h1\" size=\"4xl\" color=\"black\">\r\n        LOTS OF FANCY ITEMS\r\n      </Heading>\r\n\r\n      <p>What are you waiting for?</p>\r\n      <div className=\"hero-btns\">\r\n        <Link as={ReactRouterLink} to=\"/\">\r\n          <Button color=\"\">SHOP NOW</Button>\r\n        </Link>\r\n        <GiShoppingCart size=\"100px\"  color='black'/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShopNow;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomFooter.js",["145"],"import React from \"react\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport {\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaYoutube,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  FooterContainer,\r\n  SocialMedia,\r\n  SocialMediaWrap,\r\n  SocialLogo,\r\n  SocialIcon,\r\n  WebsiteRights,\r\n  SocialIcons,\r\n  SocialIconLink,\r\n} from \"./BottomFooter.elements\";\r\n\r\nfunction BottomFooter(props) {\r\n  return (\r\n    <FooterContainer>\r\n      <SocialMedia>\r\n        <SocialMediaWrap>\r\n          <SocialLogo to=\"/\">\r\n            <SocialIcon />\r\n            {props.shopName}\r\n          </SocialLogo>\r\n          <WebsiteRights>Designed By University of Moratuwa | All Rights Resserved, © 2021</WebsiteRights>\r\n          <SocialIcons>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Facebook\">\r\n              <FaFacebook />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Instagram\">\r\n              <FaInstagram />\r\n            </SocialIconLink>\r\n            <SocialIconLink\r\n              href={\r\n                \"//www.youtube.com/\"\r\n              }\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              aria-label=\"Youtube\"\r\n            >\r\n              <FaYoutube />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Twitter\">\r\n              <FaTwitter />\r\n            </SocialIconLink>\r\n            <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"LinkedIn\">\r\n              <FaLinkedin />\r\n            </SocialIconLink>\r\n          </SocialIcons>\r\n        </SocialMediaWrap>\r\n      </SocialMedia>\r\n    </FooterContainer>\r\n  );\r\n}\r\n\r\nexport default BottomFooter;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\LogIn.js",["146","147"],"import React, { useState } from \"react\";\r\nimport \"./LogIn.css\";\r\nimport FormLogIn from \"./FormLogIn\";\r\n\r\nconst LogIn = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  return (\r\n    <>\r\n      {/**background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('../img/Midwife.jpg') !important;\r\n      background-size: cover !important; */}\r\n      <div className=\"login-container\">\r\n        <div className=\"login-content-left\">\r\n          <img className=\"login-img\" src=\"img/svg-4.svg\" alt=\"Security\" />\r\n        </div>\r\n        <FormLogIn />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\Footer.js",["148","149","150","151","152","153","154","155","156"],"import React from \"react\";\nimport { Button } from \"../../globalStyles\";\nimport {\n  FaFacebook,\n  FaInstagram,\n  FaYoutube,\n  FaTwitter,\n  FaLinkedin,\n} from \"react-icons/fa\";\nimport {\n  FooterContainer,\n  FooterSubscription,\n  FooterSubText,\n  FooterSubHeading,\n  Form,\n  FormInput,\n  FooterLinksContainer,\n  FooterLinksWrapper,\n  FooterLinkItems,\n  FooterLinkTitle,\n  FooterLink,\n} from \"./Footer.elements\";\nimport BottomFooter from \"./BottomFooter\";\nfunction Footer() {\n  return (\n    <div>\n      <FooterContainer>\n        <FooterSubscription>\n          <FooterSubHeading>\n            Join us and have the best items at best prices!\n          </FooterSubHeading>\n          <FooterSubText>Start shopping today and experience the premium shopping</FooterSubText>\n          \n        </FooterSubscription>\n        <FooterLinksContainer>\n          <FooterLinksWrapper>\n            <FooterLinkItems>\n              <FooterLinkTitle>About Us</FooterLinkTitle>\n              <FooterLink to=\"/sign-up\">How it works</FooterLink>\n              <FooterLink to=\"/\">Testimonials</FooterLink>\n              <FooterLink to=\"/\">Careers</FooterLink>\n              <FooterLink to=\"/\">Investors</FooterLink>\n              <FooterLink to=\"/\">Terms of Service</FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems>\n              <FooterLinkTitle>Contact Us</FooterLinkTitle>\n              <FooterLink to=\"/\">Contact</FooterLink>\n              <FooterLink to=\"/\">Support</FooterLink>\n              <FooterLink to=\"/\">Destinations</FooterLink>\n              <FooterLink to=\"/\">Sponsorships</FooterLink>\n            </FooterLinkItems>\n          </FooterLinksWrapper>\n          <FooterLinksWrapper>\n            <FooterLinkItems>\n              <FooterLinkTitle>Videos</FooterLinkTitle>\n              <FooterLink to=\"/\">Submit Video</FooterLink>\n              <FooterLink to=\"/\">Ambassadors</FooterLink>\n              <FooterLink to=\"/\">Agency</FooterLink>\n              <FooterLink to=\"/\">Influencer</FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems>\n              <FooterLinkTitle>Social Media</FooterLinkTitle>\n              <FooterLink to=\"/\">Instagram</FooterLink>\n              <FooterLink to=\"/\">Facebook</FooterLink>\n              <FooterLink to=\"/\">Youtube</FooterLink>\n              <FooterLink to=\"/\">Twitter</FooterLink>\n            </FooterLinkItems>\n          </FooterLinksWrapper>\n        </FooterLinksContainer>\n      </FooterContainer>\n    </div>\n  );\n}\n\nexport default Footer;\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomItems.js",["157","158","159","160","161","162","163","164","165","166","167","168","169"],"import { Box, Center, Icon, SimpleGrid } from \"@chakra-ui/react\";\r\nimport { CardGiftcard, CreditCardRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport {\r\n  GiBuyCard,\r\n  GiCardPick,\r\n  GiCreditsCurrency,\r\n  GiCrossedPistols,\r\n  GiCrystalBars,\r\n  GiCutDiamond,\r\n  GiMoneyStack,\r\n  GiPayMoney,\r\n  GiSecurityGate,\r\n  GiSellCard,\r\n  GiTruck,\r\n} from \"react-icons/gi\";\r\nimport { MdAttachMoney, MdCreditCard, MdSecurity, MdSettings } from \"react-icons/md\";\r\nexport default function BottomItems() {\r\n  return (\r\n    // Passing `columns={[2, null, 3]}` and `columns={{sm: 2, md: 3}}`\r\n    // will have the same effect.\r\n\r\n    <SimpleGrid columns={[2, null, 4]} spacing=\"0px\">\r\n      <Box\r\n        bg=\"white\"\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <Icon as={MdAttachMoney} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center color=\"black\" fontWeight=\"BOLD\">\r\n          Great Value\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n        We offer competitive prices on our 1000 plus product range.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg=\"white\"\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          <Icon as={MdCreditCard} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center color=\"black\" fontWeight=\"BOLD\">\r\n            Safe Payment\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          Pay with the world’s most popular and secure payment methods.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg=\"white\"\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n          \r\n        \r\n          <Icon as={MdSecurity} w={20} h={20} />{\" \"}\r\n        </Center>\r\n        <Box>\r\n          <Center color=\"black\" fontWeight=\"BOLD\">\r\n          Shop with Confidence\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n        Our Buyer Protection covers your purchase from click to delivery.\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        bg=\"white\"\r\n        height=\"250px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"#E8E8E8\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Center>\r\n        <GiTruck size='80px' width='20px'/>\r\n        </Center>\r\n        <Box>\r\n          <Center color=\"black\" fontWeight=\"BOLD\">\r\n          Country Wide Delivery\r\n          </Center>\r\n        </Box>\r\n        <Box padding=\"5%\" textAlign=\"center\">\r\n          Pay with the world’s most popular and secure payment methods.\r\n        </Box>\r\n      </Box>\r\n    </SimpleGrid>\r\n  );\r\n}\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\Register.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Pricing\\Pricing.js",["170","171","172","173","174","175","176","177","178"],"import React from 'react';\nimport { Button } from '../../globalStyles';\nimport { AiFillThunderbolt } from 'react-icons/ai';\nimport { GiAllForOne, GiArtificialIntelligence, GiCartwheel, GiCrystalBars, GiDeliveryDrone, GiNewBorn, GiShoppingBag, GiShoppingCart } from 'react-icons/gi';\nimport { GiCutDiamond, GiRock } from 'react-icons/gi';\nimport { GiFloatingCrystal } from 'react-icons/gi';\nimport { IconContext } from 'react-icons/lib';\nimport {\n  PricingSection,\n  PricingWrapper,\n  PricingHeading,\n  PricingContainer,\n  PricingCard,\n  PricingCardInfo,\n  PricingCardIcon,\n  PricingCardPlan,\n  PricingCardCost,\n  PricingCardLength,\n  PricingCardFeatures,\n  PricingCardFeature\n} from './Pricing.elements';\n\nfunction Pricing(props) {\n  return (\n    <IconContext.Provider value={{ color: '#a9b3c1', size: 64 }}>\n      <PricingSection>\n        <PricingWrapper>\n          <PricingHeading>{props.heading}</PricingHeading>\n          <PricingContainer>\n            <PricingCard to='/'>\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiShoppingBag />\n                </PricingCardIcon>\n                <PricingCardPlan>All Categories</PricingCardPlan>\n                <PricingCardCost>6+</PricingCardCost>\n                <PricingCardLength>categories</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>100+ New Users Everyday</PricingCardFeature>\n                  <PricingCardFeature>Best Store in Sri Lanka</PricingCardFeature>\n                  <PricingCardFeature>Trending Items</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n            <PricingCard to='/'>\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiNewBorn />\n                </PricingCardIcon>\n                <PricingCardPlan>New Arrivals</PricingCardPlan>\n                <PricingCardCost>150+</PricingCardCost>\n                <PricingCardLength>arrivals per day</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>Trending shop in the country</PricingCardFeature>\n                  <PricingCardFeature>Premium Shopping</PricingCardFeature>\n                  <PricingCardFeature>Buy and Feel It</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n            <PricingCard to='/'>\n              <PricingCardInfo>\n                <PricingCardIcon>\n                  <GiCutDiamond />\n                </PricingCardIcon>\n                <PricingCardPlan>Most Ordered Items</PricingCardPlan>\n                <PricingCardCost>500+</PricingCardCost>\n                <PricingCardLength>orders per day</PricingCardLength>\n                <PricingCardFeatures>\n                  <PricingCardFeature>You will experience the difference</PricingCardFeature>\n                  <PricingCardFeature>Best Prices for Best Products</PricingCardFeature>\n                  <PricingCardFeature>24/7 Support</PricingCardFeature>\n                </PricingCardFeatures>\n                <Button primary>Check Out</Button>\n              </PricingCardInfo>\n            </PricingCard>\n            \n          </PricingContainer>\n        </PricingWrapper>\n      </PricingSection>\n    </IconContext.Provider>\n  );\n}\nexport default Pricing;\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\globalStyles.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\BottomFooter.elements.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Footer\\Footer.elements.js",["179"],"import styled from 'styled-components';\nimport { FaMagento } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nexport const FooterContainer = styled.div`\n  background-color: #E8E8E8;\n  padding: 4rem 0 2rem 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FooterSubscription = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-bottom: 24px;\n  padding: 24px;\n  color: #fff;\n`;\n\nexport const FooterSubHeading = styled.p`\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\n    'Lucida Sans', Arial, sans-serif;\n  margin-bottom: 24px;\n  font-size: 24px;\n  color: black;\n`;\n\nexport const FooterSubText = styled.p`\n  margin-bottom: 24px;\n  font-size: 20px;\n  color: black;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n    width: 80%;\n  }\n`;\n\nexport const FormInput = styled.input`\n  padding: 10px 20px;\n  border-radius: 2px;\n  margin-right: 10px;\n  outline: none;\n  border: none;\n  font-size: 16px;\n  border: 1px solid #fff;\n\n  &::placeholder {\n    color: #242424;\n  }\n\n  @media screen and (max-width: 820px) {\n    width: 100%;\n    margin: 0 0 16px 0;\n  }\n`;\n\nexport const FooterLinksContainer = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  display: flex;\n  justify-content: center;\n  color: black;\n\n  @media screen and (max-width: 820px) {\n    padding-top: 32px;\n  }\n`;\n\nexport const FooterLinksWrapper = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n  }\n`;\n\nexport const FooterLinkItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 16px;\n  text-align: left;\n  width: 160px;\n  box-sizing: border-box;\n  color: black;\n\n  @media screen and (max-width: 420px) {\n    margin: 0;\n    padding: 10px;\n    width: 100%;\n  }\n`;\n\nexport const FooterLinkTitle = styled.h2`\n  margin-bottom: 16px;\n  underlined\n`;\n\nexport const FooterLink = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  margin-bottom: 0.5rem;\n  color: black;\n  &:hover {\n    color: #0467fb;\n    transition: 0.3s ease-out;\n  }\n`;\n\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\FormLogIn.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\FormSignup.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\FormSuccess.js",["180","181"],"import { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Button, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport \"./Register.css\";\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <h1 className=\"form-success\">\r\n        You have successfully registered!\r\n        <br />\r\n        Now Log In{\" \"}\r\n        <a href=\"signin\">\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"red\"\r\n            variant=\"outline\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </a>\r\n      </h1>\r\n      <img className=\"form-img-2\" src=\"img/img-3.svg\" alt=\"success-image\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Pricing\\Pricing.elements.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\useForm.js",["182"],"import { useState, useEffect } from 'react';\r\n\r\n//custom hook\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      //If there are no errors and submitted it wil call submitForm function(callback())\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n        callback();\r\n      }\r\n    },\r\n    [errors]\r\n  );\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\useForm.js",["183"],"import { useState, useEffect } from 'react';\n\n//custom hook\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    firstname: '',\n    lastname: '',\n    phonenumber: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n\n  useEffect(\n    () => {\n      //If there are no errors and submitted it wil call submitForm function(callback())\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignUp\\validateInfo.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\SignIn\\validateInfo.js",[],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Middle.js",["184","185","186"],"import React from \"react\";\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Text,\r\n  IconButton,\r\n  Tooltip,\r\n  Avatar,\r\n  Center,\r\n  Badge,\r\n  Progress\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { AvatarBadge } from \"@chakra-ui/react\";\r\nimport \"./Middle.css\";\r\nimport { FaDollarSign } from \"react-icons/fa\";\r\nimport { Money, MoneyOff } from \"@material-ui/icons\";\r\nimport { GiCartwheel, GiShoppingBag, GiShoppingCart } from \"react-icons/gi\";\r\nimport { FiUserPlus } from \"react-icons/fi\";\r\n\r\nfunction Middle() {\r\n  return (\r\n    <>\r\n      <div className=\"dashboard\">\r\n        <Box\r\n          borderStyle=\"solid\"\r\n          borderColor=\"gray.800\"\r\n          boarderRadius=\"200px\"\r\n          mt=\"0px\"\r\n          pl=\"20px\"\r\n          pr=\"20px\"\r\n          pt=\"150px\"\r\n          h=\"700px\"\r\n          mb=\"20px\"\r\n          bg=\"linear-gradient( blue -80%, white 100%);\"\r\n        >\r\n          <Box\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.200\"\r\n            borderWidth=\"2px\"\r\n            p=\"10px\"\r\n            pt=\"30px\"\r\n            mt=\"-120px\"\r\n            borderRadius=\"20px\"\r\n          >\r\n            <Center mb=\"5px\" mt=\"10px\">\r\n              <Avatar bg=\"red.500\">\r\n                <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\r\n              </Avatar>\r\n            </Center>\r\n\r\n            <Box h=\"50px\" mb=\"70px\">\r\n              <Center>\r\n                <Text color=\"black\">C.P.Amarasena</Text>\r\n              </Center>\r\n              <Progress\r\n                colorScheme=\"green\"\r\n                size=\"xs\"\r\n                mr=\"45%\"\r\n                ml=\"45%\"\r\n                mb=\"5px\"\r\n                isIndeterminate\r\n              />\r\n              <Center mb=\"10px\">\r\n                <Badge variant=\"solid\" colorScheme=\"green\">\r\n                  Online\r\n                </Badge>\r\n              </Center>\r\n              \r\n            </Box>\r\n\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              mt=\"100px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Total Revenue\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.900\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    variant=\"outline\"\r\n                    colorScheme=\"blue\"\r\n                    aria-label=\"\"\r\n                    icon={<FaDollarSign />}\r\n                  />\r\n                  Total Revenue : 15000$\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Today Revenue\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.900\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    colorScheme=\"green\"\r\n                    aria-label=\"\"\r\n                    variant=\"outline\"\r\n                    icon={<Money />}\r\n                  />\r\n                  Today Revenue : 440$\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Today Orders\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    colorScheme=\"red\"\r\n                    aria-label=\"\"\r\n                    variant=\"outline\"\r\n                    icon={<GiShoppingCart size=\"20px\" />}\r\n                  />\r\n                  Today Orders : 1500\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Awaiting for shipment orders\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    colorScheme=\"black\"\r\n                    aria-label=\"\"\r\n                    variant=\"outline\"\r\n                    icon={<GiShoppingBag size=\"20px\" />}\r\n                  />\r\n                  Awaiting for shipment : 120\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n            <Box\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.200\"\r\n              borderWidth=\"2px\"\r\n              h=\"70px\"\r\n              m=\"10px\"\r\n              borderRadius=\"10px\"\r\n            >\r\n              <Tooltip label=\"Today New Users\" fontSize=\"md\">\r\n                <Text pl=\"2px\" color=\"gray.700\" isTruncated>\r\n                  <IconButton\r\n                    m=\"10px\"\r\n                    colorScheme=\"cyan\"\r\n                    aria-label=\"\"\r\n                    variant=\"outline\"\r\n                    icon={<FiUserPlus size=\"20px\" />}\r\n                  />\r\n                  Today New Users : 60\r\n                </Text>\r\n              </Tooltip>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Middle;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Sidebar.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\pages\\Seller\\SellerHome.js",["206","207","208"],"import React from \"react\";\r\nimport BottomFooter from \"../../components/Footer/BottomFooter\";\r\nimport BottomItems from \"../../components/Footer/BottomItems\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport SearchBarHome from \"../../components/SearchBarHome\";\r\nimport Middle from \"../../components/Seller/Middle\";\r\nimport Card from \"../../components/Seller/Card\";\r\nimport { Box, Flex, Skeleton, Stack } from \"@chakra-ui/react\";\r\nimport { AiFillExperiment } from \"react-icons/ai\";\r\n\r\nfunction SellerHome() {\r\n  return (\r\n    <>\r\n    <SearchBarHome />\r\n      <Middle />\r\n      <Stack mb='25px' p='10px'>\r\n                <Skeleton height=\"40px\" />\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"10px\" />\r\n              </Stack>\r\n      <div className=\"buttons\" p=\"10px\">\r\n        <Card\r\n          imageUrl=\"./img/svg-1.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"Awaiting Shipment Orders\"\r\n          count=\"34 new orders received today\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-5.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"Awaiting Delivery Orders \"\r\n          count=\"20 orders waiting for delivery\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-2.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"All Orders\"\r\n          count=\"5100 total orders\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-8.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"My Items\"\r\n          count=\"You have listed 20 items\"\r\n        />\r\n        <Card\r\n          imageUrl=\"./img/svg-6.svg\"\r\n          imageAlt=\"User\"\r\n          type=\"List New Item\"\r\n          count=\"\"\r\n        />\r\n      </div>\r\n      <BottomItems />\r\n      <Footer />\r\n      <BottomFooter shopName=\"Electrica\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SellerHome;\r\n","E:\\ReactApps\\DatabaseProject\\front-end-react\\src\\components\\Seller\\Card.js",["209","210"],"import React from 'react';\r\nimport {\r\n  Box,\r\n  Image,\r\n  Badge,\r\n  Grid,\r\n  GridItem,\r\n  Center,\r\n  Button,\r\n  Heading,\r\n} from '@chakra-ui/react';\r\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\r\nimport {  MdSend, MdZoomIn } from 'react-icons/md';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <Box\r\n      width=\"auto\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      overflow=\"hidden\"\r\n      p=\"10px\"\r\n      mb=\"10px\"\r\n      ml=\"20px\"\r\n      mr=\"20px\"\r\n    >\r\n      <Grid\r\n        h=\"auto\"\r\n        templateColumns=\"repeat(8, 1fr)\"\r\n        templateRows=\"repeat(3, 1fr)\"\r\n        gap={4}\r\n      >\r\n        <GridItem\r\n          colSpan={{ base: 8, md: 2 }}\r\n          rowSpan={{ base: 1, md: 3 }}\r\n          pt=\"12px\"\r\n        >\r\n          <Center>\r\n            <Image\r\n              src={props.imageUrl}\r\n              alt={props.imageAlt}\r\n              borderRadius=\"full\"\r\n              boxSize=\"190px\"\r\n            />\r\n          </Center>\r\n        </GridItem>\r\n\r\n        <GridItem colSpan={{ base: 8, md: 5 }} rowSpan={{ base: 1, md: 3 }}>\r\n          <Box p=\"6\">\r\n            <Box d=\"flex\" alignItems=\"baseline\">\r\n              <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                Secured\r\n              </Badge>\r\n            </Box>\r\n\r\n            <Box\r\n              mt=\"1\"\r\n              fontWeight=\"semibold\"\r\n              as=\"h4\"\r\n              lineHeight=\"tight\"\r\n            >\r\n              <Heading as=\"h5\" size=\"2xl\">\r\n                {props.type}\r\n              </Heading>\r\n            </Box>\r\n\r\n            <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n              <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n                {props.count}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem\r\n          colSpan={{ base: 8, md: 1 }}\r\n          rowSpan={{ base: 1, md: 3 }}\r\n          pt=\"50px\"\r\n        >\r\n          <Button\r\n            rightIcon={<ArrowForwardIcon />}\r\n            colorScheme=\"teal\"\r\n            variant=\"outline\"\r\n            size=\"lg\"\r\n            rightIcon={<MdSend/>}\r\n          >\r\n            Check\r\n          </Button>\r\n          \r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n",{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":10},{"ruleId":"215","severity":1,"message":"219","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":16},{"ruleId":"215","severity":1,"message":"220","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":8},{"ruleId":"215","severity":1,"message":"221","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":15},{"ruleId":"215","severity":1,"message":"222","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":15},{"ruleId":"215","severity":1,"message":"223","line":18,"column":16,"nodeType":"217","messageId":"218","endLine":18,"endColumn":24},{"ruleId":"215","severity":1,"message":"224","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":9},{"ruleId":"215","severity":1,"message":"225","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":6},{"ruleId":"215","severity":1,"message":"226","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":7},{"ruleId":"215","severity":1,"message":"227","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":16},{"ruleId":"215","severity":1,"message":"228","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":21},{"ruleId":"215","severity":1,"message":"229","line":8,"column":12,"nodeType":"217","messageId":"218","endLine":8,"endColumn":22},{"ruleId":"215","severity":1,"message":"227","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":16},{"ruleId":"215","severity":1,"message":"230","line":4,"column":3,"nodeType":"217","messageId":"218","endLine":4,"endColumn":13},{"ruleId":"215","severity":1,"message":"231","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":14},{"ruleId":"215","severity":1,"message":"232","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":12},{"ruleId":"215","severity":1,"message":"233","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":12},{"ruleId":"215","severity":1,"message":"234","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":13},{"ruleId":"215","severity":1,"message":"235","line":15,"column":3,"nodeType":"217","messageId":"218","endLine":15,"endColumn":7},{"ruleId":"215","severity":1,"message":"236","line":16,"column":3,"nodeType":"217","messageId":"218","endLine":16,"endColumn":12},{"ruleId":"215","severity":1,"message":"237","line":23,"column":8,"nodeType":"217","messageId":"218","endLine":23,"endColumn":20},{"ruleId":"215","severity":1,"message":"238","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":22},{"ruleId":"215","severity":1,"message":"239","line":2,"column":24,"nodeType":"217","messageId":"218","endLine":2,"endColumn":41},{"ruleId":"215","severity":1,"message":"240","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":12},{"ruleId":"215","severity":1,"message":"241","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":13},{"ruleId":"215","severity":1,"message":"242","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":20},{"ruleId":"215","severity":1,"message":"243","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":19},{"ruleId":"215","severity":1,"message":"244","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":16},{"ruleId":"215","severity":1,"message":"245","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":15},{"ruleId":"215","severity":1,"message":"246","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":15},{"ruleId":"215","severity":1,"message":"247","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":13},{"ruleId":"215","severity":1,"message":"248","line":13,"column":3,"nodeType":"217","messageId":"218","endLine":13,"endColumn":17},{"ruleId":"215","severity":1,"message":"249","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":13},{"ruleId":"215","severity":1,"message":"250","line":17,"column":51,"nodeType":"217","messageId":"218","endLine":17,"endColumn":61},{"ruleId":"215","severity":1,"message":"251","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":27},{"ruleId":"215","severity":1,"message":"252","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":21},{"ruleId":"215","severity":1,"message":"253","line":4,"column":23,"nodeType":"217","messageId":"218","endLine":4,"endColumn":47},{"ruleId":"215","severity":1,"message":"254","line":4,"column":49,"nodeType":"217","messageId":"218","endLine":4,"endColumn":60},{"ruleId":"215","severity":1,"message":"244","line":4,"column":62,"nodeType":"217","messageId":"218","endLine":4,"endColumn":75},{"ruleId":"215","severity":1,"message":"255","line":4,"column":77,"nodeType":"217","messageId":"218","endLine":4,"endColumn":92},{"ruleId":"215","severity":1,"message":"256","line":4,"column":120,"nodeType":"217","messageId":"218","endLine":4,"endColumn":134},{"ruleId":"215","severity":1,"message":"257","line":5,"column":24,"nodeType":"217","messageId":"218","endLine":5,"endColumn":30},{"ruleId":"215","severity":1,"message":"258","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":27},{"ruleId":"215","severity":1,"message":"259","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":19},{"ruleId":"215","severity":1,"message":"226","line":2,"column":18,"nodeType":"217","messageId":"218","endLine":2,"endColumn":22},{"ruleId":"260","severity":1,"message":"261","line":23,"column":7,"nodeType":"262","endLine":23,"endColumn":77},{"ruleId":"263","severity":1,"message":"264","line":36,"column":5,"nodeType":"265","endLine":36,"endColumn":13,"suggestions":"266"},{"ruleId":"263","severity":1,"message":"264","line":40,"column":5,"nodeType":"265","endLine":40,"endColumn":13,"suggestions":"267"},{"ruleId":"215","severity":1,"message":"268","line":3,"column":3,"nodeType":"217","messageId":"218","endLine":3,"endColumn":17},{"ruleId":"215","severity":1,"message":"269","line":17,"column":17,"nodeType":"217","messageId":"218","endLine":17,"endColumn":25},{"ruleId":"215","severity":1,"message":"254","line":18,"column":10,"nodeType":"217","messageId":"218","endLine":18,"endColumn":21},{"ruleId":"215","severity":1,"message":"270","line":3,"column":3,"nodeType":"217","messageId":"218","endLine":3,"endColumn":7},{"ruleId":"215","severity":1,"message":"216","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":10},{"ruleId":"215","severity":1,"message":"271","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":15},{"ruleId":"215","severity":1,"message":"272","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":13},{"ruleId":"215","severity":1,"message":"219","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":16},{"ruleId":"215","severity":1,"message":"226","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":7},{"ruleId":"215","severity":1,"message":"273","line":13,"column":3,"nodeType":"217","messageId":"218","endLine":13,"endColumn":9},{"ruleId":"215","severity":1,"message":"274","line":16,"column":3,"nodeType":"217","messageId":"218","endLine":16,"endColumn":8},{"ruleId":"215","severity":1,"message":"275","line":17,"column":3,"nodeType":"217","messageId":"218","endLine":17,"endColumn":5},{"ruleId":"215","severity":1,"message":"276","line":18,"column":3,"nodeType":"217","messageId":"218","endLine":18,"endColumn":5},{"ruleId":"215","severity":1,"message":"277","line":19,"column":3,"nodeType":"217","messageId":"218","endLine":19,"endColumn":8},{"ruleId":"215","severity":1,"message":"278","line":20,"column":3,"nodeType":"217","messageId":"218","endLine":20,"endColumn":5},{"ruleId":"215","severity":1,"message":"279","line":21,"column":3,"nodeType":"217","messageId":"218","endLine":21,"endColumn":8},{"ruleId":"215","severity":1,"message":"280","line":22,"column":3,"nodeType":"217","messageId":"218","endLine":22,"endColumn":15},{"ruleId":"215","severity":1,"message":"281","line":23,"column":3,"nodeType":"217","messageId":"218","endLine":23,"endColumn":19},{"ruleId":"215","severity":1,"message":"282","line":24,"column":3,"nodeType":"217","messageId":"218","endLine":24,"endColumn":8},{"ruleId":"215","severity":1,"message":"283","line":25,"column":3,"nodeType":"217","messageId":"218","endLine":25,"endColumn":11},{"ruleId":"215","severity":1,"message":"284","line":28,"column":10,"nodeType":"217","messageId":"218","endLine":28,"endColumn":16},{"ruleId":"215","severity":1,"message":"285","line":28,"column":18,"nodeType":"217","messageId":"218","endLine":28,"endColumn":29},{"ruleId":"215","severity":1,"message":"225","line":8,"column":10,"nodeType":"217","messageId":"218","endLine":8,"endColumn":13},{"ruleId":"215","severity":1,"message":"270","line":8,"column":15,"nodeType":"217","messageId":"218","endLine":8,"endColumn":19},{"ruleId":"215","severity":1,"message":"286","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":26},{"ruleId":"215","severity":1,"message":"287","line":13,"column":19,"nodeType":"217","messageId":"218","endLine":13,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":84,"column":13,"nodeType":"290","endLine":84,"endColumn":34},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'Heading' is defined but never used.","Identifier","unusedVar","'useDisclosure' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'Redirect' is defined but never used.","'Center' is defined but never used.","'Box' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","'isSubmitted' is assigned a value but never used.","'submitForm' is defined but never used.","'FaFacebook' is defined but never used.","'FaInstagram' is defined but never used.","'FaYoutube' is defined but never used.","'FaTwitter' is defined but never used.","'FaLinkedin' is defined but never used.","'Form' is defined but never used.","'FormInput' is defined but never used.","'BottomFooter' is defined but never used.","'CardGiftcard' is defined but never used.","'CreditCardRounded' is defined but never used.","'GiBuyCard' is defined but never used.","'GiCardPick' is defined but never used.","'GiCreditsCurrency' is defined but never used.","'GiCrossedPistols' is defined but never used.","'GiCrystalBars' is defined but never used.","'GiCutDiamond' is defined but never used.","'GiMoneyStack' is defined but never used.","'GiPayMoney' is defined but never used.","'GiSecurityGate' is defined but never used.","'GiSellCard' is defined but never used.","'MdSettings' is defined but never used.","'AiFillThunderbolt' is defined but never used.","'GiAllForOne' is defined but never used.","'GiArtificialIntelligence' is defined but never used.","'GiCartwheel' is defined but never used.","'GiDeliveryDrone' is defined but never used.","'GiShoppingCart' is defined but never used.","'GiRock' is defined but never used.","'GiFloatingCrystal' is defined but never used.","'FaMagento' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["293"],["294"],"'ChakraProvider' is defined but never used.","'MoneyOff' is defined but never used.","'Flex' is defined but never used.","'useColorMode' is defined but never used.","'IconButton' is defined but never used.","'Square' is defined but never used.","'Table' is defined but never used.","'Td' is defined but never used.","'Tr' is defined but never used.","'Thead' is defined but never used.","'Th' is defined but never used.","'Tbody' is defined but never used.","'TableCaption' is defined but never used.","'CircularProgress' is defined but never used.","'Badge' is defined but never used.","'Progress' is defined but never used.","'Avatar' is defined but never used.","'AvatarBadge' is defined but never used.","'AiFillExperiment' is defined but never used.","'MdZoomIn' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"295","fix":"297"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"298","text":"299"},{"range":"300","text":"299"},[758,766],"[callback, errors, isSubmitting]",[835,843]]
>>>>>>> master
